Content-Type: multipart/related; start=<op.mhtml.1423167211152.1b1d6932537af9a5@192.168.0.100>; boundary=----------mQ8e0uCHgjsNvBy4xNu11F
Content-Location: http://leafletjs.com/reference.html
Subject: =?utf-8?Q?Documentation=20-=20Leaflet=20-=20a=20JavaScript=20library=20for=20mobile-friendly=20maps?=
MIME-Version: 1.0

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=reference.html
Content-Type: text/html; charset=utf-8; name=reference.html
Content-ID: <op.mhtml.1423167211152.1b1d6932537af9a5@192.168.0.100>
Content-Location: http://leafletjs.com/reference.html
Content-Transfer-Encoding: 8bit

<!DOCTYPE html>
<html>
<head>
	

	<title>Documentation - Leaflet - a JavaScript library for mobile-friendly maps</title>

	<meta charset="utf-8" />

	

	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	

	<link rel="icon" type="image/png" href="docs/images/favicon.png" />

	<link href="http://leafletjs.com/atom.xml" type="application/atom+xml" rel="alternate" title="Leaflet Dev Blog Atom Feed" />

	<!-- Blueprint -->
	<link rel="stylesheet" href="docs/css/blueprint/screen.css" media="screen, projection">
	<link rel="stylesheet" href="docs/css/blueprint/print.css" media="print">

	<link rel="stylesheet" href="docs/css/screen.css" media="screen, projection" />

	<script src="docs/highlight/highlight.pack.js"></script>
	<link rel="stylesheet" href="docs/highlight/styles/github.css" />

	<!-- Leaflet -->
	<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
	<script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>

	

	<script>
		MB_ATTR = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
				'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
				'Imagery © <a href="http://mapbox.com">Mapbox</a>';

		MB_URL = 'http://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png';

		OSM_URL = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
		OSM_ATTRIB = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors';
	</script>
</head>
<body class="api-page">
	<div class="container">
		<h1><a href="http://leafletjs.com">Leaflet</a></h1>
		<h3 class="alt">An Open-Source JavaScript Library for Mobile-Friendly Interactive Maps</h3>

		<div class="social-buttons">
			<iframe src="http://ghbtns.com/github-btn.html?user=Leaflet&amp;repo=Leaflet&amp;type=watch&amp;count=true" allowtransparency="true" frameborder="0" scrolling="0" width="104px" height="20px"></iframe>

			<a href="http://twitter.com/share" class="twitter-share-button" data-url="http://leafletjs.com" data-text="Leaflet — an open-source JavaScript library for mobile-friendly interactive maps" data-via="LeafletJS" data-related="CloudMade" data-count="none">Tweet</a>

			<a href="https://twitter.com/LeafletJS" class="twitter-follow-button" data-show-count="true" data-show-screen-name="false">Follow @LeafletJS</a>

			<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="http://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>

			<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fleafletjs.com&amp;layout=button_count&amp;show_faces=false&amp;width=93&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=35" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:93px; height:20px;" allowTransparency="true"></iframe>

			<!--<div class="g-plusone" data-size="medium" data-href="http://leafletjs.com/"></div>

			<script type="text/javascript">
			  (function() {
			    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			    po.src = 'https://apis.google.com/js/plusone.js';
			    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
			  })();
			</script>-->
		</div>

		<ul class="nav clearfix">
			<li>
				
					<a href="index.html">Overview</a>
				
			</li>
			<li>
				
					<a href="features.html">Features</a>
				
			</li>
			<li>
				
					<a href="examples.html">Tutorials</a>
				
			</li>
			<li>
				
					<span>API</span>
				
			</li>
			<li>
				
					<a href="download.html">Download</a>
				
			</li>
			<li>
				
					<a href="plugins.html">Plugins</a>
				
			</li>
			<li>
				
					<a href="blog.html">Blog</a>
				
			</li>
			<li><a class="forum-link" href="https://groups.google.com/forum/#!forum/leaflet-js">Forum</a></li>
			<li><a class="twitter-link" href="http://twitter.com/LeafletJS">Twitter</a></li>
			<li><a class="github-link" href="http://github.com/Leaflet/Leaflet">GitHub</a></li>
		</ul>

		<div id="toc" class="clearfix">
	<div class="span-5 colborder">
		<h4>Map</h4>
		<ul>
			<li><a href="#map-usage">Usage example</a></li>
			<li><a href="#map-constructor">Creation</a></li>
			<li><a href="#map-options">Options</a></li>
			<li><a href="#map-events">Events</a></li>
		</ul>
		<h4>Map Methods</h4>
		<ul>
			<li><a href="#map-set-methods">For modifying map state</a></li>
			<li><a href="#map-get-methods">For getting map state</a></li>
			<li><a href="#map-stuff-methods">For layers and controls</a></li>
			<li><a href="#map-conversion-methods">Conversion methods</a></li>
			<li><a href="#map-misc-methods">Other methods</a></li>
		</ul>
		<h4>Map Misc</h4>
		<ul>
			<li><a href="#map-properties">Properties</a></li>
			<li><a href="#map-panes">Panes</a></li>
		</ul>
	</div>
	<div class="span-3">
		<h4>UI Layers</h4>
		<ul>
			<li><a href="#marker">Marker</a></li>
			<li><a href="#popup">Popup</a></li>
		</ul>
		<h4>Raster Layers</h4>
		<ul>
			<li><a href="#tilelayer">TileLayer</a></li>
			<li><a href="#tilelayer-wms">TileLayer.WMS</a></li>
			<li><a href="#tilelayer-canvas">TileLayer.Canvas</a></li>
			<li><a href="#imageoverlay">ImageOverlay</a></li>
		</ul>
		<h4>Vector Layers</h4>
		<ul>
			<li><a href="#path">Path</a></li>
			<li><a href="#polyline">Polyline</a></li>
			<li><a href="#multipolyline">MultiPolyline</a></li>
			<li><a href="#polygon">Polygon</a></li>
			<li><a href="#multipolygon">MultiPolygon</a></li>
			<li><a href="#rectangle">Rectangle</a></li>
			<li><a href="#circle">Circle</a></li>
			<li><a href="#circlemarker">CircleMarker</a></li>
		</ul>
	</div>
	<div class="span-3">
		<h4>Other Layers</h4>
		<ul>
			<li><a href="#layergroup">LayerGroup</a></li>
			<li><a href="#featuregroup">FeatureGroup</a></li>
			<li><a href="#geojson">GeoJSON</a></li>
		</ul>
		<h4>Basic Types</h4>
		<ul>
			<li><a href="#latlng">LatLng</a></li>
			<li><a href="#latlngbounds">LatLngBounds</a></li>
			<li><a href="#point">Point</a></li>
			<li><a href="#bounds">Bounds</a></li>
			<li><a href="#icon">Icon</a></li>
			<li><a href="#divicon">DivIcon</a></li>
		</ul>
		<h4>Controls</h4>
		<ul>
			<li><a href="#control">Control</a></li>
			<li><a href="#control-zoom">Zoom</a></li>
			<li><a href="#control-attribution">Attribution</a></li>
			<li><a href="#control-layers">Layers</a></li>
			<li><a href="#control-scale">Scale</a></li>
		</ul>
	</div>
	<div class="span-3">
		<h4>Events</h4>
		<ul>
			<li><a href="#events">Event methods</a></li>
			<li><a href="#event-objects">Event objects</a></li>
		</ul>
		<h4>Utility</h4>
		<ul>
			<li><a href="#class">Class</a></li>
			<li><a href="#browser">Browser</a></li>
			<li><a href="#util">Util</a></li>
			<li><a href="#transformation">Transformation</a></li>
			<li><a href="#lineutil">LineUtil</a></li>
			<li><a href="#polyutil">PolyUtil</a></li>
		</ul>
		<h4>DOM Utility</h4>
		<ul>
			<li><a href="#domevent">DomEvent</a></li>
			<li><a href="#domutil">DomUtil</a></li>
			<li><a href="#posanimation">PosAnimation</a></li>
			<li><a href="#draggable">Draggable</a></li>
		</ul>
	</div>
	<div class="span-3 last">
		<h4>Interfaces</h4>
		<ul>
			<li><a href="#ihandler">IHandler</a></li>
			<li><a href="#ilayer">ILayer</a></li>
			<!--<li><a class="nodocs" href="#">IFeature</a></li>-->
			<li><a href="#icontrol">IControl</a></li>
			<li><a href="#iprojection">IProjection</a></li>
			<li><a href="#icrs">ICRS</a></li>
		</ul>

		<h4>Misc</h4>
		<ul>
			<li><a href="#global">global switches</a></li>
			<li><a href="#noconflict">noConflict</a></li>
			<li><a href="#version">version</a></li>
		</ul>
	</div>
</div>

<!--<a href="#toc" id="back-to-top">&uarr;</a>-->

<hr />
<p>This reference reflects <strong>Leaflet 0.7</strong>.
Docs for 0.6 are available <a href="https://github.com/Leaflet/Leaflet/archive/gh-pages-0.6.zip">in the source form</a> (see <a href="https://github.com/Leaflet/Leaflet/blob/master/CONTRIBUTING.md#improving-documentation">instructions for running docs</a>).</p>

<h2 id="map-class">Map</h2>

<p>The central class of the API &mdash; it is used to create a map on a page and manipulate it.</p>

<h3 id="map-usage">Usage example</h3>

<pre><code class="javascript">// initialize the map on the "map" div with a given center and zoom
var map = L.map('map', {
	center: [51.505, -0.09],
	zoom: 13
});</code></pre>

<h3 id="map-constructor" class="left">Creation</h3>

<table data-id='map'>
	<tr>
		<th>Factory</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.map</b>(
			<nobr>&lt;HTMLElement|String&gt; <i>id</i>,</nobr>
			<nobr>&lt;<a href="#map-options">Map options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a map object given a div element (or its id) and optionally an object literal with map options described below.</td>
	</tr>
</table>




<h3 id="map-options">Options</h3>

<h4>Map State Options</h4>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>center</b></code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Initial geographical center of the map.</td>
	</tr>
	<tr>
		<td><code><b>zoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Initial map zoom.</td>
	</tr>
	<tr>
		<td><code><b>layers</b></code></td>
		<td><code><a href="#ilayer">ILayer</a>[]</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Layers that will be added to the map initially.</td>
	</tr>
	<tr>
		<td><code><b>minZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Minimum zoom level of the map. Overrides any <code>minZoom</code> set on map layers.</td>
	</tr>
	<tr>
		<td><code><b>maxZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Maximum zoom level of the map. This overrides any <code>maxZoom</code> set on map layers.</td>
	</tr>
	<tr id="map-maxbounds">
		<td><code><b>maxBounds</b></code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>When this option is set, the map restricts the view to the given geographical bounds, bouncing the user back when he tries to pan outside the view. To set the restriction dynamically, use <a href="#map-setmaxbounds">setMaxBounds</a> method</td>
    </tr>
	<tr>
		<td><code><b>crs</b></code></td>
		<td><code><a href="#icrs">CRS</a></code></td>
		<td><code>L.CRS.<br/>EPSG3857</code></td>
		<td>Coordinate Reference System to use. Don't change this if you're not sure what it means.</td>
	</tr>
</table>

<h4>Interaction Options</h4>

<table data-id='map'>
	<tr>
		<th class="width140">Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>dragging</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map be draggable with mouse/touch or not.</td>
	</tr>
	<tr>
		<td><code><b>touchZoom</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map can be zoomed by touch-dragging with two fingers.</td>
	</tr>
	<tr>
		<td><code><b>scrollWheelZoom</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map can be zoomed by using the mouse wheel. If passed <code><span class="string">'center'</span></code>, it will zoom to the center of the view regardless of where the mouse was.</td>
	</tr>
	<tr>
		<td><code><b>doubleClickZoom</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map can be zoomed in by double clicking on it and zoomed out by double clicking while holding shift. If passed <code><span class="string">'center'</span></code>, double-click zoom will zoom to the center of the view regardless of where the mouse was.</td>
	</tr>
	<tr>
		<td><code><b>boxZoom</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map can be zoomed to a rectangular area specified by dragging the mouse while pressing shift.</td>
	</tr>
	<tr>
		<td><code><b>tap</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Enables mobile hacks for supporting instant taps (fixing 200ms click delay on iOS/Android) and touch holds (fired as <code>contextmenu</code> events).</td>
	</tr>
	<tr>
		<td><code><b>tapTolerance</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">15</span></code></td>
		<td>The max number of pixels a user can shift his finger during touch for it to be considered a valid tap.</td>
	</tr>
	<tr>
		<td><code><b>trackResize</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the map automatically handles browser window resize to update itself.</td>
	</tr>
	<tr>
		<td><code><b>worldCopyJump</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>With this option enabled, the map tracks when you pan to another "copy" of the world and seamlessly jumps to the original one so that all overlays like markers and vector layers are still visible.</td>
	</tr>
	<tr>
		<td><code><b>closePopupOnClick</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Set it to <code><span class="literal">false</span></code> if you don't want popups to close when user clicks the map.</td>
	</tr>
	<tr>
		<td><code><b>bounceAtZoomLimits</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Set it to <code><span class="literal">false</span></code> if you don't want the map to zoom beyond min/max zoom and then bounce back when pinch-zooming.</td>
	</tr>
</table>

<h4>Keyboard Navigation Options</h4>

<table data-id='map'>
	<tr>
		<th class="width140">Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>keyboard</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Makes the map focusable and allows users to navigate the map with keyboard arrows and <code>+</code>/<code>-</code> keys.</td>
	</tr>
	<tr>
		<td><code><b>keyboardPanOffset</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">80</span></code></td>
		<td>Amount of pixels to pan when pressing an arrow key.</td>
	</tr>
	<tr>
		<td><code><b>keyboardZoomOffset</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1</span></code></td>
		<td>Number of zoom levels to change when pressing <code>+</code> or <code>-</code> key.</td>
	</tr>
</table>

<h4>Panning Inertia Options</h4>

<table data-id='map'>
	<tr>
		<th class="width140">Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>inertia</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>If enabled, panning of the map will have an inertia effect where the map builds momentum while dragging and continues moving in the same direction for some time. Feels especially nice on touch devices.</td>
	</tr>
	<tr>
		<td><code><b>inertiaDeceleration</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">3000</span></code></td>
		<td>The rate with which the inertial movement slows down, in pixels/second<sup>2</sup>.</td>
	</tr>
	<tr>
		<td><code><b>inertiaMaxSpeed</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1500</span></code></td>
		<td>Max speed of the inertial movement, in pixels/second.</td>
	</tr>
	<tr>
		<td><code><b>inertiaThreshold</b></code></td>
		<td><code>Number</code></td>
		<td><code>depends</code></td>
		<td>Number of milliseconds that should pass between stopping the movement and releasing the mouse or touch to prevent inertial movement. <code><span class="number">32</span></code> for touch devices and <code><span class="number">14</span></code> for the rest by default.</td>
	</tr>
</table>

<h4>Control options</h4>

<table data-id='map'>
	<tr>
		<th class="width140">Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>zoomControl</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the <a href="#control-zoom">zoom control</a> is added to the map by default.</td>
	</tr>
	<tr>
		<td><code><b>attributionControl</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the <a href="#control-attribution">attribution control</a> is added to the map by default.</td>
	</tr>
</table>

<h4>Animation options</h4>

<table data-id='map'>
	<tr>
		<th class="width140">Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>fadeAnimation</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>Whether the tile fade animation is enabled. By default it's enabled in all browsers that support CSS3 Transitions except Android.</td>
	</tr>
	<tr>
		<td><code><b>zoomAnimation</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>Whether the tile zoom animation is enabled. By default it's enabled in all browsers that support CSS3 Transitions except Android.</td>
	</tr>
	<tr>
		<td><code><b>zoomAnimationThreshold</b></code></td>
		<td><code>Number</code></td>
		<td><span class="number">4</span></td>
		<td>Won't animate zoom if the zoom difference exceeds this value.</td>
	</tr>
	<tr>
		<td><code><b>markerZoomAnimation</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>Whether markers animate their zoom with the zoom animation, if disabled they will disappear for the length of the animation. By default it's enabled in all browsers that support CSS3 Transitions except Android.</td>
	</tr>
</table>


<h3 id="map-events">Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='map'>
	<tr>
		<th>Event</th>
		<th>Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>click</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user clicks (or taps) the map.</td>
	</tr>
	<tr>
		<td><code><b>dblclick</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user double-clicks (or double-taps) the map.</td>
	</tr>
	<tr>
		<td><code><b>mousedown</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user pushes the mouse button on the map.</td>
	</tr>
	<tr>
		<td><code><b>mouseup</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user releases the mouse button on the map.</td>
	</tr>
	<tr>
		<td><code><b>mouseover</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse enters the map.</td>
	</tr>
	<tr>
		<td><code><b>mouseout</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse leaves the map.</td>
	</tr>
	<tr>
		<td><code><b>mousemove</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired while the mouse moves over the map.</td>
	</tr>
	<tr>
		<td><code><b>contextmenu</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user pushes the right mouse button on the map, prevents default browser context menu from showing if there are listeners on this event. Also fired on mobile when the user holds a single touch for a second (also called long press).</td>
	</tr>
	<tr>
		<td><code><b>focus</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the user focuses the map either by tabbing to it or clicking/panning.</td>
	</tr>
	<tr>
		<td><code><b>blur</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map loses focus.</td>
	</tr>
	<tr>
		<td><code><b>preclick</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired before mouse click on the map (sometimes useful when you want something to happen on click before any existing click handlers start running).</td>
	</tr>
	<tr>
		<td><code><b>load</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map is initialized (when its center and zoom are set for the first time).</td>
	</tr>
	<tr>
		<td><code><b>unload</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map is destroyed with <a href="#map-remove">remove</a> method.</td>
	</tr>
	<tr id="map-viewreset">
		<td><code><b>viewreset</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map needs to redraw its content (this usually happens on map zoom or load). Very useful for creating custom overlays.</td>
	</tr>
	<tr>
		<td><code><b>movestart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the view of the map starts changing (e.g. user starts dragging the map).</td>
	</tr>
	<tr>
		<td><code><b>move</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired on any movement of the map view.</td>
	</tr>
	<tr id="map-moveend">
		<td><code><b>moveend</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the view of the map ends changed (e.g. user stopped dragging the map).</td>
	</tr>
	<tr>
		<td><code><b>dragstart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the user starts dragging the map.</td>
	</tr>
	<tr>
		<td><code><b>drag</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired repeatedly while the user drags the map.</td>
	</tr>
	<tr>
		<td><code><b>dragend</b></code></td>
		<td><code><a href="#dragend-event">DragEndEvent</a></code></td>
		<td>Fired when the user stops dragging the map.</td>
	</tr>
	<tr>
		<td><code><b>zoomstart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map zoom is about to change (e.g. before zoom animation).</td>
	</tr>
	<tr>
		<td><code><b>zoomend</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map zoom changes.</td>
	</tr>
	<tr>
		<td><code><b>zoomlevelschange</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the number of zoomlevels on the map is changed due to adding or removing a layer.</td>
	</tr>
	<tr>
		<td><code><b>resize</b></code></td>
		<td><code><a href="#resize-event">ResizeEvent</a></code></td>
		<td>Fired when the map is resized.</td>
	</tr>
	<tr>
		<td><code><b>autopanstart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the map starts autopanning when opening a popup.</td>
	</tr>
	<tr>
		<td><code><b>layeradd</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code></td>
		<td>Fired when a new layer is added to the map.</td>
	</tr>
	<tr>
		<td><code><b>layerremove</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code></td>
		<td>Fired when some layer is removed from the map.</td>
	</tr>
	<tr>
		<td><code><b>baselayerchange</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code>
		<td>Fired when the base layer is changed through the <a href="#control-layers">layer control</a>.</td>
	</tr>
	<tr>
		<td><code><b>overlayadd</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code>
		<td>Fired when an overlay is selected through the <a href="#control-layers">layer control</a>.</td>
	</tr>
	<tr>
		<td><code><b>overlayremove</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code>
		<td>Fired when an overlay is deselected through the <a href="#control-layers">layer control</a>.</td>
	</tr>
	<tr>
		<td><code><b>locationfound</b></code></td>
		<td><code><a href="#location-event">LocationEvent</a></code>
		<td>Fired when geolocation (using the <a href="#map-locate">locate</a> method) went successfully.</td>
	</tr>
	<tr>
		<td><code><b>locationerror</b></code></td>
		<td><code><a href="#error-event">ErrorEvent</a></code>
		<td>Fired when geolocation (using the <a href="map-locate">locate</a> method) failed.</td>
	</tr>
	<tr>
		<td><code><b>popupopen</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup is opened (using <code>openPopup</code> method).</td>
	</tr>
	<tr>
		<td><code><b>popupclose</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup is closed (using <code>closePopup</code> method).</td>
	</tr>
</table>


<h3 id="map-set-methods">Methods for Modifying Map State</h3>

<table data-id='map'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setView</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>center</i>,</nobr>
			<nobr>&lt;Number&gt; <i>zoom?</i>,</nobr>
			<nobr>&lt;<a href="#map-zoompanoptions">zoom/pan options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the view of the map (geographical center and zoom) with the given animation options.</td>
	</tr>
	<tr>
		<td><code><b>setZoom</b>(
			<nobr>&lt;Number&gt; <i>zoom</i></nobr>,
			<nobr>&lt;<a href="#map-zoomoptions">zoom options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the zoom of the map.</td>
	</tr>
	<tr>
		<td><code><b>zoomIn</b>(
			<nobr>&lt;Number&gt; <em>delta?</em></nobr>,
			<nobr>&lt;<a href="#map-zoomoptions">zoom options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Increases the zoom of the map by <code>delta</code> (<code><span class="number">1</span></code> by default).</td>
	</tr>
	<tr>
		<td><code><b>zoomOut</b>(
			<nobr>&lt;Number&gt; <em>delta?</em></nobr>,
			<nobr>&lt;<a href="#map-zoomoptions">zoom options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Decreases the zoom of the map by <code>delta</code> (<code><span class="number">1</span></code> by default).</td>
	</tr>
	<tr>
		<td><code><b>setZoomAround</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i>, </nobr>
			<nobr>&lt;Number&gt; <i>zoom</i></nobr>,
			<nobr>&lt;<a href="#map-zoomoptions">zoom options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Zooms the map while keeping a specified point on the map stationary (e.g. used internally for scroll zoom and double-click zoom).</td>
	</tr>
	<tr id="map-fitbounds">
		<td><code><b>fitBounds</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i></nobr>,
			<nobr>&lt;<a href="#map-fitboundsoptions">fitBounds options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets a map view that contains the given geographical bounds with the maximum zoom level possible.</td>
	</tr>
	<tr id="map-fitworld">
		<td><code><b>fitWorld</b>(
			<nobr>&lt;<a href="#map-fitboundsoptions">fitBounds options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets a map view that mostly contains the whole world with the maximum zoom level possible.</td>
	</tr>
	<tr>
		<td><code><b>panTo</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i></nobr>,
			<nobr>&lt;<a href="#map-panoptions">pan options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Pans the map to a given center. Makes an animated pan if new center is not more than one screen away from the current one.</td>
	</tr>
	<tr id="map-paninsidebounds">
		<td><code><b>panInsideBounds</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i></nobr>,
			<nobr>&lt;<a href="#map-panoptions">pan options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Pans the map to the closest view that would lie inside the given bounds (if it's not already), controlling the animation using the options specific, if any.</td>
	</tr>
	<tr>
		<td><code><b>panBy</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i></nobr>,
			<nobr>&lt;<a href="#map-panoptions">pan options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Pans the map by a given number of pixels (animated).</td>
	</tr>
	<tr>
		<td><code><b>invalidateSize</b>(
			<nobr>&lt;Boolean&gt; <i>animate</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Checks if the map container size changed and updates the map if so &mdash; call it after you've changed the map size dynamically, also animating pan by default.</td>
	</tr>
	<tr>
		<td><code><b>invalidateSize</b>(
			<nobr>&lt;<a href="#map-zoompanoptions">zoom/pan options</a>&gt; <i>options</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Checks if the map container size changed and updates the map if so &mdash; call it after you've changed the map size dynamically, also animating pan by default. If <code>options.pan</code> is <code><span class="literal">false</span></code>, panning will not occur. If <code>options.debounceMoveend</code> is <code><span class="literal">true</span></code>, it will delay <code>moveend</code> event so that it doesn't happen often even if the method is called many times in a row.</td>
	</tr>
	<tr id="map-setmaxbounds">
		<td><code><b>setMaxBounds</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i></nobr><!--,
			<nobr>&lt;<a href="#map-zoompanoptions">zoom/pan options</a>&gt; <i>options?</i> )</nobr>-->
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Restricts the map view to the given bounds (see <a href="#map-maxbounds">map maxBounds</a> option)<!--, animating the map view if bounds are changed.  The given animation options are passed through to `setView` or `panInsideBounds`, depending on map zoom level, and can be used to control how the map animates during this change-->.</td>
	</tr>
	<tr id="map-locate">
		<td><code><b>locate</b>(
			<nobr>&lt;<a href="#map-locate-options">Locate options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Tries to locate the user using the <a href="https://en.wikipedia.org/wiki/W3C_Geolocation_API">Geolocation API</a>, firing a <code>locationfound</code> event with location data on success or a <code>locationerror</code> event on failure, and optionally sets the map view to the user's location with respect to detection accuracy (or to the world view if geolocation failed). See <a href="#map-locate-options">Locate options</a> for more details.</td>
	</tr>
	<tr>
		<td><code><b>stopLocate</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Stops watching location previously initiated by <code><b>map.locate</b>({watch: true})</code> and aborts resetting the map view if <code>map.locate</code> was called with <code>{setView: true}</code>.</td>
	</tr>
	<tr id="map-remove">
		<td><code><b>remove</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Destroys the map and clears all related event listeners.</td>
	</tr>
</table>

<h3 id="map-get-methods">Methods for Getting Map State</h3>

<table data-id='map'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>getCenter</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the geographical center of the map view.</td>
	</tr>
	<tr>
		<td><code><b>getZoom</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the current zoom of the map view.</td>
	</tr>
	<tr>
		<td><code><b>getMinZoom</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the minimum zoom level of the map.</td>
	</tr>
	<tr>
		<td><code><b>getMaxZoom</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the maximum zoom level of the map.</td>
	</tr>
	<tr>
		<td><code><b>getBounds</b>()</code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Returns the LatLngBounds of the current map view.</td>
	</tr>
	<tr>
		<td><code><b>getBoundsZoom</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i>,</nobr>
			<nobr>&lt;Boolean&gt; <i>inside?</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>

		<td>Returns the maximum zoom level on which the given bounds fit to the map view in its entirety. If <code>inside</code> (optional) is set to <code><span class="literal">true</span></code>, the method instead returns the minimum zoom level on which the map view fits into the given bounds in its entirety.</td>
	</tr>
	<tr>
		<td><code><b>getSize</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the current size of the map container.</td>
	</tr>
	<tr>
		<td><code><b>getPixelBounds</b>()</code></td>
		<td><code><a href="#bounds">Bounds</a></code></td>
		<td>Returns the bounds of the current map view in projected pixel coordinates (sometimes useful in layer and overlay implementations).</td>
	</tr>
	<tr>
		<td><code><b>getPixelOrigin</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the projected pixel coordinates of the top left point of the map layer (useful in custom layer and overlay implementations).</td>
	</tr>
</table>

<h3 id="map-stuff-methods">Methods for Layers and Controls</h3>

<table data-id='map'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr id="map-addlayer">
		<td><code><b>addLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i>,</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the given layer to the map.</td>
	</tr>
	<tr>
		<td><code><b>removeLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes the given layer from the map.</td>
	</tr>
	<tr>
		<td><code><b>hasLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the given layer is currently added to the map.</td>
	</tr>
	<tr>
		<td><code><b>eachLayer</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Iterates over the layers of the map, optionally specifying context of the iterator function.
<pre><code>map.eachLayer(function (layer) {
	layer.bindPopup('Hello');
});</code></pre>
		</td>
	</tr>

	<tr id="map-openpopup">
		<td><code><b>openPopup</b>(
			<nobr>&lt;<a href="#popup">Popup</a>&gt; <i>popup</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Opens the specified popup while closing the previously opened (to make sure only one is opened at one time for usability).</td>
	</tr>
	<tr id="map-openpopup2">
		<td><code><b>openPopup</b>(
			<nobr>&lt;String&gt; <i>html</i> </nobr> | <nobr>&lt;HTMLElement&gt; <i>el</i>,
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i></nobr>,
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Creates a popup with the specified options and opens it in the given point on a map.</td>
	</tr>
	<tr id="map-closepopup">
		<td><code><b>closePopup</b>(
			<nobr>&lt;<a href="#popup">Popup</a>&gt; <i>popup?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Closes the popup previously opened with <a href="#map-openpopup">openPopup</a> (or the given one).</td>
	</tr>
	<tr id="map-addcontrol">
		<td><code><b>addControl</b>(
			<nobr>&lt;<a href="#icontrol">IControl</a>&gt; <i>control</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the given control to the map.</td>
	</tr>
	<tr>
		<td><code><b>removeControl</b>(
			<nobr>&lt;<a href="#icontrol">IControl</a>&gt; <i>control</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes the given control from the map.</td>
	</tr>
</table>


<h3 id="map-conversion-methods">Conversion Methods</h3>

<table data-id='map'>
	<tr>
		<th class="width200">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>latLngToLayerPoint</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the map layer point that corresponds to the given geographical coordinates (useful for placing overlays on the map).</td>
	</tr>
	<tr>
		<td><code><b>layerPointToLatLng</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the geographical coordinates of a given map layer point.</td>
	</tr>
	<tr>
		<td><code><b>containerPointToLayerPoint</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Converts the point relative to the map container to a point relative to the map layer.</td>
	</tr>
	<tr>
		<td><code><b>layerPointToContainerPoint</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Converts the point relative to the map layer to a point relative to the map container.</td>
	</tr>
	<tr>
		<td><code><b>latLngToContainerPoint</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the map container point that corresponds to the given geographical coordinates.</td>
	</tr>
	<tr>
		<td><code><b>containerPointToLatLng</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the geographical coordinates of a given map container point.</td>
	</tr>
	<tr>
		<td><code><b>project</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i>,</nobr>
			<nobr>&lt;Number&gt; <i>zoom?</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Projects the given geographical coordinates to absolute pixel coordinates for the given zoom level (current zoom level by default).</td>
	</tr>
	<tr>
		<td><code><b>unproject</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i>,</nobr>
			<nobr>&lt;Number&gt; <i>zoom?</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Projects the given absolute pixel coordinates to geographical coordinates for the given zoom level (current zoom level by default).</td>
	</tr>
	<tr>
		<td><code><b>mouseEventToContainerPoint</b>(
			<nobr>&lt;MouseEvent&gt; <i>event</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the pixel coordinates of a mouse click (relative to the top left corner of the map) given its event object.</td>
	</tr>
	<tr>
		<td><code><b>mouseEventToLayerPoint</b>(
			<nobr>&lt;MouseEvent&gt; <i>event</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the pixel coordinates of a mouse click relative to the map layer given its event object.
	</tr>
	<tr>
		<td><code><b>mouseEventToLatLng</b>(
			<nobr>&lt;MouseEvent&gt; <i>event</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the geographical coordinates of the point the mouse clicked on given the click's event object.</td>
	</tr>
</table>

<h3 id="map-misc-methods">Other Methods</h3>

<table data-id='map'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>getContainer</b>()</code></td>
		<td><code>HTMLElement</code></td>
		<td>Returns the container element of the map.</td>
	</tr>
	<tr>
		<td><code><b>getPanes</b>()</code></td>
		<td><code><a href="#map-panes">MapPanes</a></code></td>
		<td>Returns an object with different map panes (to render overlays in).</td>
	</tr>
	<tr>
		<td><code><b>whenReady</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr></code></td>
		<td><code>this</code></td>
		<td>Runs the given callback when the map gets initialized with a place and zoom, or immediately if it happened already, optionally passing a function context.</td>
	</tr>
</table>

<h3 id="map-locate-options">Locate options</h3>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>watch</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, starts continous watching of location changes (instead of detecting it once) using W3C <code>watchPosition</code> method. You can later stop watching using <code><b>map.stopLocate</b>()</code> method.</td>
	</tr>
	<tr>
		<td><code><b>setView</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, automatically sets the map view to the user location with respect to detection accuracy, or to world view if geolocation failed.</td>
	</tr>
	<tr>
		<td><code><b>maxZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">Infinity</span></code></td>
		<td>The maximum zoom for automatic view setting when using `setView` option.</td>
	</tr>
	<tr>
		<td><code><b>timeout</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">10000</span></code></td>
		<td>Number of milliseconds to wait for a response from geolocation before firing a <code>locationerror</code> event.</td>
	</tr>
	<tr>
		<td><code><b>maximumAge</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0</span></code></td>
		<td>Maximum age of detected location. If less than this amount of milliseconds passed since last geolocation response, <code>locate</code> will return a cached location.</td>
	</tr>
	<tr>
		<td><code><b>enableHighAccuracy</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>Enables high accuracy, see <a href="http://dev.w3.org/geo/api/spec-source.html#high-accuracy">description in the W3C spec</a>.</td>
	</tr>
</table>


<h3 id="map-zoompanoptions">Zoom/pan options</h3>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>reset</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the map view will be completely reset (without any animations).</td>
	</tr>
	<tr>
		<td><code><b>pan</b></code></td>
		<td><code><a href="#map-panoptions">pan options</a></code></td>
		<td><code>-</code></td>
		<td>Sets the options for the panning (without the zoom change) if it occurs.</td>
	</tr>
	<tr>
		<td><code><b>zoom</b></code></td>
		<td><code><a href="#map-zoomoptions">zoom options</a></code></td>
		<td><code>-</code></td>
		<td>Sets the options for the zoom change if it occurs.</td>
	</tr>
	<tr>
		<td><code><b>animate</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">-</span></code></td>
		<td>An equivalent of passing <code>animate</code> to both zoom and pan options (see below).</td>
	</tr>
</table>

<h3 id="map-panoptions">Pan options</h3>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>animate</b></code></td>
		<td><code>Boolean</code></td>
		<td><code>-</code></td>
		<td>If <code><span class="literal">true</span></code>, panning will always be animated if possible. If <code><span class="literal">false</span></code>, it will not animate panning, either resetting the map view if panning more than a screen away, or just setting a new offset for the map pane (except for `panBy` which always does the latter).</td>
	</tr>
	<tr>
		<td><code><b>duration</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0.25</span></code></td>
		<td>Duration of animated panning.</td>
	</tr>
	<tr>
		<td><code><b>easeLinearity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0.25</span></code></td>
		<td>The curvature factor of panning animation easing (third parameter of the <a href="http://cubic-bezier.com/">Cubic Bezier curve</a>). <span class="number">1.0</span> means linear animation, the less the more bowed the curve.</td>
	</tr>
	<tr>
		<td><code><b>noMoveStart</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, panning won't fire <code>movestart</code> event on start (used internally for panning inertia).</td>
	</tr>
</table>

<h3 id="map-zoomoptions">Zoom options</h3>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>animate</b></code></td>
		<td><code>Boolean</code></td>
		<td><code>-</code></td>
		<td>If not specified, zoom animation will happen if the zoom origin is inside the current view. If <code><span class="literal">true</span></code>, the map will attempt animating zoom disregarding where zoom origin is. Setting <code><span class="literal">false</span></code> will make it always reset the view completely without animation.</td>
	</tr>
</table>

<h3 id="map-fitboundsoptions">fitBounds options</h3>

<p>The same as <a href="#map-zoompanoptions">zoom/pan options</a> and additionally:</p>

<table data-id='map'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>paddingTopLeft</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><nobr>[<span class="number">0</span>, <span class="number">0</span>]</nobr>
		<td>Sets the amount of padding in the top left corner of a map container that shouldn't be accounted for when setting the view to fit bounds. Useful if you have some control overlays on the map like a sidebar and you don't want them to obscure objects you're zooming to.</td>
	</tr>
	<tr>
		<td><code><b>paddingBottomRight</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><nobr>[<span class="number">0</span>, <span class="number">0</span>]</nobr>
		<td>The same for bottom right corner of the map.</td>
	</tr>
	<tr>
		<td><code><b>padding</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><nobr>[<span class="number">0</span>, <span class="number">0</span>]</nobr>
		<td>Equivalent of setting both top left and bottom right padding to the same value.</td>
	</tr>
	<tr>
		<td><code><b>maxZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><nobr><span class="literal">null</span></nobr></code></td>
		<td>The maximum possible zoom to use.</td>
	</tr>
</table>


<h3 id="map-properties">Properties</h3>

<p>Map properties include interaction handlers that allow you to control interaction behavior in runtime, enabling or disabling certain features such as dragging or touch zoom (see <a href="#ihandler">IHandler</a> methods). Example:</p>

<pre><code class="javascript">map.doubleClickZoom.disable();</code></pre>

<p>You can also access default map controls like attribution control through map properties:</p>

<pre><code class="javascript">map.attributionControl.addAttribution("Earthquake data &amp;copy; GeoNames");</code></pre>

<table data-id='map'>
	<tr>
		<th class="minwidth">Property</th>
		<th class="minwidth">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>dragging</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Map dragging handler (by both mouse and touch).</td>
	</tr>
	<tr>
		<td><code><b>touchZoom</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Touch zoom handler.</td>
	</tr>
	<tr>
		<td><code><b>doubleClickZoom</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Double click zoom handler.</td>
	</tr>
	<tr>
		<td><code><b>scrollWheelZoom</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Scroll wheel zoom handler.</td>
	</tr>
	<tr>
		<td><code><b>boxZoom</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Box (shift-drag with mouse) zoom handler.</td>
	</tr>
	<tr>
		<td><code><b>keyboard</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Keyboard navigation handler.</td>
	</tr>
	<tr>
		<td><code><b>tap</b></code></td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Mobile touch hacks (quick tap and touch hold) handler.</td>
	</tr>
	<tr>
		<td><code><b>zoomControl</b></code></td>
		<td><a href="#control-zoom"><code>Control.Zoom</code></a></td>
		<td>Zoom control.</td>
	</tr>
	<tr>
		<td><code><b>attributionControl</b></code></td>
		<td><a href="#control-attribution"><code>Control.Attribution</code></a></td>
		<td>Attribution control.</td>
	</tr>
</table>


<h3 id="map-panes">Map Panes</h3>

<p>An object literal (returned by <a href="#map-getpanes">map.getPanes</a></code>) that contains different map panes that you can use to put your custom overlays in. The difference is mostly in zIndex order that such overlays get.</p>

<table data-id='map'>
	<tr>
		<th class="width100">Property</th>
		<th class="width100">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>mapPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane that contains all other map panes.</td>
	</tr>
	<tr>
		<td><code><b>tilePane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane for tile layers.</td>
	</tr>
	<tr>
		<td><code><b>objectsPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane that contains all the panes except tile pane.</td>
	</tr>
	<tr>
		<td><code><b>shadowPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane for overlay shadows (e.g. marker shadows).</td>
	</tr>
	<tr>
		<td><code><b>overlayPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane for overlays like polylines and polygons.</td>
	</tr>
	<tr>
		<td><code><b>markerPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane for marker icons.</td>
	</tr>
	<tr>
		<td><code><b>popupPane</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>Pane for popups.</td>
	</tr>
</table>


<h2 id="marker">Marker</h2>

<p>Used to put markers on the map.</p>

<pre><code class="javascript">L.marker([50.5, 30.5]).addTo(map);</code></pre>

<h3>Creation</h3>

<table data-id='marker'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.marker</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i>,</nobr>
			<nobr>&lt;<a href="#marker-options">Marker options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td>Instantiates a Marker object given a geographical point and optionally an options object.</td>
	</tr>
</table>

<h3 id="marker-options">Options</h3>

<table data-id='marker'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>icon</b></code></td>
		<td><code><a href="#icon">L.Icon</a></code></td>
		<td>*</td>
		<td>Icon class to use for rendering the marker. See <a href="#icon">Icon documentation</a> for details on how to customize the marker icon. Set to <code>new L.Icon.Default()</code> by default.</td>
	</tr>
	<tr>
		<td><code><b>clickable</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>If <code><span class="literal">false</span></code>, the marker will not emit mouse events and will act as a part of the underlying map.</td>
	</tr>
	<tr>
		<td><code><b>draggable</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>Whether the marker is draggable with mouse/touch or not.</td>
	</tr>
	<tr>
		<td><code><b>keyboard</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether the marker can be tabbed to with a keyboard and clicked by pressing enter.</td>
	</tr>
	<tr>
		<td><code><b>title</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>Text for the browser tooltip that appear on marker hover (no tooltip by default).</td>
	</tr>
	<tr>
		<td><code><b>alt</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>Text for the <code>alt</code> attribute of the icon image (useful for accessibility).</td>
	</tr>
	<tr id="marker-zindexoffset">
		<td><code><b>zIndexOffset</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0</span></code></td>
		<td>By default, marker images zIndex is set automatically based on its latitude. Use this option if you want to put the marker on top of all others (or below), specifying a high value like <code>1000</code> (or high negative value, respectively).</td>
	</tr>
	<tr>
		<td><code><b>opacity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1.0</span></code></td>
		<td>The opacity of the marker.</td>
	</tr>
	<tr>
		<td><code><b>riseOnHover</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the marker will get on top of others when you hover the mouse over it.</td>
	</tr>
	<tr>
		<td><code><b>riseOffset</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">250</span></code></td>
		<td>The z-index offset used for the <code>riseOnHover</code> feature.</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='marker'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>click</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user clicks (or taps) the marker.</td>
	</tr>
	<tr>
		<td><code><b>dblclick</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user double-clicks (or double-taps) the marker.</td>
	</tr>
	<tr>
		<td><code><b>mousedown</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user pushes the mouse button on the marker.</td>
	</tr>
	<tr>
		<td><code><b>mouseover</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse enters the marker.</td>
	</tr>
	<tr>
		<td><code><b>mouseout</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse leaves the marker.</td>
	</tr>
	<tr>
		<td><code><b>contextmenu</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code>
		<td>Fired when the user right-clicks on the marker.</td>
	</tr>
	<tr>
		<td><code><b>dragstart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the user starts dragging the marker.</td>
	</tr>
	<tr>
		<td><code><b>drag</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired repeatedly while the user drags the marker.</td>
	</tr>
	<tr>
		<td><code><b>dragend</b></code></td>
		<td><code><a href="#dragend-event">DragEndEvent</a></code></td>
		<td>Fired when the user stops dragging the marker.</td>
	</tr>
	<tr>
		<td><code><b>move</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the marker is moved via setLatLng. New coordinate include in event arguments.</td>
	</tr>
	<tr>
		<td><code><b>add</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the marker is added to the map.</td>
	</tr>
	<tr>
		<td><code><b>remove</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the marker is removed from the map.</td>
	</tr>
	<tr>
		<td><code><b>popupopen</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup bound to the marker is open.</td>
	</tr>
	<tr>
		<td><code><b>popupclose</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup bound to the marker is closed.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='marker'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the marker to the map.</td>
	</tr>
	<tr>
		<td><code><b>getLatLng</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the current geographical position of the marker.</td>
	</tr>
	<tr>
		<td><code><b>setLatLng</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the marker position to the given point.</td>
	</tr>
	<tr>
		<td><code><b>setIcon</b>(
			<nobr>&lt;<a href="#icon">Icon</a>&gt; <i>icon</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the marker icon.</td>
	</tr>
	<tr>
		<td><code><b>setZIndexOffset</b>(
			<nobr>&lt;Number&gt; <i>offset</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the <a href="#marker-zindexoffset">zIndex offset</a> of the marker.</td>
	</tr>
	<tr>
		<td><code><b>setOpacity</b>(
			<nobr>&lt;Number&gt; <i>opacity</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the opacity of the marker.</td>
	</tr>
	<tr>
		<td><code><b>update</b>()</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Updates the marker position, useful if coordinates of its <code>latLng</code> object were changed directly.</td>
	</tr>
	<tr id="marker-bindpopup">
		<td><code><b>bindPopup</b>(
			<nobr>&lt;String&gt; <i>html</i> |</nobr> <nobr>&lt;HTMLElement&gt; <i>el</i> |</nobr> <nobr>&lt;<a href="#popup">Popup</a>&gt; <i>popup</i>,</nobr>
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Binds a popup with a particular HTML content to a click on this marker. You can also open the bound popup with the Marker <a href="#marker-openpopup">openPopup</a> method.</td>
	</tr>
	<tr id="marker-unbindpopup">
		<td><code><b>unbindPopup</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Unbinds the popup previously bound to the marker with <code>bindPopup</code>.</td>
	</tr>
	<tr id="marker-openpopup">
		<td><code><b>openPopup</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Opens the popup previously bound by the <a href="#marker-bindpopup">bindPopup</a> method.</td>
	</tr>
	<tr>
		<td><code><b>getPopup</b>()</code></td>
		<td><code><a href="#popup">Popup</a></code></td>
		<td>Returns the popup previously bound by the <a href="#marker-bindpopup">bindPopup</a> method.</td>
	</tr>
	<tr id="marker-closepopup">
		<td><code><b>closePopup</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Closes the bound popup of the marker if it's opened.</td>
	</tr>
	<tr id="marker-togglepopup">
		<td><code><b>togglePopup</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Toggles the popup previously bound by the <a href="#marker-bindpopup">bindPopup</a> method.</td>
	</tr>
	<tr id="marker-bindpopup">
		<td><code><b>setPopupContent</b>(
			<nobr>&lt;String&gt; <i>html</i> |</nobr> <nobr>&lt;HTMLElement&gt; <i>el</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets an HTML content of the popup of this marker.</td>
	</tr>
	<tr id="marker-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the marker (GeoJSON Point Feature).</td>
	</tr>
</table>

<h3 id="marker-interaction-handlers">Interaction handlers</h3>

<p>Interaction handlers are properties of a marker instance that allow you to control interaction behavior in runtime, enabling or disabling certain features such as dragging (see <a href="#ihandler">IHandler</a> methods). Example:</p>

<pre><code class="javascript">marker.dragging.disable();</code></pre>

<table data-id='marker'>
	<tr>
		<th class="width100">Property</th>
		<th class="width100">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>dragging</td>
		<td><a href="#ihandler"><code>IHandler</code></a></td>
		<td>Marker dragging handler (by both mouse and touch).</td>
	</tr>
</table>



<h2 id="popup">Popup</h2>

<p>Used to open popups in certain places of the map. Use <a href="#map-openpopup">Map#openPopup</a> to open popups while making sure that only one popup is open at one time (recommended for usability), or use <a href="#map-addlayer">Map#addLayer</a> to open as many as you want.</p>

<h3>Usage example</h3>
<p>If you want to just bind a popup to marker click and then open it, it's really easy:</p>
<pre><code class="javascript">marker.bindPopup(popupContent).openPopup();</code></pre>
<p>Path overlays like polylines also have a <code>bindPopup</code> method. Here's a more complicated way to open a popup on a map:</p>

<pre><code class="javascript">var popup = L.popup()
	.setLatLng(latlng)
	.setContent('&lt;p&gt;Hello world!&lt;br /&gt;This is a nice popup.&lt;/p&gt;')
	.openOn(map);</code></pre>

<h3>Creation</h3>

<table data-id='popup'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.popup</b>(
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i>,</nobr>
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>source?</i> )</nobr>
		</code></td>


		<td>Instantiates a Popup object given an optional options object that describes its appearance and location and an optional source object that is used to tag the popup with a reference to the ILayer to which it refers.</td>
	</tr>
</table>

<h3 id="popup-options">Options</h3>

<table data-id='popup'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>maxWidth</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">300</span></code></td>
		<td>Max width of the popup.</td>
	</tr>
	<tr>
		<td><code><b>minWidth</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">50</span></code></td>
		<td>Min width of the popup.</td>
	</tr>
	<tr>
		<td><code><b>maxHeight</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>If set, creates a scrollable container of the given height inside a popup if its content exceeds it.</td>
	</tr>
	<tr>
		<td><code><b>autoPan</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Set it to <code><span class="literal">false</span></code> if you don't want the map to do panning animation to fit the opened popup.</td>
	</tr>
	<tr>
		<td><code><b>keepInView</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>Set it to <code><span class="literal">true</span></code> if you want to prevent users from panning the popup off of the screen while it is open.</td>
	</tr>
	<tr>
		<td><code><b>closeButton</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Controls the presense of a close button in the popup.</td>
	</tr>
	<tr>
		<td><code><b>offset</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><nobr>Point(<span class="number">0</span>, <span class="number">6</span>)</nobr>
		</code></td>
		<td>The offset of the popup position. Useful to control the anchor of the popup when opening it on some overlays.</td>
	</tr>
	<tr>
		<td><code><b>autoPanPaddingTopLeft</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		</code></td>
		<td>The margin between the popup and the top left corner of the map view after autopanning was performed.</td>
	</tr>
	<tr>
		<td><code><b>autoPanPaddingBottomRight</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		</code></td>
		<td>The margin between the popup and the bottom right corner of the map view after autopanning was performed.</td>
	</tr>
	<tr>
		<td><code><b>autoPanPadding</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td><code><nobr>Point(<span class="number">5</span>, <span class="number">5</span>)</nobr>
		</code></td>
		<td>Equivalent of setting both top left and bottom right autopan padding to the same value.</td>
	</tr>
	<tr>
		<td><code><b>zoomAnimation</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether to animate the popup on zoom. Disable it if you have problems with Flash content inside popups.</td>
	</tr>
	<tr>
		<td><code><b>closeOnClick</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Set it to <code><span class="literal">false</span></code> if you want to override the default behavior of the popup closing when user clicks the map (set globally by the <code>Map</code> <code>closePopupOnClick</code> option).</td>
	</tr>
	<tr>
		<td><code><b>className</b></code></td>
		<td><code>String</code></td>
		<td><code class="javascript"><span class="string">''</span></code></td>
		<td>A custom class name to assign to the popup.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='popup'>
	<tr>
		<th class="width250">Method</th>
		<th class="minwidth">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the popup to the map.</td>
	</tr>
	<tr>
		<td><code><b>openOn</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the popup to the map and closes the previous one. The same as <code>map.openPopup(popup)</code>.</td>
	</tr>
	<tr>
		<td><code><b>setLatLng</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the geographical point where the popup will open.</td>
	</tr>
	<tr>
		<td><code><b>getLatLng</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the geographical point of popup.</td>
	</tr>
	<tr>
		<td><code><b>setContent</b>(
			<nobr>&lt;String|HTMLElement&gt; <i>htmlContent</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the HTML content of the popup.</td>
	</tr>
	<tr>
		<td><code><b>getContent</b>()</code></td>
		<td><code>&lt;String|HTMLElement&gt;</code></td>
		<td>Returns the content of the popup.</td>
	</tr>
	<tr>
		<td><code><b>update</b>()</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Updates the popup content, layout and position. Useful for updating the popup after something inside changed, e.g. image loaded.</td>
	</tr>
</table>



<h2 id="tilelayer">TileLayer</h2>

<p>Used to load and display tile layers on the map, implements <a href="#ilayer">ILayer</a> interface.</p>

<h3>Usage example</h3>

<pre><code class="javascript">L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png?{foo}', {foo: 'bar'}).addTo(map);</code></pre>

<h3>Creation</h3>

<table data-id='tilelayer'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.tileLayer</b>(
			<nobr>&lt;String&gt; <i><a href="#url-template">urlTemplate</a></i>,</nobr>
			<nobr>&lt;<a href="#tilelayer-options">TileLayer options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a tile layer object given a <a href="#url-template">URL template</a> and optionally an options object.</td>
	</tr>
</table>

<h3 id="url-template">URL template</h3>

<p>A string of the following form:</p>

<pre><code class="javascript">'http://{s}.somedomain.com/blabla/{z}/{x}/{y}.png'</code></pre>

<p><code>{s}</code> means one of the available subdomains (used sequentially to help with browser parallel requests per domain limitation; subdomain values are specified in options; <code>a</code>, <code>b</code> or <code>c</code> by default, can be omitted), <code>{z}</code> &mdash; zoom level, <code>{x}</code> and <code>{y}</code> &mdash; tile coordinates.</p>

<p>You can use custom keys in the template, which will be <a href="#util-template">evaluated</a> from TileLayer options, like this:</p>

<pre><code class="javascript">L.tileLayer('http://{s}.somedomain.com/{foo}/{z}/{x}/{y}.png', {foo: 'bar'});</code></pre>

<h3 id="tilelayer-options">Options</h3>

<table data-id='tilelayer'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>minZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0</span></code></td>
		<td>Minimum zoom number.</td>
	</tr>
	<tr>
		<td><code><b>maxZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">18</span></code></td>
		<td>Maximum zoom number.</td>
	</tr>
	<tr>
		<td><code><b>maxNativeZoom</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Maximum zoom number the tiles source has available. If it is specified, the tiles on all zoom levels higher than <code>maxNativeZoom</code> will be loaded from <code>maxZoom</code> level and auto-scaled.</td>
	</tr>
	<tr>
		<td><code><b>tileSize</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">256</span></code></td>
		<td>Tile size (width and height in pixels, assuming tiles are square).</td>
	</tr>
	<tr>
		<td><code><b>subdomains</b></code></td>
		<td><code>String</code> or <code>String[]</code></td>
		<td><code><span class="string">'abc'</span></code></td>
		<td>Subdomains of the tile service. Can be passed in the form of one string (where each letter is a subdomain name) or an array of strings.</td>
	</tr>
	<tr>
		<td><code><b>errorTileUrl</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>URL to the tile image to show in place of the tile that failed to load.</td>
	</tr>
	<tr>
		<td><code><b>attribution</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>e.g. "&copy; Mapbox" &mdash; the string used by the attribution control, describes the layer data.</td>
	</tr>
	<tr>
		<td><code><b>tms</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, inverses Y axis numbering for tiles (turn this on for TMS services).</td>
	</tr>
	<tr>
		<td><code><b>continuousWorld</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If set to <code><span class="literal">true</span></code>, the tile coordinates won't be wrapped by world width (-180 to 180 longitude) or clamped to lie within world height (-90 to 90). Use this if you use Leaflet for maps that don't reflect the real world (e.g. game, indoor or photo maps).</td>
	</tr>
	<tr>
		<td><code><b>noWrap</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If set to <code><span class="literal">true</span></code>, the tiles just won't load outside the world width (-180 to 180 longitude) instead of repeating.</td>
	</tr>
	<tr>
		<td><code><b>zoomOffset</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0</span></code></td>
		<td>The zoom number used in tile URLs will be offset with this value.</td>
	</tr>
	<tr>
		<td><code><b>zoomReverse</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If set to <code><span class="literal">true</span></code>, the zoom number used in tile URLs will be reversed (<code>maxZoom - zoom</code> instead of <code>zoom</code>)</td>
	</tr>
	<tr>
		<td><code><b>opacity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1.0</span></code></td>
		<td>The opacity of the tile layer.</td>
	</tr>
	<tr>
		<td><code><b>zIndex</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>The explicit zIndex of the tile layer. Not set by default.</td>
	</tr>
	<tr>
		<td><code><b>unloadInvisibleTiles</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>If <code><span class="literal">true</span></code>, all the tiles that are not visible after panning are removed (for better performance). <code><span class="literal">true</span></code> by default on mobile WebKit, otherwise <code><span class="literal">false</span></code>.</td>
	</tr>
	<tr>
		<td><code><b>updateWhenIdle</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>If <code><span class="literal">false</span></code>, new tiles are loaded during panning, otherwise only after it (for better performance). <code><span class="literal">true</span></code> by default on mobile WebKit, otherwise <code><span class="literal">false</span></code>.</td>
	</tr>
	<tr>
		<td><code><b>detectRetina</b></code></td>
		<td><code><code>Boolean</code></code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code> and user is on a retina display, it will request four tiles of half the specified size and a bigger zoom level in place of one to utilize the high resolution.</td>
	</tr>
	<tr>
		<td><code><b>reuseTiles</b></code></td>
		<td><code><code>Boolean</code></code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, all the tiles that are not visible after panning are placed in a reuse queue from which they will be fetched when new tiles become visible (as opposed to dynamically creating new ones). This will in theory keep memory usage low and eliminate the need for reserving new memory whenever a new tile is needed.</td>
	</tr>
	<tr>
		<td><code><b>bounds</b></code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>When this option is set, the TileLayer only loads tiles that are in the given geographical bounds.</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='tilelayer'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>loading</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the tile layer starts loading tiles.</td>
	</tr>
	<tr>
		<td><code><b>load</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the tile layer loaded all visible tiles.</td>
	</tr>
    <tr>
		<td><code><b>tileloadstart</b></code></td>
		<td><code><a href="#tile-event">TileEvent</a></code></td>
		<td>Fired when a tile is requested and starts loading.</td>
	</tr>
	<tr>
		<td><code><b>tileload</b></code></td>
		<td><code><a href="#tile-event">TileEvent</a></code></td>
		<td>Fired when a tile loads.</td>
	</tr>
	<tr>
		<td><code><b>tileunload</b></code></td>
		<td><code><a href="#tile-event">TileEvent</a></code></td>
		<td>Fired when a tile is removed (e.g. when you have <code>unloadInvisibleTiles</code> on).</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='tilelayer'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the layer to the map.</td>
	</tr>
	<tr>
		<td><code><b>bringToFront</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the tile layer to the top of all tile layers.</td>
	</tr>
	<tr>
		<td><code><b>bringToBack</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the tile layer to the bottom of all tile layers.</td>
	</tr>
	<tr>
		<td><code><b>setOpacity</b>(
			<nobr>&lt;Number&gt; <i>opacity</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the opacity of the tile layer.</td>
	</tr>
	<tr>
		<td><code><b>setZIndex</b>(
			<nobr>&lt;Number&gt; <i>zIndex</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the zIndex of the tile layer.</td>
	</tr>
	<tr>
		<td><code><b>redraw</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Causes the layer to clear all the tiles and request them again.</td>
	</tr>
	<tr>
		<td><code><b>setUrl</b>(
			<nobr>&lt;String&gt; <i><a href="#url-template">urlTemplate</a></i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Updates the layer's URL template and redraws it.</td>
	</tr>
	<tr>
		<td><code><b>getContainer</b>()</nobr>
		</code></td>
		<td><code>HTMLElement</code></td>
		<td>Returns the HTML element that contains the tiles for this layer.</td>
	</tr>
</table>



<h2 id="tilelayer-wms">TileLayer.WMS</h2>

<p>Used to display WMS services as tile layers on the map. Extends <a href="#tilelayer">TileLayer</a>.</p>

<h3>Usage example</h3>

<pre><code class="javascript">var nexrad = L.tileLayer.wms("http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi", {
	layers: 'nexrad-n0r-900913',
	format: 'image/png',
	transparent: true,
	attribution: "Weather data &copy; 2012 IEM Nexrad"
});</code></pre>

<h3>Creation</h3>

<table data-id='tilelayer-wms'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.tileLayer.wms</b>(
			<nobr>&lt;String&gt; <i>baseUrl</i></nobr>,
			<nobr>&lt;<a href="#tilelayer-wms-options">TileLayer.WMS options</a>&gt; <i>options</i> )</nobr>


		<td>Instantiates a WMS tile layer object given a base URL of the WMS service and a WMS parameters/options object.</td>
	</tr>
</table>

<h3 id="tilelayer-wms-options">Options</h3>

<p>Includes all <a href="#tilelayer-options">TileLayer options</a> and additionally:</p>

<table data-id='tilelayer-wms'>
	<tr>
		<th class="width100">Option</th>
		<th class="width100">Type</th>
		<th class="width100">Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>layers</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td><b>(required)</b> Comma-separated list of WMS layers to show.</td>
	</tr>
	<tr>
		<td><code><b>styles</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>Comma-separated list of WMS styles.</td>
	</tr>
	<tr>
		<td><code><b>format</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'image/jpeg'</span></code></td>
		<td>WMS image format (use <code><span class="string">'image/png'</span></code> for layers with transparency).</td>
	</tr>
	<tr>
		<td><code><b>transparent</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the WMS service will return images with transparency.</td>
	</tr>
	<tr>
		<td><code><b>version</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'1.1.1'</span></code></td>
		<td>Version of the WMS service to use.</td>
	</tr>
	<tr>
		<td><code><b>crs</b></code></td>
		<td><code><a href="#icrs">CRS</a></code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Coordinate Reference System to use for the WMS requests, defaults to map CRS. Don't change this if you're not sure what it means.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='tilelayer-wms'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setParams</b>(
			<nobr>&lt;<a href="#tilelayer-wms-options">WMS parameters</a>&gt; <i>params</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>noRedraw?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Merges an object with the new parameters and re-requests tiles on the current screen (unless <code>noRedraw</code> was set to <code><span class="literal">true</span></code>).</td>
	</tr>
</table>


<h2 id="tilelayer-canvas">TileLayer.Canvas</h2>

<p>Used to create Canvas-based tile layers where tiles get drawn on the browser side. Extends <a href="#tilelayer">TileLayer</a>.</p>

<h3>Usage example</h3>

<pre><code class="javascript">var canvasTiles = L.tileLayer.canvas();

canvasTiles.drawTile = function(canvas, tilePoint, zoom) {
	var ctx = canvas.getContext('2d');
	// draw something on the tile canvas
}</code></pre>

<h3>Creation</h3>

<table data-id='tilelayer-canvas'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.tileLayer.canvas</b>(
			<nobr>&lt;<a href="#tilelayer-options">TileLayer options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td>Instantiates a Canvas tile layer object given an options object (optionally).</td>
	</tr>
</table>

<h3>Options</h3>
<table data-id='tilelayer-canvas'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>async</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>Indicates that tiles will be drawn asynchronously. <a href="#tilelayer-canvas-tiledrawn">tileDrawn</a> method should be called for each tile after drawing completion.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='tilelayer-canvas'>
	<tr>
		<th class="width200">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr id = "tilelayer-canvas-drawtile">
		<td><code><b>drawTile</b>(
			<nobr>&lt;HTMLCanvasElement&gt; <i>canvas</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>tilePoint</i></nobr>,
			<nobr>&lt;Number&gt; <i>zoom</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>You need to define this method after creating the instance to draw tiles; <code>canvas</code> is the actual canvas tile on which you can draw, <code>tilePoint</code> represents the tile numbers, and <code>zoom</code> is the current zoom.</td>
	</tr>
	<tr id="tilelayer-canvas-tiledrawn">
		<td><code><b>tileDrawn</b>( <nobr>&lt;HTMLCanvasElement&gt; <i>canvas</i></nobr> )</code></td>
		<td>-</td>
		<td>If <code>async</code> option is defined, this function should be called for each tile after drawing completion. <code>canvas</code> is the same canvas element, that was passed to <a href="#tilelayer-canvas-drawtile">drawTile</a>.</td>
	</tr>
</table>


<h2 id="imageoverlay">ImageOverlay</h2>

<p>Used to load and display a single image over specific bounds of the map, implements <a href="#ilayer">ILayer</a> interface.</p>

<h3>Usage example</h3>

<pre><code class="javascript">var imageUrl = 'http://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg',
	imageBounds = [[40.712216, -74.22655], [40.773941, -74.12544]];

L.imageOverlay(imageUrl, imageBounds).addTo(map);</code></pre>

<h3>Creation</h3>

<table data-id='imageoverlay'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.ImageOverlay</b>(
			<nobr>&lt;String&gt; <i>imageUrl</i></nobr>,
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i></nobr>,
			<nobr>&lt;<a href="#imageoverlay-options">ImageOverlay options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates an image overlay object given the URL of the image and the geographical bounds it is tied to.</td>
	</tr>
</table>

<h3 id="imageoverlay-options">Options</h3>
<table data-id='imageoverlay'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th class="minwidth">Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>opacity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1.0</span></code></td>
		<td>The opacity of the image overlay.</td>
	</tr>
	<tr>
		<td><code><b>attribution</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>The attribution text of the image overlay.</td>
	</tr>
</table>

<h3 id="imageoverlay-methods">Methods</h3>
<table data-id='imageoverlay'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the overlay to the map.</td>
	</tr>
	<tr>
		<td><code><b>setOpacity</b>(
			<nobr>&lt;Number&gt; <i>opacity</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the opacity of the overlay.</td>
	</tr>
	<tr>
		<td><code><b>setUrl</b>(
			<nobr>&lt;String&gt; <i>imageUrl</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the URL of the image.</td>
	</tr>
	<tr>
		<td><code><b>bringToFront</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer to the top of all overlays.</td>
	</tr>
	<tr>
		<td><code><b>bringToBack</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer to the bottom of all overlays.</td>
	</tr>
</table>


<h2 id="path">Path</h2>
<p>An abstract class that contains options and constants shared between vector overlays (Polygon, Polyline, Circle). Do not use it directly.

<h3 id="path-options">Options</h3>
<table data-id='path'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th class="minwidth">Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>stroke</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether to draw stroke along the path. Set it to <code><span class="literal">false</span></code> to disable borders on polygons or circles.</td>
	</tr>
	<tr>
		<td><code><b>color</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'#03f'</span></code></td>
		<td>Stroke color.</td>
	</tr>
	<tr>
		<td><code><b>weight</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">5</span></code></td>
		<td>Stroke width in pixels.</td>
	</tr>
	<tr>
		<td><code><b>opacity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0.5</span></code></td>
		<td>Stroke opacity.</td>
	</tr>
	<tr>
		<td><code><b>fill</b></code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>Whether to fill the path with color. Set it to <code><span class="literal">false</span></code> to disable filling on polygons or circles.</td>
	</tr>
	<tr>
		<td><code><b>fillColor</b></code></td>
		<td><code>String</code></td>
		<td>same as color</td>
		<td>Fill color.</td>
	</tr>
	<tr>
		<td><code><b>fillOpacity</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">0.2</span></code></td>
		<td>Fill opacity.</td>
	</tr>
	<tr>
		<td><code><b>dashArray</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>A string that defines the stroke <a href="https://developer.mozilla.org/en/SVG/Attribute/stroke-dasharray">dash pattern</a>. Doesn't work on canvas-powered layers (e.g. Android 2).</td>
	</tr>
	<tr>
		<td><code><b>lineCap</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>A string that defines <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap">shape to be used at the end</a> of the stroke.</td>
	</tr>
	<tr>
		<td><code><b>lineJoin</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>A string that defines <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin">shape to be used at the corners</a> of the stroke.</td>
	</tr>
	<tr>
		<td><code><b>clickable</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>If <code><span class="literal">false</span></code>, the vector will not emit mouse events and will act as a part of the underlying map.</td>
	</tr>
	<tr>
		<td><code><b>pointerEvents</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="literal">null</span></code></td>
		<td>Sets the <code>pointer-events</code> attribute on the path if SVG backend is used.</td>
	</tr>
	<tr>
		<td><code><b>className</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">''</span></code></td>
		<td>Custom class name set on an element.</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='path'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>click</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user clicks (or taps) the object.</td>
	</tr>
	<tr>
		<td><code><b>dblclick</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user double-clicks (or double-taps) the object.</td>
	</tr>
	<tr>
		<td><code><b>mousedown</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user pushes the mouse button on the object.</td>
	</tr>
	<tr>
		<td><code><b>mouseover</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse enters the object.</td>
	</tr>
	<tr>
		<td><code><b>mouseout</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse leaves the object.</td>
	</tr>
	<tr>
		<td><code><b>contextmenu</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user pushes the right mouse button on the object, prevents default browser context menu from showing if there are listeners on this event.</td>
	</tr>
	<tr>
		<td><code><b>add</b></code></td>
		<td><code><a href="#event">Event</a></code>
		<td>Fired when the path is added to the map.</td>
	</tr>
	<tr>
		<td><code><b>remove</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the path is removed from the map.</td>
	</tr>
	<tr>
		<td><code><b>popupopen</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup bound to the path is open.</td>
	</tr>
	<tr>
		<td><code><b>popupclose</b></code></td>
		<td><code><a href="#popup-event">PopupEvent</a></code></td>
		<td>Fired when a popup bound to the path is closed.</td>
	</tr>
</table>

<h3 id="path-methods">Methods</h3>
<table data-id='path'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the layer to the map.</td>
	</tr>
	<tr id="path-bindpopup">
		<td><code><b>bindPopup</b>(
			<nobr>&lt;String&gt; <i>html</i> |</nobr> <nobr>&lt;HTMLElement&gt; <i>el</i> |</nobr> <nobr>&lt;<a href="#popup">Popup</a>&gt; <i>popup</i>,</nobr>
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Binds a popup with a particular HTML content to a click on this path.</td>
	</tr>
	<tr>
		<td><code><b>bindPopup</b>(
			<nobr>&lt;<a href="#popup">Popup</a>&gt; <i>popup</i></nobr>,
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Binds a given popup object to the path.</td>
	</tr>
	<tr id="path-unbindpopup">
		<td><code><b>unbindPopup</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Unbinds the popup previously bound to the path with <code>bindPopup</code>.</td>
	</tr>
	<tr id="path-openpopup">
		<td><code><b>openPopup</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Opens the popup previously bound by the <a href="#path-bindpopup">bindPopup</a> method in the given point, or in one of the path's points if not specified.</td>
	</tr>
	<tr id="path-closepopup">
		<td><code><b>closePopup</b>()</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Closes the path's bound popup if it is opened.</td>
	</tr>
	<tr id="path-setstyle">
		<td><code><b>setStyle</b>(
			<nobr>&lt;<a href="#path-options">Path options</a>&gt; <i>object</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes the appearance of a Path based on the options in the <a href="#path-options">Path options</a> object.</td>
	</tr>
	<tr id="path-getbounds">
		<td><code><b>getBounds</b>()</code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Returns the LatLngBounds of the path.</td>
	</tr>
	<tr>
		<td><code><b>bringToFront</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer to the top of all path layers.</td>
	</tr>
	<tr>
		<td><code><b>bringToBack</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer to the bottom of all path layers.</td>
	</tr>
	<tr>
		<td><code><b>redraw</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Redraws the layer. Sometimes useful after you changed the coordinates that the path uses.</td>
	</tr>
</table>

<h3>Static properties</h3>
<table data-id='path'>
	<tr>
		<th>Constant</th>
		<th>Type</th>
		<th>Value</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code>SVG</code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>True if SVG is used for vector rendering (true for most modern browsers).</td>
	</tr>
	<tr>
		<td><code>VML</code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>True if VML is used for vector rendering (IE 6-8).</td>
	</tr>
	<tr>
		<td><code>CANVAS</code></td>
		<td><code>Boolean</code></td>
		<td>depends</td>
		<td>True if Canvas is used for vector rendering (Android 2). You can also force this by setting global variable <code>L_PREFER_CANVAS</code> to <code><span class="literal">true</span></code> <em>before</em> the Leaflet include on your page — sometimes it can increase performance dramatically when rendering thousands of circle markers, but currently suffers from a bug that causes removing such layers to be extremely slow.</td>
	</tr>
	<tr>
		<td><code>CLIP_PADDING</code></td>
		<td><code>Number</code></td>
		<td><nobr><code><span class="number">0.5</span></code> for SVG</nobr><br /><nobr><code><span class="number">0.02</span></code> for VML</nobr></td>
		<td>How much to extend the clip area around the map view (relative to its size, e.g. 0.5 is half the screen in each direction). Smaller values mean that you will see clipped ends of paths while you're dragging the map, and bigger values decrease drawing performance.</td>
	</tr>
</table>


<h2 id="polyline">Polyline</h2>

<p>A class for drawing polyline overlays on a map. Extends <a href="#path">Path</a>. Use <a href="#map-addlayer">Map#addLayer</a> to add it to the map.</p>

<h3>Usage example</h3>
<pre><code class="javascript">// create a red polyline from an array of LatLng points
var polyline = L.polyline(latlngs, {color: 'red'}).addTo(map);

// zoom the map to the polyline
map.fitBounds(polyline.getBounds());</code></pre>

<h3>Creation</h3>

<table data-id='polyline'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.polyline</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[]&gt; <i>latlngs</i></nobr>,
			<nobr>&lt;<a href="#polyline-options">Polyline options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a polyline object given an array of geographical points and optionally an options object.</td>
	</tr>
</table>

<h3 id="polyline-options">Options</h3>

<p>You can use <a href="#path-options">Path options</a> and additionally the following options:</p>

<table data-id='polyline'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>smoothFactor</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1.0</span></code></td>
		<td>How much to simplify the polyline on each zoom level. More means better performance and smoother look, and less means more accurate representation.</td>
	</tr>
	<tr>
		<td><code><b>noClip</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>Disabled polyline clipping.</td>
	</tr>
</table>

<h3>Methods</h3>

<p>You can use <a href="#path-methods">Path methods</a> and additionally the following methods:</p>

<table data-id='polyline'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addLatLng</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a given point to the polyline.</td>
	</tr>
	<tr>
		<td><code><b>setLatLngs</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[]&gt; <i>latlngs</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Replaces all the points in the polyline with the given array of geographical points.</td>
	</tr>
	<tr>
		<td><code><b>getLatLngs</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a>[]</code></td>
		<td>Returns an array of the points in the path.</td>
	</tr>
	<tr>
		<td><code><b>spliceLatLngs</b>(
			<nobr>&lt;Number&gt; <i>index</i></nobr>,
			<nobr>&lt;Number&gt; <i>pointsToRemove</i></nobr>,
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng?</i>, &hellip; )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a>[]</code></td>
		<td>Allows adding, removing or replacing points in the polyline. Syntax is the same as in <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice">Array#splice</a>. Returns the array of removed points (if any).</td>
	</tr>
	<tr id="path-getbounds">
		<td><code><b>getBounds</b>()</code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Returns the LatLngBounds of the polyline.</td>
	</tr>
	<tr id="polyline-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the polyline (GeoJSON LineString Feature).</td>
	</tr>
</table>



<h2 id="multipolyline">MultiPolyline</h2>

<p>Extends <a href="#featuregroup">FeatureGroup</a> to allow creating multi-polylines (single layer that consists of several polylines that share styling/popup).</p>

<h3>Creation</h3>

<table data-id='multipolyline'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.multiPolyline</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i></nobr>,
			<nobr>&lt;<a href="#polyline-options">Polyline options</a>&gt; <i>options?</i> )</nobr>
		</code></td>



		<td>Instantiates a multi-polyline object given an array of arrays of geographical points (one for each individual polyline) and optionally an options object.</td>
	</tr>
</table>


<h3>Methods</h3>

<p>MultiPolylines accept all <a href="#polyline">Polyline methods</a> but
have different behavior around their coordinate contents since they can contain
multiple line features:</p>

<table data-id='multipolyline'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setLatLngs</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Replace all lines and their paths with the given array of arrays of
        geographical points.</td>
    </tr>
	<tr>
		<td><code><b>getLatLngs</b>()</td>

		<td><code><nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i></nobr>
		</code></td>
		<td>Returns an array of arrays of geographical points in each line.</td>
    </tr>
	<tr>
		<td><code><b>openPopup</b>()</td>

		<td><code>this</code></td>
		<td>Opens the popup previously bound by <a href="#path-bindpopup">bindPopup</a>.</td>
    </tr>
	<tr id="multipolyline-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the multipolyline (GeoJSON MultiLineString Feature).</td>
	</tr>
</table>



<h2 id="polygon">Polygon</h2>

<p>A class for drawing polygon overlays on a map. Extends <a href="#polyline">Polyline</a>. Use <a href="#map-addlayer">Map#addLayer</a> to add it to the map.</p>

<p>Note that points you pass when creating a polygon shouldn't have an additional last point equal to the first one &mdash; it's better to filter out such points.</p>

<h3>Creation</h3>

<table data-id='polygon'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.polygon</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[]&gt; <i>latlngs</i></nobr>,
			<nobr>&lt;<a href="#polyline-options">Polyline options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a polygon object given an array of geographical points and optionally an options object (the same as for Polyline). You can also create a polygon with holes by passing an array of arrays of latlngs, with the first latlngs array representing the exterior ring while the remaining represent the holes inside.</td>
	</tr>
</table>

<h3>Methods</h3>

<p>Polygon has the same options and methods as Polyline, with the following differences:</p>

<table data-id='polygon'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr id="polygon-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the polygon (GeoJSON Polygon Feature).</td>
	</tr>
</table>


<h2 id="multipolygon">MultiPolygon</h2>

<p>Extends <a href="#featuregroup">FeatureGroup</a> to allow creating multi-polygons (single layer that consists of several polygons that share styling/popup).</p>

<h3>Creation</h3>

<table data-id='multipolygon'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.multiPolygon</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i></nobr>,
			<nobr>&lt;<a href="#polyline-options">Polyline options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a multi-polygon object given an array of latlngs arrays (one for each individual polygon) and optionally an options object (the same as for MultiPolyline).</td>
	</tr>
</table>

<h3>Methods</h3>

<p>MultiPolygons accept all <a href="#polyline">Polyline methods</a> but
have different behavior around their coordinate contents since they can contain
multiple polygon features:</p>

<table data-id='multipolygon'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setLatLngs</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Replace all polygons and their paths with the given array of arrays of
        geographical points.</td>
    </tr>
	<tr>
		<td><code><b>getLatLngs</b>()</td>

		<td><code><nobr>&lt;<a href="#latlng">LatLng</a>[][]&gt; <i>latlngs</i></nobr>
		</code></td>
		<td>Returns an array of arrays of geographical points in each polygon.</td>
    </tr>
	<tr>
		<td><code><b>openPopup</b>()</td>

		<td><code>this</code></td>
		<td>Opens the popup previously bound by <a href="#path-bindpopup">bindPopup</a>.</td>
    </tr>
	<tr id="multipolygon-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the multipolygon (GeoJSON MultiPolygon Feature).</td>
	</tr>
</table>

<h2 id="rectangle">Rectangle</h2>

<p>A class for drawing rectangle overlays on a map. Extends <a href="#polygon">Polygon</a>. Use <a href="#map-addlayer">Map#addLayer</a> to add it to the map.</p>

<h3>Usage example</h3>
<pre><code class="javascript">// define rectangle geographical bounds
var bounds = [[54.559322, -5.767822], [56.1210604, -3.021240]];

// create an orange rectangle
L.rectangle(bounds, {color: "#ff7800", weight: 1}).addTo(map);

// zoom the map to the rectangle bounds
map.fitBounds(bounds);</code></pre>

<h3>Creation</h3>

<table data-id='rectangle'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.rectangle</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i></nobr>,
			<nobr>&lt;<a href="#path-options">Path options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a rectangle object with the given geographical bounds and optionally an options object.</td>
	</tr>
</table>

<h3>Methods</h3>

<p>You can use <a href="#path-methods">Path methods</a> and additionally the following methods:</p>

<table data-id='rectangle'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setBounds</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>bounds</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Redraws the rectangle with the passed bounds.</td>
	</tr>
</table>


<h2 id="circle">Circle</h2>

<p>A class for drawing circle overlays on a map. Extends <a href="#path">Path</a>. Use <a href="#map-addlayer">Map#addLayer</a> to add it to the map.</p>

<pre><code class="javascript">L.circle([50.5, 30.5], 200).addTo(map);</pre></code>

<h3>Creation</h3>

<table data-id='circle'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.circle</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i></nobr>,
			<nobr>&lt;Number&gt; <i>radius</i></nobr>,
			<nobr>&lt;<a href="#path-options">Path options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a circle object given a geographical point, a radius in meters and optionally an options object.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='circle'>
	<tr>
		<th class="width200">Method</th>
		<th class="minwidth">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>getLatLng</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the current geographical position of the circle.</td>
	</tr>
	<tr>
		<td><code><b>getRadius</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the current radius of a circle. Units are in meters.</td>
	</tr>
	<tr>
		<td><code><b>setLatLng</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the position of a circle to a new location.</td>
	</tr>
	<tr>
		<td><code><b>setRadius</b>(
			<nobr>&lt;Number&gt; <i>radius</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the radius of a circle. Units are in meters.</td>
	</tr>
	<tr id="circle-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the circle (GeoJSON Point Feature).</td>
	</tr>
</table>



<h2 id="circlemarker">CircleMarker</h2>

<p>A circle of a fixed size with radius specified in pixels. Extends <a href="#circle">Circle</a>. Use <a href="#map-addlayer">Map#addLayer</a> to add it to the map.</p>

<h3>Creation</h3>

<table data-id='circlemarker'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.circleMarker</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i></nobr>,
			<nobr>&lt;<a href="#path-options">Path options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Instantiates a circle marker given a geographical point and optionally an options object. The default radius is 10 and can be altered by passing a "radius" member in the path options object.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='circlemarker'>
	<tr>
		<th class="width200">Method</th>
		<th class="minwidth">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setLatLng</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the position of a circle marker to a new location.</td>
	</tr>
	<tr>
		<td><code><b>setRadius</b>(
			<nobr>&lt;Number&gt; <i>radius</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the radius of a circle marker. Units are in pixels.</td>
	</tr>
	<tr id="circlemarker-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the circle marker (GeoJSON Point Feature).</td>
	</tr>
</table>



<h2 id="layergroup">LayerGroup</h2>

<p>Used to group several layers and handle them as one. If you add it to the map, any layers added or removed from the group will be added/removed on the map as well. Implements <a href="#ilayer">ILayer</a> interface.</p>

<pre><code class="javascript">L.layerGroup([marker1, marker2])
	.addLayer(polyline)
	.addTo(map);</code></pre>

<h3>Creation</h3>

<table data-id='layergroup'>
	<tr>
		<th class="width250">Factory</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.layerGroup</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>[]&gt; <i>layers?</i> )</nobr>
		</code></td>


		<td>Create a layer group, optionally given an initial set of layers.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='layergroup'>
	<tr>
		<th class="width200">Method</th>
		<th class="minwidth">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the group of layers to the map.</td>
	</tr>
	<tr>
		<td><code><b>addLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a given layer to the group.</td>
	</tr>
	<tr>
		<td><code><b>removeLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes a given layer from the group.</td>
	</tr>
	<tr>
		<td><code><b>removeLayer</b>(
			<nobr>&lt;String&gt; <i>id</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes a given layer of the given id from the group.</td>
	</tr>
	<tr>
		<td><code><b>hasLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the given layer is currently added to the group.</td>
	</tr>
	<tr>
		<td><code><b>getLayer</b>(
			<nobr>&lt;String&gt; <i>id</i> )</nobr>
		</code></td>

		<td><code><a href="#ilayer">ILayer</a></code></td>
		<td>Returns the layer with the given id.</td>
	</tr>
	<tr>
		<td><code><b>getLayers</b>()</code></td>
		<td><code>Array</code></td>
		<td>Returns an array of all the layers added to the group.</td>
	</tr>
	<tr>
		<td><code><b>clearLayers</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Removes all the layers from the group.</td>
	</tr>
	<tr>
		<td><code><b>eachLayer</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Iterates over the layers of the group, optionally specifying context of the iterator function.
<pre><code>group.eachLayer(function (layer) {
	layer.bindPopup('Hello');
});</code></pre>
		</td>
	</tr>
	<tr id="layergroup-togeojson">
		<td><code><b>toGeoJSON</b>()</code></td>
		<td><code>Object</code></td>
		<td>Returns a <a href="http://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> representation of the layer group (GeoJSON FeatureCollection).</td>
	</tr>
</table>



<h2 id="featuregroup">FeatureGroup</h2>

<p>Extended <a href="#layergroup">layerGroup</a> that also has mouse events (propagated from members of the group) and a shared bindPopup method. Implements <a href="#ilayer">ILayer</a> interface.</p>

<pre><code class="javascript">L.featureGroup([marker1, marker2, polyline])
	.bindPopup('Hello world!')
	.on('click', function() { alert('Clicked on a group!'); })
	.addTo(map);</code></pre>

<h3>Creation</h3>

<table data-id='featuregroup'>
	<tr>
		<th class="width300">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.featureGroup</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>[]&gt; <i>layers?</i> )</nobr>
		</code></td>



		<td>Create a layer group, optionally given an initial set of layers.</td>
	</tr>
</table>

<h3>Methods</h3>

<p>Has all <a href="#layergroup">layerGroup</a> methods and additionally:</p>

<table data-id='featuregroup'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>bindPopup</b>(
			<nobr>&lt;String&gt; <i>htmlContent</i></nobr>,
			<nobr>&lt;<a href="#popup-options">Popup options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Binds a popup with a particular HTML content to a click on any layer from the group that has a <code>bindPopup</code> method.</td>
	</tr>
	<tr>
		<td><code><b>getBounds</b>()</code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Returns the LatLngBounds of the Feature Group (created from bounds and coordinates of its children).</td>
	</tr>
	<tr>
		<td><code><b>setStyle</b>(
			<nobr>&lt;<a href="#path-options">Path options</a>&gt; <i>style</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the given path options to each layer of the group that has a <code>setStyle</code> method.</td>
	</tr>
	<tr>
		<td><code><b>bringToFront</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer group to the top of all other layers.</td>
	</tr>
	<tr>
		<td><code><b>bringToBack</b>()</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Brings the layer group to the bottom of all other layers.</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='featuregroup'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>click</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user clicks (or taps) the group.</td>
	</tr>
	<tr>
		<td><code><b>dblclick</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user double-clicks (or double-taps) the group.</td>
	</tr>
	<tr>
		<td><code><b>mouseover</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse enters the group.</td>
	</tr>
	<tr>
		<td><code><b>mouseout</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the mouse leaves the group.</td>
	</tr>
	<tr>
		<td><code><b>mousemove</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired while the mouse moves over the layers of the group.</td>
	</tr>
	<tr>
		<td><code><b>contextmenu</b></code></td>
		<td><code><a href="#mouse-event">MouseEvent</a></code></td>
		<td>Fired when the user right-clicks on one of the layers.</td>
	</tr>
	<tr>
		<td><code><b>layeradd</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code>
		<td>Fired when a layer is added to the group.</td>
	</tr>
	<tr>
		<td><code><b>layerremove</b></code></td>
		<td><code><a href="#layer-event">LayerEvent</a></code>
		<td>Fired when a layer is removed from the map.</td>
	</tr>
</table>


<h2 id="geojson">GeoJson</h2>

<p>Represents a <a href="http://geojson.org/geojson-spec.html">GeoJSON</a> layer. Allows you to parse GeoJSON data and display it on the map. Extends <a href="#featuregroup">FeatureGroup</a>.</p>

<pre><code class="javascript">L.geoJson(data, {
	style: function (feature) {
		return {color: feature.properties.color};
	},
	onEachFeature: function (feature, layer) {
		layer.bindPopup(feature.properties.description);
	}
}).addTo(map);</code></pre>

<p>Each feature layer created by it gets a <code>feature</code> property that links to the GeoJSON feature data the layer was created from (so that you can access its properties later).</p>

<h3>Creation</h3>

<table data-id='geojson'>
	<tr>
		<th>Factory</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.geoJson</b>(
			<nobr>&lt;Object&gt; <i>geojson?</i></nobr>,
			<nobr>&lt;<a href="#geojson-options">GeoJSON options</a>&gt; <i>options?</i> )</nobr>
		</code></td>

		<td>Creates a GeoJSON layer. Optionally accepts an object in <a href="http://geojson.org/geojson-spec.html">GeoJSON format</a> to display on the map (you can alternatively add it later with <code>addData</code> method) and an options object.</td>
	</tr>
</table>

<h3 id="geojson-options">Options</h3>

<table data-id='geojson'>
	<tr>
		<th>Option</th>
		<th>Description</th>
	</tr>
	<tr id="geojson-pointtolayer">
		<td><code><b>pointToLayer</b>(
			<nobr>&lt;GeoJSON&gt; <i>featureData</i></nobr>,
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td>Function that will be used for creating layers for GeoJSON points (if not specified, simple markers will be created).</td>
	</tr>
	<tr id="geojson-style">
		<td><code><b>style</b>(
			<nobr>&lt;GeoJSON&gt; <i>featureData</i> )</nobr>
		</code></td>

		<td>Function that will be used to get style options for vector layers created for GeoJSON features.</td>
	</tr>
	<tr id="geojson-oneachfeature">
		<td><code><b>onEachFeature</b>(
			<nobr>&lt;GeoJSON&gt; <i>featureData</i></nobr>,
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td>Function that will be called on each created feature layer. Useful for attaching events and popups to features.</td>
	</tr>
	<tr id="geojson-filter">
		<td><code><b>filter</b>(
			<nobr>&lt;GeoJSON&gt; <i>featureData</i></nobr>,
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td>Function that will be used to decide whether to show a feature or not.</td>
	</tr>
	<tr id="geojson-coordstolatlng">
		<td><code><b>coordsToLatLng</b>(
			<nobr>&lt;Array&gt; <i>coords</i></nobr> )</nobr>
		</code></td>

		<td>Function that will be used for converting GeoJSON coordinates to <a href="#latlng">LatLng</a> points (if not specified, coords will be assumed to be WGS84 &mdash; standard <code>[longitude, latitude]</code> values in degrees).</td>
	</tr>
</table>

<p>Additionally accepts all <a href="#path-options">Path options</a> for polylines and polygons.</p>

<h3>Methods</h3>

<table data-id='geojson'>
	<tr>
		<th class="width250">Method</th>
		<th class="minwidth">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addData</b>(
			<nobr>&lt;GeoJSON&gt; <i>data</i> )</nobr>
		</code></td>

		<td><code>this</code></td>
		<td>Adds a GeoJSON object to the layer.</td>
	</tr>
	<tr id="geojson-setstyle">
		<td><code><b>setStyle</b>(
			<nobr>&lt;Function&gt; <i><a href="#geojson-style">style</a></i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Changes styles of GeoJSON vector layers with the given style function.</td>
	</tr>
	<tr id="geojson-resetstyle">
		<td><code><b>resetStyle</b>(
			<nobr>&lt;<a href="#path">Path</a>&gt; <i>layer</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Resets the given vector layer's style to the original GeoJSON style, useful for resetting style after hover events.</td>
	</tr>
</table>

<h3>Static methods</h3>

<table data-id='geojson'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>geometryToLayer</b>(
			<nobr>&lt;GeoJSON&gt; <i>featureData</i></nobr>,
			<nobr>&lt;<a href="#geojson-pointtolayer">Function</a>&gt; <i>pointToLayer?</i> )</nobr>
		</code></td>

		<td><code><a href="#ilayer">ILayer</a></code></td>
		<td>Creates a layer from a given GeoJSON feature.</td>
	</tr>
	<tr>
		<td><code><b>coordsToLatLng</b>(
			<nobr>&lt;Array&gt; <i>coords</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>reverse?</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Creates a LatLng object from an array of 2 numbers (latitude, longitude) used in GeoJSON for points. If <code>reverse</code> is set to <code><span class="literal">true</span></code>, the numbers will be interpreted as (longitude, latitude).</td>
	</tr>
	<tr>
		<td><code><b>coordsToLatLngs</b>(
			<nobr>&lt;Array&gt; <i>coords</i></nobr>,
			<nobr>&lt;Number&gt; <i>levelsDeep?</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>reverse?</i> )</nobr>
		</code></td>

		<td><code>Array</code></td>
		<td>Creates a multidimensional array of LatLng objects from a GeoJSON coordinates array. <code>levelsDeep</code> specifies the nesting level (0 is for an array of points, 1 for an array of arrays of points, etc., 0 by default). If <code>reverse</code> is set to <code><span class="literal">true</span></code>, the numbers will be interpreted as (longitude, latitude).</td>
	</tr>
</table>




<h2 id="latlng">LatLng</h2>

<p>Represents a geographical point with a certain latitude and longitude.</p>
<pre><code class="javascript">var latlng = L.latLng(50.5, 30.5);</code></pre>

<p>All Leaflet methods that accept LatLng objects also accept them in a simple Array form and simple object form (unless noted otherwise), so these lines are equivalent:</p>

<pre><code>map.panTo([50, 30]);
map.panTo({lon: 30, lat: 50});
map.panTo({lat: 50, lng: 30});
map.panTo(L.latLng(50, 30));</code></pre>

<h3>Creation</h3>

<table data-id='latlng'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.latLng</b>(
			<nobr>&lt;Number&gt; <i>latitude</i></nobr>,
			<nobr>&lt;Number&gt; <i>longitude</i></nobr>,
			<nobr>&lt;Number&gt; <i>altitude?</i> )</nobr>
		</code></td>


		<td>Creates an object representing a geographical point with the given latitude and longitude (and optionally altitude).</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='latlng'>
	<tr>
		<th class="width100">Property</th>
		<th class="width100">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>lat</b></code></td>
		<td><code>Number</code></td>
		<td>Latitude in degrees.</td>
	</tr>
	<tr>
		<td><code><b>lng</b></code></td>
		<td><code>Number</code></td>
		<td>Longitude in degrees.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='latlng'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>distanceTo</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>otherLatlng</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>
		<td>Returns the distance (in meters) to the given LatLng calculated using the Haversine formula. See <a href="http://en.wikipedia.org/wiki/Haversine_formula">description on wikipedia</a></td>
	</tr>
	<tr>
		<td><code><b>equals</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>otherLatlng</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the given LatLng point is at the same position (within a small margin of error).</td>
	</tr>
	<tr>
		<td><code><b>toString</b>()</code></td>
		<td><code>String</code></td>
		<td>Returns a string representation of the point (for debugging purposes).</td>
	</tr>
	<tr>
		<td><code><b>wrap</b>(
			<nobr>&lt;Number&gt; <i>left</i></nobr>,
			<nobr>&lt;Number&gt; <i>right</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns a new <code>LatLng</code> object with the longitude wrapped around <code>left</code> and <code>right</code> boundaries (<code><span class="number">-180</span></code> to <code><span class="number">180</span></code> by default).</td>
	</tr>
</table>

<h3>Constants</h3>

<table data-id='latlng'>
	<tr>
		<th class="width100">Constant</th>
		<th class="width100">Type</th>
		<th class="width100">Value</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>DEG_TO_RAD</b></code></td>
		<td><code>Number</code></td>
		<td><code>Math.PI / <span class="number">180</span></code></td>
		<td>A multiplier for converting degrees into radians.</td>
	</tr>
	<tr>
		<td><code><b>RAD_TO_DEG</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">180</span> / Math.PI</code></td>
		<td>A multiplier for converting radians into degrees.</td>
	</tr>
	<tr>
		<td><code><b>MAX_MARGIN</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">1.0E-9</span></code></td>
		<td>Max margin of error for the equality check.</td>
	</tr>
</table>




<h2 id="latlngbounds">LatLngBounds</h2>

<p>Represents a rectangular geographical area on a map.</p>
<pre><code class="javascript">var southWest = L.latLng(40.712, -74.227),
	northEast = L.latLng(40.774, -74.125),
	bounds = L.latLngBounds(southWest, northEast);</code></pre>

<p>All Leaflet methods that accept LatLngBounds objects also accept them in a simple Array form (unless noted otherwise), so the bounds example above can be passed like this:</p>

<pre><code class="javascript">map.fitBounds([
	[40.712, -74.227],
	[40.774, -74.125]
]);</code></pre>

<h3>Creation</h3>

<table data-id='latlngbounds'>
	<tr>
		<th class="width250">Factory</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>
			<code><b>L.latLngBounds</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>southWest</i></nobr>,
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>northEast</i></nobr> )</code>
		</td>



		<td>Creates a latLngBounds object by defining south-west and north-east corners of the rectangle.</td>
	</tr>
	<tr>
		<td><code><b>L.latLngBounds</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>[]&gt; <i>latlngs</i> )</nobr>
		</code></td>

		<td>Creates a LatLngBounds object defined by the geographical points it contains. Very useful for zooming the map to fit a particular set of locations with <a href="#map-fitbounds">fitBounds</a>.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='latlngbounds'>
	<tr>
		<th class="width300">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>extend</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>|<a href="#latlngbounds">LatLngBounds</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Extends the bounds to contain the given point or bounds.</td>
	</tr>
	<tr>
		<td><code><b>getSouthWest</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the south-west point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getNorthEast</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the north-east point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getNorthWest</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the north-west point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getSouthEast</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the south-east point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getWest</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the west longitude of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getSouth</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the south latitude of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getEast</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the east longitude of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getNorth</b>()</code></td>
		<td><code>Number</code></td>
		<td>Returns the north latitude of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>getCenter</b>()</code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Returns the center point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>contains</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>otherBounds</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle contains the given one.</td>
	</tr>
	<tr>
		<td><code><b>contains</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle contains the given point.</td>
	</tr>
	<tr>
		<td><code><b>intersects</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>otherBounds</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle intersects the given bounds.</td>
	</tr>
	<tr>
		<td><code><b>equals</b>(
			<nobr>&lt;<a href="#latlngbounds">LatLngBounds</a>&gt; <i>otherBounds</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle is equivalent (within a small margin of error) to the given bounds.</td>
	</tr>
	<tr>
		<td><code><b>toBBoxString</b>()</code></td>
		<td><code>String</code></td>
		<td>Returns a string with bounding box coordinates in a <code><span class="string">'southwest_lng,southwest_lat,northeast_lng,northeast_lat'</span></code> format. Useful for sending requests to web services that return geo data.</td>
	</tr>
	<tr>
		<td><code><b>pad</b>(
			<nobr>&lt;Number&gt; <i>bufferRatio</i> )</nobr>
		</code></td>

		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Returns bigger bounds created by extending the current bounds by a given percentage in each direction.</td>
	</tr>
	<tr>
		<td><code><b>isValid</b>()</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the bounds are properly initialized.</td>
	</tr>
</table>




<h2 id="point">Point</h2>

<p>Represents a point with x and y coordinates in pixels.</p>

<pre><code>var point = L.point(200, 300);</code></pre>

<p>All Leaflet methods and options that accept Point objects also accept them in a simple Array form (unless noted otherwise), so these lines are equivalent:</p>

<pre><code>map.panBy([200, 300]);
map.panBy(L.point(200, 300));</code></pre>

<h3>Creation</h3>

<table data-id='point'>
	<tr>
		<th class="width250">Factory</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.point</b>(
			<nobr>&lt;Number&gt; <i>x</i>, &lt;Number&gt; <i>y</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>round?</i> )</nobr>
		</code></td>

		<td>Creates a Point object with the given <code>x</code> and <code>y</code> coordinates. If optional <code>round</code> is set to <code><span class="literal">true</span></code>, rounds the <code>x</code> and <code>y</code> values.</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='point'>
	<tr>
		<th class="width100">Property</th>
		<th class="width100">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>x</b></code></td>
		<td><code>Number</code></td>
		<td>The x coordinate.</td>
	</tr>
	<tr>
		<td><code><b>y</b></code></td>
		<td><code>Number</code></td>
		<td>The y coordinate.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='point'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>add</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>otherPoint</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the result of addition of the current and the given points.</td>
	</tr>
	<tr>
		<td><code><b>subtract</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>otherPoint</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the result of subtraction of the given point from the current.</td>
	</tr>
	<tr>
		<td><code><b>multiplyBy</b>(
			<nobr>&lt;Number&gt; <i>number</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the result of multiplication of the current point by the given number.</td>
	</tr>
	<tr>
		<td><code><b>divideBy</b>(
			<nobr>&lt;Number&gt; <i>number</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>round?</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the result of division of the current point by the given number. If optional <code>round</code> is set to <code><span class="literal">true</span></code>, returns a rounded result.</td>
	</tr>
	<tr>
		<td><code><b>distanceTo</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>otherPoint</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>
		<td>Returns the distance between the current and the given points.</td>
	</tr>
	<tr>
		<td><code><b>clone</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns a copy of the current point.</td>
	</tr>
	<tr>
		<td><code><b>round</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns a copy of the current point with rounded coordinates.</td>
	</tr>
	<tr>
		<td><code><b>floor</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns a copy of the current point with floored coordinates (rounded down).</td>
	</tr>
	<tr>
		<td><code><b>equals</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>otherPoint</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the given point has the same coordinates.</td>
	</tr>
	<tr>
		<td><code><b>contains</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>otherPoint</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the both coordinates of the given point are less than the corresponding current point coordinates (in absolute values).</td>
	</tr>
	<tr>
		<td><code><b>toString</b>()</code></td>
		<td><code>String</code></td>
		<td>Returns a string representation of the point for debugging purposes.</td>
	</tr>
</table>



<h2 id="bounds">Bounds</h2>

<p>Represents a rectangular area in pixel coordinates.</p>
<pre><code class="javascript">var p1 = L.point(10, 10),
	p2 = L.point(40, 60),
	bounds = L.bounds(p1, p2);</code></pre>

<p>All Leaflet methods that accept Bounds objects also accept them in a simple Array form (unless noted otherwise), so the bounds example above can be passed like this:</p>

<pre><code class="javascript">otherBounds.intersects([[10, 10], [40, 60]]);</code></pre>

<h3>Creation</h3>

<table data-id='bounds'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.bounds</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>topLeft</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>bottomRight</i> )</nobr>
		</code></td>


		<td>Creates a Bounds object from two coordinates (usually top-left and bottom-right corners).</td>
	</tr>
	<tr>
		<td><code><b>L.bounds</b>(
			<nobr>&lt;<a href="#point">Point</a>[]&gt; <i>points</i> )</nobr>
		</code></td>



		<td>Creates a Bounds object defined by the points it contains.</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='bounds'>
	<tr>
		<th class="width100">Property</th>
		<th class="width100">Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>min</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The top left corner of the rectangle.</td>
	</tr>
	<tr>
		<td><code><b>max</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The bottom right corner of the rectangle.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='bounds'>
	<tr>
		<th class="width250">Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>extend</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Extends the bounds to contain the given point.</td>
	</tr>
	<tr>
		<td><code><b>getCenter</b>()</code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the center point of the bounds.</td>
	</tr>
	<tr>
		<td><code><b>contains</b>(
			<nobr>&lt;<a href="#bounds">Bounds</a>&gt; <i>otherBounds</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle contains the given one.</td>
	</tr>
	<tr>
		<td><code><b>contains</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle contains the given point.</td>
	</tr>
	<tr>
		<td><code><b>intersects</b>(
			<nobr>&lt;<a href="#bounds">Bounds</a>&gt; <i>otherBounds</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the rectangle intersects the given bounds.</td>
	</tr>
	<tr>
		<td><code><b>isValid</b>()</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the bounds are properly initialized.</td>
	</tr>
	<tr>
		<td><code><b>getSize</b>()</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the size of the given bounds.</td>
	</tr>
</table>


<h2 id="icon">Icon</h2>

<p>Represents an icon to provide when creating a marker.</p>

<pre><code class="javascript">var myIcon = L.icon({
	iconUrl: 'my-icon.png',
	iconRetinaUrl: 'my-icon@2x.png',
	iconSize: [38, 95],
	iconAnchor: [22, 94],
	popupAnchor: [-3, -76],
	shadowUrl: 'my-icon-shadow.png',
	shadowRetinaUrl: 'my-icon-shadow@2x.png',
	shadowSize: [68, 95],
	shadowAnchor: [22, 94]
});

L.marker([50.505, 30.57], {icon: myIcon}).addTo(map);</code></pre>

<p><code>L.Icon.Default</code> extends <code>L.Icon</code> and is the blue icon Leaflet uses for markers by default.</p>

<h3>Creation</h3>

<table data-id='icon'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.icon</b>(
			<nobr>&lt;<a href="#icon-options">Icon options</a>&gt; <i>options</i> )</nobr>
		</code></td>


		<td>Creates an icon instance with the given options.</td>
	</tr>
</table>

<h3 id="icon-options">Options</h3>

<table data-id='icon'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>iconUrl</b></code></td>
		<td><code>String</code>
		<td>(required) The URL to the icon image (absolute or relative to your script path).</td>
	</tr>
	<tr>
		<td><code><b>iconRetinaUrl</b></code></td>
		<td><code>String</code>
		<td>The URL to a retina sized version of the icon image (absolute or relative to your script path). Used for Retina screen devices.</td>
	</tr>
	<tr>
		<td><code><b>iconSize</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Size of the icon image in pixels.</td>
	</tr>
	<tr>
		<td><code><b>iconAnchor</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The coordinates of the "tip" of the icon (relative to its top left corner). The icon will be aligned so that this point is at the marker's geographical location. Centered by default if size is specified, also can be set in CSS with negative margins.</td>
	</tr>
	<tr>
		<td><code><b>shadowUrl</b></code></td>
		<td><code>String</code>
		<td>The URL to the icon shadow image. If not specified, no shadow image will be created.</td>
	</tr>
	<tr>
		<td><code><b>shadowRetinaUrl</b></code></td>
		<td><code>String</code>
		<td>The URL to the retina sized version of the icon shadow image. If not specified, no shadow image will be created. Used for Retina screen devices.</td>
	</tr>
	<tr>
		<td><code><b>shadowSize</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Size of the shadow image in pixels.</td>
	</tr>
	<tr>
		<td><code><b>shadowAnchor</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The coordinates of the "tip" of the shadow (relative to its top left corner) (the same as <code>iconAnchor</code> if not specified).</td>
	</tr>
	<tr>
		<td><code><b>popupAnchor</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The coordinates of the point from which popups will "open", relative to the icon anchor.</td>
	</tr>
	<tr>
		<td><code><b>className</b></code></td>
		<td><code>String</code>
		<td>A custom class name to assign to both icon and shadow images. Empty by default.</td>
	</tr>
</table>


<h2 id="divicon">DivIcon</h2>

<p>Represents a lightweight icon for markers that uses a simple <code>div</code> element instead of an image.</p>

<pre><code class="javascript">var myIcon = L.divIcon({className: 'my-div-icon'});
// you can set .my-div-icon styles in CSS

L.marker([50.505, 30.57], {icon: myIcon}).addTo(map);</code></pre>

<p>By default, it has a <code><span class="string">'leaflet-div-icon'</span></code> class and is styled as a little white square with a shadow.</p>

<h3>Creation</h3>

<table data-id='divicon'>
	<tr>
		<th class="width250">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.divIcon</b>(
			<nobr>&lt;<a href="#divicon-options">DivIcon options</a>&gt; <i>options</i> )</nobr>
		</code></td>



		<td>Creates a div icon instance with the given options.</td>
	</tr>
</table>

<h3 id="divicon-options">Options</h3>

<table data-id='divicon'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>iconSize</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Size of the icon in pixels. Can be also set through CSS.</td>
	</tr>
	<tr>
		<td><code><b>iconAnchor</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The coordinates of the "tip" of the icon (relative to its top left corner). The icon will be aligned so that this point is at the marker's geographical location. Centered by default if size is specified, also can be set in CSS with negative margins.</td>
	</tr>
	<tr>
		<td><code><b>popupAnchor</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The coordinates of the point from which popups will "open", relative to the icon anchor.</td>
	</tr>
	<tr>
		<td><code><b>className</b></code></td>
		<td><code>String</code>
		<td>A custom class name to assign to the icon. <code><span class="string">'leaflet-div-icon'</span></code> by default.</td>
	</tr>
	<tr>
		<td><code><b>html</b></code></td>
		<td><code>String</code>
		<td>A custom HTML code to put inside the div element, empty by default.</td>
	</tr>
</table>




<h2 id="control">Control</h2>

<p>The base class for all Leaflet controls. Implements <a href="#icontrol">IControl</a> interface. You can add controls to the map like this:</p>

<pre><code>control.addTo(map);
// the same as
map.addControl(control);</code></pre>

<h3>Creation</h3>
<table data-id='control'>
	<tr>
		<th class="width300">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.control</b>(
			<nobr>&lt;<a href="#control-options">Control options</a>&gt; <i>options?</i> )</nobr>
		</code></td>



		<td>Creates a control with the given options.</td>
	</tr>
</table>

<h3>Options</h3>
<table data-id='control'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>position</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'topright'</span></td>
		<td>The initial position of the control (one of the map corners). See <a href="#control-positions">control positions</a>.</td>
	</tr>
</table>

<h3>Methods</h3>
<table data-id='control'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setPosition</b>(
			<nobr>&lt;String&gt; <i>position</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the position of the control. See <a href="#control-positions">control positions</a>.</td>
	</tr>
	<tr>
		<td><code><b>getPosition</b>()</code></td>
		<td><code>String</code></td>
		<td>Returns the current position of the control.</td>
	</tr>
	<tr>
		<td><code><b>addTo</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds the control to the map.</td>
	</tr>
	<tr>
		<td><code><b>removeFrom</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes the control from the map.</td>
	</tr>
	<tr>
		<td><code><b>getContainer</b>()</code></td>
		<td><code>HTMLElement</code></td>
		<td>Returns the HTML container of the control.</td>
	</tr>
</table>

<h3 id="control-positions">Control Positions</h3>

<p>Control positions (map corner to put a control to) are set using strings. Margins between controls and the map border are set with CSS, so that you can easily override them.</p>

<table data-id='control'>
	<tr>
		<th class="minwidth">Position</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><span class="string">'topleft'</span></code></td>
		<td>Top left of the map.</td>
	</tr>
	<tr>
		<td><code><span class="string">'topright'</span></code></td>
		<td>Top right of the map.</td>
	</tr>
	<tr>
		<td><code><span class="string">'bottomleft'</span></code></td>
		<td>Bottom left of the map.</td>
	</tr>
	<tr>
		<td><code><span class="string">'bottomright'</span></code></td>
		<td>Bottom right of the map.</td>
	</tr>
</table>


<h2 id="control-zoom">Control.zoom</h2>

<p>A basic zoom control with two buttons (zoom in and zoom out). It is put on the map by default unless you set its <code>zoomControl</code> option to <code><span class="literal">false</span></code>. Extends <a href="#control">Control</a>.</p>

<h3>Creation</h3>
<table data-id='control-zoom'>
	<tr>
		<th>Factory</th>

		<th class="width200">Description</th>
	</tr>
	<tr>
		<td><code><b>L.control.zoom</b>(
			<nobr>&lt;<a href="#control-zoom-options">Control.Zoom options</a>&gt; <i>options?</i> )</nobr>
		</code></td>


		<td>Creates a zoom control.</td>
	</tr>
</table>

<h3 id="control-zoom-options">Options</h3>
<table data-id='control-zoom'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>position</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'topleft'</span></td>
		<td>The position of the control (one of the map corners). See <a href="#control-positions">control positions</a>.</td>
	</tr>
	<tr>
		<td><code><b>zoomInText</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'+'</span></td>
		<td>The text set on the zoom in button.</td>
	</tr>
	<tr>
		<td><code><b>zoomOutText</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'-'</span></td>
		<td>The text set on the zoom out button.</td>
	</tr>
	<tr>
		<td><code><b>zoomInTitle</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'Zoom in'</span></td>
		<td>The title set on the zoom in button.</td>
	</tr>
	<tr>
		<td><code><b>zoomOutTitle</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'Zoom out'</span></td>
		<td>The title set on the zoom out button.</td>
	</tr>
</table>



<h2 id="control-attribution">Control.Attribution</h2>

<p>The attribution control allows you to display attribution data in a small text box on a map. It is put on the map by default unless you set its <code>attributionControl</code> option to <code><span class="literal">false</span></code>, and it fetches attribution texts from layers with <code>getAttribution</code> method automatically. Extends <a href="#control">Control</a>.</p>

<h3>Creation</h3>
<table data-id='control-attribution'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.control.attribution</b>(
			<nobr>&lt;<a href="#control-attribution-options">Control.Attribution options</a>&gt; <i>options?</i> )</nobr>
		</code></td>



		<td>Creates an attribution control.</td>
	</tr>
</table>

<h3 id="control-attribution-options">Options</h3>
<table data-id='control-attribution'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>position</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'bottomright'</span></td>
		<td>The position of the control (one of the map corners). See <a href="#control-positions">control positions</a>.</td>
	</tr>
	<tr>
		<td><code><b>prefix</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'Leaflet'</span></td>
		<td>The HTML text shown before the attributions. Pass <code><span class="literal">false</span></code> to disable.</td>
	</tr>
</table>

<h3>Methods</h3>
<table data-id='control-attribution'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>setPrefix</b>(
			<nobr>&lt;String&gt; <i>prefix</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Sets the text before the attributions.</td>
	</tr>
	<tr>
		<td><code><b>addAttribution</b>(
			<nobr>&lt;String&gt; <i>text</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Adds an attribution text (e.g. <code><span class="string">'Vector data &amp;copy; Mapbox'</span></code>).</td>
	</tr>
	<tr>
		<td><code><b>removeAttribution</b>(
			<nobr>&lt;String&gt; <i>text</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Removes an attribution text.</td>
	</tr>
</table>


<h2 id="control-layers">Control.Layers</h2>

<p>The layers control gives users the ability to switch between different base layers and switch overlays on/off (check out the <a href="http://leafletjs.com/examples/layers-control.html">detailed example</a>). Extends <a href="#control">Control</a>.</p>

<pre><code>var baseLayers = {
	"Mapbox": mapbox,
	"OpenStreetMap": osm
};

var overlays = {
	"Marker": marker,
	"Roads": roadsLayer
};

L.control.layers(baseLayers, overlays).addTo(map);</code></pre>

<h3>Creation</h3>
<table data-id='control-layers'>
	<tr>
		<th>Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.control.layers</b>(
			<nobr>&lt;<a href="#control-layers-config">Layer Config</a>&gt; <i>baseLayers?</i></nobr>,
			<nobr>&lt;<a href="#control-layers-config">Layer Config</a>&gt; <i>overlays?</i></nobr>,
			<nobr>&lt;<a href="#control-layers-options">Control.Layers options</a>&gt; <i>options?</i> )</nobr>
		</code></td>
		<td>Creates an attribution control with the given layers. Base layers will be switched with radio buttons, while overlays will be switched with checkboxes. Note that all base layers should be passed in the base layers object, but only one should be added to the map during map instantiation.</td>
	</tr>
</table>

<h3>Methods</h3>
<table data-id='control-layers'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addBaseLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i></nobr>,
			<nobr>&lt;String&gt; <i>name</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a base layer (radio button entry) with the given name to the control.</td>
	</tr>
	<tr>
		<td><code><b>addOverlay</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i></nobr>,
			<nobr>&lt;String&gt; <i>name</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Adds an overlay (checkbox entry) with the given name to the control.</td>
	</tr>
	<tr>
		<td><code><b>removeLayer</b>(
			<nobr>&lt;<a href="#ilayer">ILayer</a>&gt; <i>layer</i> )</nobr>
		</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Remove the given layer from the control.</td>
	</tr>
</table>

<h3 id="control-layers-options">Options</h3>

<table data-id='control-layers'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>position</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'topright'</span></td>
		<td>The position of the control (one of the map corners). See <a href="#control-positions">control positions</a>.</td>
	</tr>
	<tr>
		<td><code><b>collapsed</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the control will be collapsed into an icon and expanded on mouse hover or touch.</td>
	</tr>
	<tr>
		<td><code><b>autoZIndex</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the control will assign zIndexes in increasing order to all of its layers so that the order is preserved when switching them on/off.</td>
	</tr>
</table>


<h3 id="control-layers-config">Layer Config</h3>

<p>An object literal with layer names as keys and layer objects as values:</p>

<pre><code>{
	"&lt;someName1&gt;": layer1,
	"&lt;someName2&gt;": layer2
}</code></pre>

<p>The layer names can contain HTML, which allows you to add additional styling to the items:</p>

<pre><code>{"&lt;img src='my-layer-icon' /&gt; &lt;span class='my-layer-item'&gt;My Layer&lt;/span&gt;": myLayer}</code></pre>


<h3>Events</h3>

<p>You can subscribe to the following events on the <a href="#map-class">Map</a> object using <a href="#events">these methods</a>.</p>

<table data-id='control-layers'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>baselayerchange</b></code></td>
		<td><code><a href="#layers-control-event">LayersControlEvent</a></code>
		<td>Fired when the base layer is changed through the control.</td>
	</tr>
	<tr>
		<td><code><b>overlayadd</b></code></td>
		<td><code><a href="#layers-control-event">LayersControlEvent</a></code>
		<td>Fired when an overlay is selected through the control.</td>
	</tr>
	<tr>
		<td><code><b>overlayremove</b></code></td>
		<td><code><a href="#layers-control-event">LayersControlEvent</a></code>
		<td>Fired when an overlay is deselected through the control.</td>
	</tr>
</table>


<h2 id="control-scale">Control.Scale</h2>

<p>A simple scale control that shows the scale of the current center of screen in metric (m/km) and imperial (mi/ft) systems. Extends <a href="#control">Control</a>.</p>

<pre><code>L.control.scale().addTo(map);</code></pre>

<h3>Creation</h3>
<table data-id='control-scale'>
	<tr>
		<th class="width200">Factory</th>

		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.control.scale</b>(
			<nobr>&lt;<a href="#control-scale-options">Control.Scale options</a>&gt; <i>options?</i> )</nobr>
		</code></td>



		<td>Creates an scale control with the given options.</td>
	</tr>
</table>

<h3 id="control-scale-options">Options</h3>

<table data-id='control-scale'>
	<tr>
		<th>Option</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>position</b></code></td>
		<td><code>String</code></td>
		<td><code><span class="string">'bottomleft'</span></td>
		<td>The position of the control (one of the map corners). See <a href="#control-positions">control positions</a>.</td>
	</tr>
	<tr>
		<td><code><b>maxWidth</b></code></td>
		<td><code>Number</code></td>
		<td><code><span class="number">100</span></code></td>
		<td>Maximum width of the control in pixels. The width is set dynamically to show round values (e.g. 100, 200, 500).</td>
	</tr>
	<tr>
		<td><code><b>metric</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether to show the metric scale line (m/km).</td>
	</tr>
	<tr>
		<td><code><b>imperial</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code></td>
		<td>Whether to show the imperial scale line (mi/ft).</td>
	</tr>
	<tr>
		<td><code><b>updateWhenIdle</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">false</span></code></td>
		<td>If <code><span class="literal">true</span></code>, the control is updated on <code>moveend</code>, otherwise it's always up-to-date (updated on <code>move</code>).</td>
	</tr>
</table>



<h2 id="events">Events methods</h2>

<p>A set of methods shared between event-powered classes (like Map). Generally, events allow you to execute some function when something happens with an object (e.g. the user clicks on the map, causing the map <code><span class="string">'click'</span></code> event).</p>

<h3>Example</h3>

<pre><code class="javascript">map.on('click', function(e) {
	alert(e.latlng);
});</code></pre>

<p>Leaflet deals with event listeners by reference, so if you want to add a listener and then remove it, define it as a function:</p>

<pre><code>function onClick(e) { ... }

map.on('click', onClick);
map.off('click', onClick);</code></pre>

<h3>Methods</h3>
<table data-id='events'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addEventListener</b>(
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a listener function (<code>fn</code>) to a particular event type of the object. You can optionally specify the context of the listener (object the <code><span class="keyword">this</span></code> keyword will point to). You can also pass several space-separated types (e.g. <code><span class="string">'click dblclick'</span></code>).</td>
	</tr>
	<tr>
		<td><code><b>addOneTimeEventListener</b>(
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>The same as above except the listener will only get fired once and then removed.</td>
	</tr>
	<tr>
		<td><code><b>addEventListener</b>(
			<nobr>&lt;Object&gt; <i>eventMap</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a set of type/listener pairs, e.g. <code>{click: onClick, mousemove: onMouseMove}</code></td>
	</tr>
	<tr>
		<td><code><b>removeEventListener</b>(
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Function&gt; <i>fn?</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes a previously added listener function. If no function is specified, it will remove all the listeners of that particular event from the object.  Note that if you passed a custom context to <code>addEventListener</code>, you must pass the same context to <code>removeEventListener</code> in order to remove the listener.</td>
	</tr>
	<tr>
		<td><code><b>removeEventListener</b>(
			<nobr>&lt;Object&gt; <i>eventMap</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes a set of type/listener pairs.</code></td>
	</tr>
	<tr>
		<td><code><b>removeEventListener</b>()</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes all listeners. An alias to <code>clearAllEventListeners</code> when you use it without arguments.</td>
	</tr>
	<tr>
		<td><code><b>hasEventListeners</b>(
			<nobr>&lt;String&gt; <i>type</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if a particular event type has some listeners attached to it.</td>
	</tr>
	<tr>
		<td><code><b>fireEvent</b>(
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Object&gt; <i>data?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Fires an event of the specified type. You can optionally provide an data object &mdash; the first argument of the listener function will contain its properties.</td>
	</tr>
	<tr>
		<td><code><b>clearAllEventListeners</b>()</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes all listeners to all events on the object.</code></td>
	</tr>
	<tr>
		<td><code><b>on</b>( &hellip; )</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Alias to <code>addEventListener</code>.</td>
	</tr>
	<tr>
		<td><code><b>once</b>( &hellip; )</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Alias to <code>addOneTimeEventListener</code>.</td>
	</tr>
	<tr>
		<td><code><b>off</b>( &hellip; )</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Alias to <code>removeEventListener</code>.</td>
	</tr>
	<tr>
		<td><code><b>fire</b>( &hellip; )</code></td>
		<td><code><span class="keyword">this</span></code></td>
		<td>Alias to <code>fireEvent</code>.</td>
	</tr>
</table>


<h2 id="event-objects">Event objects</h2>

<p>Event object is an object that you receive as an argument in a listener function when some event is fired, containing useful information about that event. For example:</p>

<pre><code class="javascript">map.on('click', function(e) {
	alert(e.latlng); // e is an event object (MouseEvent in this case)
});</code></pre>

<h3 id="event">Event</h3>

<p>The base event object. All other event objects contain these properties too.</p>

<table data-id='events'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>type</b></code></td>
		<td><code>String</code></td>
		<td>The event type (e.g. <code><span class="string">'click'</span></code>).</td>
	</tr>
	<tr>
		<td><code><b>target</b></code></td>
		<td><code>Object</code></td>
		<td>The object that fired the event.</td>
	</tr>
</table>

<h3 id="mouse-event">MouseEvent</h3>

<table data-id='events'>
	<tr>
		<th class="width100">property</th>
		<th>type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>latlng</b></code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>The geographical point where the mouse event occured.</td>
	</tr>
	<tr>
		<td><code><b>layerPoint</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Pixel coordinates of the point where the mouse event occured relative to the map layer.</td>
	</tr>
	<tr>
		<td><code><b>containerPoint</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>Pixel coordinates of the point where the mouse event occured relative to the map сontainer.</td>
	</tr>
	<tr>
		<td><code><b>originalEvent</b></code></td>
		<td><code>DOMMouseEvent</code></td>
		<td>The original DOM mouse event fired by the browser.</td>
	</tr>
</table>

<h3 id="location-event">LocationEvent</h3>

<table data-id='events'>
	<tr>
		<th class="width100">property</th>
		<th>type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>latlng</b></code></td>
		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>Detected geographical location of the user.</td>
	</tr>
	<tr>
		<td><code><b>bounds</b></code></td>
		<td><code><a href="#latlngbounds">LatLngBounds</a></code></td>
		<td>Geographical bounds of the area user is located in (with respect to the accuracy of location).</td>
	</tr>
	<tr>
		<td><code><b>accuracy</b></code></td>
		<td><code>Number</code></td>
		<td>Accuracy of location in meters.</td>
	</tr>
	<tr>
		<td><code><b>altitude</b></code></td>
		<td><code>Number</code></td>
		<td>Height of the position above the WGS84 ellipsoid in meters.</td>
	</tr>
	<tr>
		<td><code><b>altitudeAccuracy</b></code></td>
		<td><code>Number</code></td>
		<td>Accuracy of altitude in meters.</td>
	</tr>
	<tr>
		<td><code><b>heading</b></code></td>
		<td><code>Number</code></td>
		<td>The direction of travel in degrees counting clockwise from true North.</td>
	</tr>
	<tr>
		<td><code><b>speed</b></code></td>
		<td><code>Number</code></td>
		<td>Current velocity in meters per second.</td>
	</tr>
	<tr>
		<td><code><b>timestamp</b></code></td>
		<td><code>Number</code></td>
		<td>The time when the position was acquired.</td>
	</tr>
</table>

<h3 id="error-event">ErrorEvent</h3>

<table data-id='error-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>message</b></code></td>
		<td><code>String</code></td>
		<td>Error message.</td>
	</tr>
	<tr>
		<td><code><b>code</b></code></td>
		<td><code>Number</code></td>
		<td>Error code (if applicable).</td>
	</tr>
</table>

<h3 id="layer-event">LayerEvent</h3>

<table data-id='layer-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>layer</b></code></td>
		<td><code><a href="#ilayer">ILayer</a></code></td>
		<td>The layer that was added or removed.</td>
	</tr>
</table>

<h3 id="layers-control-event">LayersControlEvent</h3>

<table data-id='layer-control-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>layer</b></code></td>
		<td><code><a href="#ilayer">ILayer</a></code></td>
		<td>The layer that was added or removed.</td>
	</tr>
	<tr>
		<td><code><b>name</b></code></td>
		<td><code>String</code></td>
		<td>The name of the layer that was added or removed.</td>
	</tr>
</table>

<h3 id="tile-event">TileEvent</h3>

<table data-id='tile-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>tile</b></code></td>
		<td><code>HTMLElement</code></td>
		<td>The tile element (image).</td>
	</tr>
	<tr>
		<td><code><b>url</b></code></td>
		<td><code>String</code></td>
		<td>The source URL of the tile.</td>
	</tr>
</table>

<h3 id="resize-event">ResizeEvent</h3>

<table data-id='resize-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>oldSize</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The old size before resize event.</td>
	</tr>
	<tr>
		<td><code><b>newSize</b></code></td>
		<td><code><a href="#point">Point</a></code></td>
		<td>The new size after the resize event.</td>
	</tr>
</table>

<h3 id="geojson-event">GeoJSON event</h3>

<table data-id='geojson-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>layer</b></code></td>
		<td><code><a href="#ilayer">ILayer</a></code></td>
		<td>The layer for the GeoJSON feature that is being added to the map.</td>
	</tr>
	<tr>
		<td><code><b>properties</b></code></td>
		<td><code>Object</code></td>
		<td>GeoJSON properties of the feature.</td>
	</tr>
	<tr>
		<td><code><b>geometryType</b></code></td>
		<td><code>String</code></td>
		<td>GeoJSON geometry type of the feature.</td>
	</tr>
	<tr>
		<td><code><b>id</b></code></td>
		<td><code>String</code></td>
		<td>GeoJSON ID of the feature (if present).</td>
	</tr>
</table>

<h3 id="popup-event">Popup event</h3>

<table data-id='popup-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>popup</b></code></td>
		<td><code><a href="#popup">Popup</a></code></td>
		<td>The popup that was opened or closed.</td>
	</tr>
</table>

<h3 id="dragend-event">DragEndEvent</h3>

<table data-id='layer-event'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>distance</b></code></td>
		<td><code>Number</code></td>
		<td>The distance in pixels the draggable element was moved by.</td>
	</tr>
</table>


<!-- <h3>TileEvent</h3> -->



<h2 id="class">Class</h2>

<p><code>L.Class</code> powers the OOP facilities of Leaflet and is used to create almost all of the Leaflet classes documented here.</p>
<p>In addition to implementing a simple classical inheritance model, it introduces several special properties for convenient code organization &mdash; <code>options</code>, <code>includes</code> and <code>statics</code>.</p>

<pre><code>var MyClass = L.Class.extend({
	initialize: function (greeter) {
		this.greeter = greeter;
		// class constructor
	},

	greet: function (name) {
		alert(this.greeter + ', ' + name)
	}
});

// create instance of MyClass, passing "Hello" to the constructor
var a = new MyClass("Hello");

// call greet method, alerting "Hello, World"
a.greet("World");
</code></pre>

<p>The <code>initialize</code> method is your class's constructor function, meaning that it gets called when you do <code>new MyClass(...)</code>.</p>


<h3>Class Factories</h3>

<p>You may have noticed that Leaflet objects are created without using the <code>new</code> keyword. This is achieved by complementing each class with a lowercase factory method:</p>

<pre><code>new L.Map('map'); // becomes:
L.map('map');</code></pre>

<p>The factories are implemented very easily, and you can do this for your own classes:</p>

<pre><code>L.map = function (id, options) {
	return new L.Map(id, options);
};</code></pre>


<h3>Inheritance</h3>

<p>You use <code>L.Class.extend</code> to define new classes, but you can use the same method on any class to inherit from it:</p>

<pre><code>var MyChildClass = MyClass.extend({
	// ... new properties and methods
});</code></pre>

<p>This will create a class that inherits all methods and properties of the parent class (through a proper prototype chain), adding or overriding the ones you pass to <code>extend</code>. It will also properly react to <code>instanceof</code>:</p>

<pre><code>var a = new MyChildClass();
a instanceof MyChildClass; // true
a instanceof MyClass; // true
</code></pre>

<p>You can call parent methods (including constructor) from corresponding child ones (as you do with <code>super</code> calls in other languages) by accessing parent class prototype and using JavaScript's <code>call</code> or <code>apply</code>:</p>

<pre><code>var MyChildClass = MyClass.extend({
	initialize: function () {
		MyClass.prototype.initialize.call(this, "Yo");
	},

	greet: function (name) {
		MyClass.prototype.greet.call(this, 'bro ' + name + '!');
	}
});

var a = new MyChildClass();
a.greet('Jason'); // alerts "Yo, bro Jason!"</code></pre>

<h3 id="class-options">Options</h3>

<p><code>options</code> is a special property that unlike other objects that you pass to <code>extend</code> will be merged with the parent one instead of overriding it completely, which makes managing configuration of objects and default values convenient:</p>

<pre><code>var MyClass = L.Class.extend({
	options: {
		myOption1: 'foo',
		myOption2: 'bar'
	}
});

var MyChildClass = MyClass.extend({
	options: {
		myOption1: 'baz',
		myOption3: 5
	}
});

var a = new MyChildClass();
a.options.myOption1; // 'baz'
a.options.myOption2; // 'bar'
a.options.myOption3; // 5</code></pre>

<p>There's also <code>L.Util.setOptions</code>, a method for conveniently merging options passed to constructor with the defauls defines in the class:</p>

<pre><code>var MyClass = L.Class.extend({
	options: {
		foo: 'bar',
		bla: 5
	},

	initialize: function (options) {
		L.Util.setOptions(this, options);
		...
	}
});

var a = new MyClass({bla: 10});
a.options; // {foo: 'bar', bla: 10}</code></pre>

<h3>Includes</h3>

<p><code>includes</code> is a special class property that merges all specified objects into the class (such objects are called mixins). A good example of this is <code>L.Mixin.Events</code> that <a href="#events">event-related methods</a> like <code>on</code>, <code>off</code> and <code>fire</code> to the class.</p>

<pre><code> var MyMixin = {
	foo: function () { ... },
	bar: 5
};

var MyClass = L.Class.extend({
	includes: MyMixin
});

var a = new MyClass();
a.foo();</code></pre>

<p>You can also do such includes in runtime with the <code>include</code> method:</p>

<pre><code><b>MyClass.include</b>(MyMixin);</code></pre>

<h3>Statics</h3>

<p><code>statics</code> is just a convenience property that injects specified object properties as the static properties of the class, useful for defining constants:</p>

<pre><code>var MyClass = L.Class.extend({
	statics: {
		FOO: 'bar',
		BLA: 5
	}
});

MyClass.FOO; // 'bar'</code></pre>


<h3>Constructor Hooks</h3>

<p>If you're a plugin developer, you often need to add additional initialization code to existing classes (e.g. editing hooks for <code>L.Polyline</code>). Leaflet comes with a way to do it easily using the <code>addInitHook</code> method:</p>

<pre><code>MyClass.addInitHook(function () {
	// ... do something in constructor additionally
	// e.g. add event listeners, set custom properties etc.
});</code></pre>

<p>You can also use the following shortcut when you just need to make one additional method call:</p>

<pre><code>MyClass.addInitHook('methodName', arg1, arg2, &hellip;);</code></pre>


<h2 id="browser">Browser</h2>

<p>A namespace with properties for browser/feature detection used by Leaflet internally.</p>

<pre><code>if (L.Browser.ie6) {
	alert('Upgrade your browser, dude!');
}</code></pre>

<table data-id='browser'>
	<tr>
		<th class="width100">property</th>
		<th class="width100">type</th>
		<th>description</th>
	</tr>
	<tr>
		<td><code><b>ie</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for all Internet Explorer versions.</td>
	</tr>
	<tr>
		<td><code><b>ie6</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for Internet Explorer 6.</td>
	</tr>
	<tr>
		<td><code><b>ie7</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for Internet Explorer 7.</td>
	</tr>
	<tr>
		<td><code><b>webkit</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for webkit-based browsers like Chrome and Safari (including mobile versions).</td>
	</tr>
	<tr>
		<td><code><b>webkit3d</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for webkit-based browsers that support CSS 3D transformations.</td>
	</tr>
	<!--<tr>
		<td><code><b>gecko</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for Gecko-based browsers like Firefox and Mozilla.</td>
	</tr>
	<tr>
		<td><code><b>opera</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for Opera.</td>
	</tr>-->
	<tr>
		<td><code><b>android</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for Android mobile browser.</td>
	</tr>
	<tr>
		<td><code><b>android23</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for old Android stock browsers (2 and 3).</td>
	</tr>
	<tr>
		<td><code><b>mobile</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for modern mobile browsers (including iOS Safari and different Android browsers).</td>
	</tr>
	<tr>
		<td><code><b>mobileWebkit</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for mobile webkit-based browsers.</td>
	</tr>
	<tr>
		<td><code><b>mobileOpera</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for mobile Opera.</td>
	</tr>
	<tr>
		<td><code><b>touch</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for all browsers on touch devices.</td>
	</tr>
	<tr>
		<td><code><b>msTouch</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for browsers with Microsoft touch model (e.g. IE10).</td>
	</tr>
	<tr>
		<td><code><b>retina</b></code></td>
		<td><code>Boolean</code></td>
		<td><code><span class="literal">true</span></code> for devices with Retina screens.</td>
	</tr>
</table>


<h2 id="util">Util</h2>

<p>Various utility functions, used by Leaflet internally.</p>

<h3>Methods</h3>

<table data-id='util'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>extend</b>(
			<nobr>&lt;Object&gt; <i>dest</i></nobr>,
			<nobr>&lt;Object&gt; <i>src?..</i> )</nobr>
		</code></td>

		<td><code>Object</code></td>
		<td>Merges the properties of the <code>src</code> object (or multiple objects) into <code>dest</code> object and returns the latter. Has an <code>L.extend</code> shortcut.</td>
	</tr>
	<tr>
		<td><code><b>bind</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>obj</i> )</nobr>
		</code></td>

		<td><code>Function</code></td>
		<td>Returns a function which executes function <code>fn</code> with the given scope <code>obj</code> (so that <code><span class="keyword">this</span></code> keyword refers to <code>obj</code> inside the function code). Has an <code>L.bind</code> shortcut.  Not a polyfill for ES 5 <code>bind</code> (compare <code>L.bind</code> to the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill">MDN-recommended polyfill</a> for <code>Function.prototype.bind</code>).</td>
	</tr>
	<tr>
		<td><code><b>stamp</b>( &lt;Object&gt; <i>obj</i></nobr> )<nobr></code></td>
		<td><code>String</code></td>
		<td>Applies a unique key to the object and returns that key. Has an <code>L.stamp</code> shortcut.</td>
	</tr>
	<tr>
		<td><code><b>requestAnimFrame</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>immediate?</i></nobr>,
			<nobr>&lt;HTMLElement&gt; <i>element?</i> )</nobr>
		</code></td>
		<td><code>Number</code></td>
		<td>Schedules <code>fn</code> to be executed when the browser repaints. When <code>immediate</code> is set, <code>fn</code> is called immediately if the browser doesn't have native support for <code>requestAnimationFrame</code>, otherwise it's delayed. Returns an id that can be used to cancel the request</td>
	</tr>
	<tr>
		<td><code><b>cancelAnimFrame</b>(
			<nobr>&lt;Number&gt; <i>id</i> )</nobr>
		</code></td>
		<td>-</td>
		<td>Cancels a previous request to <code>requestAnimFrame</code>.</td>
	</tr>
	<tr>
		<td><code><b>limitExecByInterval</b>(
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Number&gt; <i>time</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code>Function</code></td>
		<td>Returns a wrapper around the function <code>fn</code> that makes sure it's called not more often than a certain time interval <code>time</code>, but as fast as possible otherwise (for example, it is used for checking and requesting new tiles while dragging the map), optionally passing the scope (<code>context</code>) in which the function will be called.</td>
	</tr>

	<tr>
		<td><code><b>falseFn</b>()</code></td>
		<td><code>Function</code></td>
		<td>Returns a function which always returns <code><span class="literal">false</span></code>.</td>
	</tr>
	<tr>
		<td><code><b>formatNum</b>(
			<nobr>&lt;Number&gt; <i>num</i></nobr>,
			<nobr>&lt;Number&gt; <i>digits</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>
		<td>Returns the number <code>num</code> rounded to <code>digits</code> decimals.</td>
	</tr>
	<tr>
		<td><code><b>splitWords</b>(
			<nobr>&lt;String&gt; <i>str</i> )</nobr>
		</code></td>

		<td><code>String[]</code></td>
		<td>Trims and splits the string on whitespace and returns the array of parts.</code></td>
	</tr>
	<tr>
		<td><code><b>setOptions</b>(
			<nobr>&lt;Object&gt; <i>obj</i></nobr>,
			<nobr>&lt;Object&gt; <i>options</i> )</nobr>
		</code></td>

		<td><code>Object</code></td>
		<td>Merges the given properties to the <code>options</code> of the <code>obj</code> object, returning the resulting options. See <a href="#class-options">Class options</a>. Has an <code>L.setOptions</code> shortcut.</td>
	</tr>
	<tr>
		<td><code><b>getParamString</b>(
			<nobr>&lt;Object&gt; <i>obj</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Converts an object into a parameter URL string, e.g. <nobr><code>{a: "foo", b: "bar"}</code></nobr> translates to <code><span class="string">'?a=foo&amp;b=bar'</span></code>.</td>
	</tr>
	<tr id="util-template">
		<td><code><b>template</b>(
			<nobr>&lt;String&gt; <i>str</i>, &lt;Object&gt; <i>data</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
	</tr>
	<tr>
		<td><code><b>isArray</b>(
			<nobr>&lt;Object&gt; <i>obj</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the given object is an array.</td>
	</tr>
	<tr>
		<td><code><b>trim</b>(
			<nobr>&lt;String&gt; <i>str</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Trims the whitespace from both ends of the string and returns the result.</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='util'>
	<tr>
		<th>Property</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>emptyImageUrl</b></code></td>
		<td><code>String</code></td>
		<td>Data URI string containing a base64-encoded empty GIF image. Used as a hack to free memory from unused images on WebKit-powered mobile devices (by setting image <code>src</code> to this string).</td>
	</tr>
</table>



<h2 id="transformation">Transformation</h2>

<p>Represents an affine transformation: a set of coefficients <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> for transforming a point of a form <code>(x, y)</code> into <code>(a*x + b, c*y + d)</code> and doing the reverse. Used by Leaflet in its projections code.</p>

<pre><code>var transformation = new L.Transformation(2, 5, -1, 10),
	p = L.point(1, 2),
	p2 = transformation.transform(p), //  L.point(7, 8)
	p3 = transformation.untransform(p2); //  L.point(1, 2)
</code></pre>

<h3>Creation</h3>

<table data-id='transformation'>
	<tr>
		<th class="width250">Creation</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><nobr><span class='keyword'>new</span> <b>L.Transformation</b>(</nobr>
			<nobr>&lt;Number&gt; <i>a</i></nobr>,
			<nobr>&lt;Number&gt; <i>b</i></nobr>,
			<nobr>&lt;Number&gt; <i>c</i></nobr>,
			<nobr>&lt;Number&gt; <i>d</i> )</nobr>
		</code></td>

		<td>Creates a transformation object with the given coefficients.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='transformation'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>transform</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i></nobr>,
			<nobr>&lt;Number&gt; <i>scale?</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns a transformed point, optionally multiplied by the given scale. Only accepts real <code>L.Point</code> instances, not arrays.</td>
	</tr>
	<tr>
		<td><code><b>untransform</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i></nobr>,
			<nobr>&lt;Number&gt; <i>scale?</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the reverse transformation of the given point, optionally divided by the given scale. Only accepts real <code>L.Point</code> instances, not arrays.</td>
	</tr>
</table>




<h2 id="lineutil">LineUtil</h2>

<p>Various utility functions for polyine points processing, used by Leaflet internally to make polylines lightning-fast.</p>

<h3>Methods</h3>

<table data-id='lineutil'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>simplify</b>(
			<nobr>&lt;<a href="#point">Point</a>[]&gt; <i>points</i></nobr>,
			<nobr>&lt;Number&gt; <i>tolerance</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a>[]</code></td>

		<td>Dramatically reduces the number of points in a polyline while retaining its shape and returns a new array of simplified points. Used for a huge performance boost when processing/displaying Leaflet polylines for each zoom level and also reducing visual noise. <code>tolerance</code> affects the amount of simplification (lesser value means higher quality but slower and with more points). Also released as a separated micro-library <a href="http://mourner.github.com/simplify-js/">Simplify.js</a>.</td>
	</tr>
	<tr>
		<td><code><b>pointToSegmentDistance</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p1</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p2</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>

		<td>Returns the distance between point <code>p</code> and segment <code>p1</code> to <code>p2</code>.</td>
	</tr>
	<tr>
		<td><code><b>closestPointOnSegment</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p1</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>p2</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>

		<td>Returns the closest point from a point <code>p</code> on a segment <code>p1</code> to <code>p2</code>.</td>
	</tr>
	<tr>
		<td><code><b>clipSegment</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>a</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>b</i></nobr>,
			<nobr>&lt;<a href="#bounds">Bounds</a>&gt; <i>bounds</i> )</nobr>
		</code></td>

		<td><code>-</code></td>

		<td>Clips the segment <code>a</code> to <code>b</code> by rectangular bounds (modifying the segment points directly!). Used by Leaflet to only show polyline points that are on the screen or near, increasing performance.</td>
	</tr>
</table>



<h2 id="polyutil">PolyUtil</h2>

<p>Various utility functions for polygon geometries.</p>

<h3>Methods</h3>

<table data-id='polylineutil'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>clipPolygon</b>(
			<nobr>&lt;<a href="#point">Point</a>[]&gt; <i>points</i></nobr>,
			<nobr>&lt;<a href="#bounds">Bounds</a>&gt; <i>bounds</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a>[]</code></td>

		<td>Clips the polygon geometry defined by the given points by rectangular bounds. Used by Leaflet to only show polygon points that are on the screen or near, increasing performance. Note that polygon points needs different algorithm for clipping than polyline, so there's a seperate method for it.</td>
	</tr>
</table>




<h2 id="domevent">DomEvent</h2>

<p>Utility functions to work with the DOM events, used by Leaflet internally.</p>

<h3>Methods</h3>

<table data-id='domevent'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>addListener</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Function&gt; <i>fn</i></nobr>,
			<nobr>&lt;Object&gt; <i>context?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds a listener <code>fn</code> to the element's DOM event of the specified type. <code><span class="keyword">this</span></code> keyword inside the listener will point to <code>context</code>, or to the element if not specified.</td>
	</tr>
	<tr>
		<td><code><b>removeListener</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>type</i></nobr>,
			<nobr>&lt;Function&gt; <i>fn</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Removes an event listener from the element.</td>
	</tr>
	<tr>
		<td><code><b>stopPropagation</b>(
			<nobr>&lt;DOMEvent&gt; <i>e</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Stop the given event from propagation to parent elements. Used inside the listener functions:
<pre><code>L.DomEvent.addListener(div, 'click', function (e) {
	L.DomEvent.stopPropagation(e);
});</code></pre>
		</td>
	</tr>
	<tr>
		<td><code><b>preventDefault</b>(
			<nobr>&lt;DOMEvent&gt; <i>e</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Prevents the default action of the event from happening (such as following a link in the <code>href</code> of the <code>a</code> element, or doing a <code>POST</code> request with page reload when <code>form</code> is submitted). Use it inside listener functions.</pre>
		</td>
	</tr>
	<tr>
		<td><code><b>stop</b>(
			<nobr>&lt;DOMEvent&gt; <i>e</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Does <code>stopPropagation</code> and <code>preventDefault</code> at the same time.</td>
	</tr>
	<tr>
		<td><code><b>disableClickPropagation</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Adds <code>stopPropagation</code> to the element's <code><span class="string">'click'</span></code>, <code><span class="string">'doubleclick'</span></code>, <code><span class="string">'mousedown'</span></code> and <code><span class="string">'touchstart'</span></code> events.</td>
	</tr>
	<tr>
		<td><code><b>getMousePosition</b>(
			<nobr>&lt;DOMEvent&gt; <i>e</i></nobr>,
			<nobr>&lt;HTMLElement&gt; <i>container?</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Gets normalized mouse position from a DOM event relative to the container or to the whole page if not specified.</td>
	</tr>
	<tr>
		<td><code><b>getWheelDelta</b>(
			<nobr>&lt;DOMEvent&gt; <i>e</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>
		<td>Gets normalized wheel delta from a <code>mousewheel</code> DOM event.</td>
	</tr>
</table>




<h2 id="domutil">DomUtil</h2>

<p>Utility functions to work with the DOM tree, used by Leaflet internally.</p>

<h3>Methods</h3>

<table data-id='domutil'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>get</b>(
			<nobr>&lt;String or HTMLElement&gt; <i>id</i> )</nobr>
		</code></td>

		<td><code>HTMLElement</code></td>
		<td>Returns an element with the given id if a string was passed, or just returns the element if it was passed directly.</td>
	</tr>
	<tr>
		<td><code><b>getStyle</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>style</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Returns the value for a certain style attribute on an element, including computed values or values set through CSS.</td>
	</tr>
	<tr>
		<td><code><b>getViewportOffset</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i> )</nobr>
		</code></td>

		<td><a href="#point"><code>Point</code></a></td>
		<td>Returns the offset to the viewport for the requested element.</td>
	</tr>
	<tr>
		<td><code><b>create</b>(
			<nobr>&lt;String&gt; <i>tagName</i></nobr>,
			<nobr>&lt;String&gt; <i>className</i></nobr>,
			<nobr>&lt;HTMLElement&gt; <i>container?</i> )</nobr>
		</code></td>

		<td><code>HTMLElement</code></td>

		<td>Creates an element with <code>tagName</code>, sets the <code>className</code>, and optionally appends it to <code>container</code> element.</td>
	</tr>
	<tr>
		<td><code><b>disableTextSelection</b>()</code></td>
		<td>-</td>
		<td>Makes sure text cannot be selected, for example during dragging.</td>
	</tr>
	<tr>
		<td><code><b>enableTextSelection</b>()</code></td>
		<td>-</td>
		<td>Makes text selection possible again.</td>
	</tr>
	<tr>
		<td><code><b>hasClass</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>name</i> )</nobr>
		</code></td>

		<td><code>Boolean</code></td>

		<td>Returns <code><span class="literal">true</span></code> if the element class attribute contains <code>name</code>.</td>
	</tr>
	<tr>
		<td><code><b>addClass</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>name</i> )</nobr>
		</code></td>

		<td>-</td>

		<td>Adds <code>name</code> to the element's class attribute.</td>
	</tr>
	<tr>
		<td><code><b>removeClass</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;String&gt; <i>name</i> )</nobr>
		</code></td>

		<td>-</td>

		<td>Removes <code>name</code> from the element's class attribute.</td>
	</tr>
	<tr>
		<td><code><b>setOpacity</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;Number&gt; <i>value</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Set the opacity of an element (including old IE support). Value must be from <code>0</code> to <code>1</code>.</td>
	</tr>
	<tr>
		<td><code><b>testProp</b>(
			<nobr>&lt;String[]&gt; <i>props</i> )</nobr>
		</code></td>

		<td><code>String</code> or <code><span class="literal">false</span></code></td>
		<td>Goes through the array of style names and returns the first name that is a valid style name for an element. If no such name is found, it returns <code><span class="literal">false</span></code>. Useful for vendor-prefixed styles like <code>transform</code>.</td>
	</tr>
	<tr>
		<td><code><b>getTranslateString</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Returns a CSS transform string to move an element by the offset provided in the given point. Uses 3D translate on WebKit for hardware-accelerated transforms and 2D on other browsers.</td>
	</tr>
	<tr>
		<td><code><b>getScaleString</b>(
			<nobr>&lt;Number&gt; <i>scale</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>origin</i> )</nobr>
		</code></td>

		<td><code>String</code></td>
		<td>Returns a CSS transform string to scale an element (with the given scale origin).</td>
	</tr>
	<tr>
		<td><code><b>setPosition</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i></nobr>,
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i></nobr>,
			<nobr>&lt;Boolean&gt; <i>disable3D?</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Sets the position of an element to coordinates specified by <code>point</code>, using CSS translate or top/left positioning depending on the browser (used by Leaflet internally to position its layers). Forces top/left positioning if <code>disable3D</code> is <code><span class="literal">true</span></code>.</td>
	</tr>
	<tr>
		<td><code><b>getPosition</b>(
			<nobr>&lt;HTMLElement&gt; <i>el</i> )</nobr>
		</code></td>

		<td><a href="#point">Point</a></td>
		<td>Returns the coordinates of an element previously positioned with <code>setPosition</code>.</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='domutil'>
	<tr>
		<th>Property</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>TRANSITION</b></nobr>
		</code></td>
		<td><code>String</code></td>
		<td>Vendor-prefixed transition style name (e.g. <code><span class="string">'webkitTransition'</span></code> for WebKit).</td>
	</tr>
	<tr>
		<td><code><b>TRANSFORM</b></nobr>
		</code></td>
		<td><code>String</code></td>
		<td>Vendor-prefixed transform style name.</td>
	</tr>
</table>



<h2 id="posanimation">PosAnimation</h2>

<p>Used internally for panning animations, utilizing CSS3 Transitions for modern browsers and a timer fallback for IE6-9.</p>

<pre><code class="javascript">var fx = new L.PosAnimation();
fx.run(el, [300, 500], 0.5);</code></pre>

<h3>Creation</h3>

<table data-id='posanimation'>
	<tr>
		<th class="width200">Creation</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><span class='keyword'>new</span> <b>L.PosAnimation</b>()</code></td>

		<td>Creates a PosAnimation object.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='posanimation'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>run</b>(
			<nobr>&lt;HTMLElement&gt; <i>element</i>,</nobr>
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>newPos</i></nobr>,
			<nobr>&lt;Number&gt; <i>duration?</i></nobr>,
			<nobr>&lt;Number&gt; <i>easeLinearity?</i> )</nobr>
		</code></td>

		<td><code><span class="keyword">this</span></code></td>
		<td>Run an animation of a given element to a new position, optionally setting duration in seconds (<code><span class="number">0.25</span></code> by default) and easing linearity factor (3rd argument of the <a href="http://cubic-bezier.com/#0,0,.5,1">cubic bezier curve</a>, <code><span class="number">0.5</span></code> by default)</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='posanimation'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>start</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the animation starts.</td>
	</tr>
	<tr>
		<td><code><b>step</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired continuously during the animation.</td>
	</tr>
	<tr>
		<td><code><b>end</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the animation ends.</td>
	</tr>
</table>



<h2 id="draggable">Draggable</h2>

<p>A class for making DOM elements draggable (including touch support). Used internally for map and marker dragging. Only works for elements that were positioned with <a href="#domutil-setposition">DomUtil#setPosition</a></p>

<pre><code class="javascript">var draggable = new L.Draggable(elementToDrag);
draggable.enable();
</code></pre>

<h3>Creation</h3>

<table data-id='draggable'>
	<tr>
		<th class="width200">Creation</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b><span class='keyword'>new</span> L.Draggable</b>(
			<nobr>&lt;HTMLElement&gt; <i>element</i>,</nobr>
			<nobr>&lt;HTMLElement&gt; <i>dragHandle?</i> )</nobr>
		</code></td>

		<td>Creates a Draggable object for moving the given element when you start dragging the <code>dragHandle</code> element (equals the element itself by default).</td>
	</tr>
</table>

<h3>Events</h3>

<p>You can subscribe to the following events using <a href="#events">these methods</a>.</p>

<table data-id='draggable'>
	<tr>
		<th class="width100">Event</th>
		<th class="width100">Data</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>dragstart</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the dragging starts.</td>
	</tr>
	<tr>
		<td><code><b>predrag</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired continuously during dragging <em>before</em> each corresponding update of the element position.</td>
	</tr>
	<tr>
		<td><code><b>drag</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired continuously during dragging.</td>
	</tr>
	<tr>
		<td><code><b>dragend</b></code></td>
		<td><code><a href="#event">Event</a></code></td>
		<td>Fired when the dragging ends.</td>
	</tr>
</table>

<h3>Methods</h3>

<table data-id='draggable'>
	<tr>
		<th class="width100">Method</th>
		<th class="width100">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>enable</b>()</code></td>
		<td><code>-</code></td>
		<td>Enables the dragging ability.</td>
	</tr>
	<tr>
		<td><code><b>disable</b>()</code></td>
		<td><code>-</code></td>
		<td>Disables the dragging ability.</td>
	</tr>
</table>

<!--<h3>Static Properties</h3>

<table>
	<tr>
		<th>Property</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>START</b></code></td>
		<td><code>String</code></td>
		<td>Name of the DOM event that initiates dragging. <code><span class="string">'mousedown'</span></code> for desktop browsers, <code><span class="string">'touchstart'</span></code> for mobile devices.</td>
	</tr>
	<tr>
		<td><code><b>MOVE</b></code></td>
		<td><code>String</code></td>
		<td>Name of the DOM event for drag moving. <code><span class="string">'mousemove'</span></code> for desktop browsers, <code><span class="string">'touchmove'</span></code> for mobile devices.</td>
	</tr>
	<tr>
		<td><code><b>END</b></code></td>
		<td><code>String</code></td>
		<td>Name of the DOM event that ends dragging. <code><span class="string">'mouseup'</span></code> for desktop browsers, <code><span class="string">'touchend'</span></code> for mobile devices.</td>
	</tr>
</table>-->



<h2 id="ihandler">IHandler</h2>
<p>An interface implemented by <a href="#map-interaction-handlers">interaction handlers</a>.</p>

<table data-id='ihandler'>
	<tr>
		<th class="width100">Method</th>
		<th class="width100">Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>enable</b>()</code></td>
		<td>-</td>
		<td>Enables the handler.</td>
	</tr>
	<tr>
		<td><code><b>disable</b>()</code></td>
		<td>-</td>
		<td>Disables the handler.</td>
	</tr>
	<tr>
		<td><code><b>enabled</b>()</code></td>
		<td><code>Boolean</code></td>
		<td>Returns <code><span class="literal">true</span></code> if the handler is enabled.</td>
	</tr>
</table>


<h2 id="ilayer">ILayer</h2>

<p>Represents an object attached to a particular location (or a set of locations) on a map. Implemented by <a href="#tilelayer">tile layers</a>, <a href="#marker">markers</a>, <a href="#popup">popups</a>, <a href="#imageoverlay">image overlays</a>, <a href="#path">vector layers</a> and <a href="#layergroup">layer groups</a>.</p>

<h3>Methods</h3>

<table data-id='ilayer'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>onAdd</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Should contain code that creates DOM elements for the overlay, adds them to <a href="#map-panes">map panes</a> where they should belong and puts listeners on relevant map events. Called on <code>map.addLayer(layer)</code>.</td>
	</tr>
	<tr>
		<td><code><b>onRemove</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Should contain all clean up code that removes the overlay's elements from the DOM and removes listeners previously added in <code>onAdd</code>. Called on <code>map.removeLayer(layer)</code>.</td>
	</tr>
</table>

<h3>Implementing Custom Layers</h3>

<p>The most important things know about when implementing custom layers are Map <a href="#map-viewreset">viewreset</a> event and <a href="#map-latlngtolayerpoint">latLngToLayerPoint</a> method. <code>viewreset</code> is fired when the map needs to reposition its layers (e.g. on zoom), and <code>latLngToLayerPoint</code> is used to get coordinates for the layer's new position.</p>

<p>Another event often used in layer implementations is <a href="#map-moveend">moveend</a> which fires after any movement of the map (panning, zooming, etc.).</p>

<p>Another thing to note is that you'll usually need to add <code>leaflet-zoom-hide</code> class to the DOM elements you create for the layer so that it hides during zoom animation. Implementing zoom animation for custom layers is a complex topic and will be documented separately in future, but meanwhile you can take a look at how it's done for Leaflet layers (e.g. <code>ImageOverlay</code>) in the source.</p>

<h3>Custom Layer Example</h3>

<p>Here's how a custom layer implementation usually looks:</p>

<pre><code>var MyCustomLayer = L.Class.extend({

	initialize: function (latlng) {
		// save position of the layer or any options from the constructor
		this._latlng = latlng;
	},

	onAdd: function (map) {
		this._map = map;

		// create a DOM element and put it into one of the map panes
		this._el = L.DomUtil.create('div', 'my-custom-layer leaflet-zoom-hide');
		map.getPanes().overlayPane.appendChild(this._el);

		// add a viewreset event listener for updating layer's position, do the latter
		map.on('viewreset', this._reset, this);
		this._reset();
	},

	onRemove: function (map) {
		// remove layer's DOM elements and listeners
		map.getPanes().overlayPane.removeChild(this._el);
		map.off('viewreset', this._reset, this);
	},

	_reset: function () {
		// update layer's position
		var pos = this._map.latLngToLayerPoint(this._latlng);
		L.DomUtil.setPosition(this._el, pos);
	}
});

map.addLayer(new MyCustomLayer(latlng));
</code></pre>



<h2 id="icontrol">IControl</h2>

<p>Represents a UI element in one of the corners of the map. Implemented by <a href="#control-zoom">zoom</a>, <a href="#control-attribution">attribution</a>, <a href="#control-scale">scale</a> and <a href="#control-layers">layers</a> controls.</p>

<h3>Methods</h3>

<p>Every control in Leaflet should extend from <a href="#control">Control</a> class and additionally have the following methods:</p>

<table data-id='icontrol'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>onAdd</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td><code>HTMLElement</code></td>
		<td>Should contain code that creates all the neccessary DOM elements for the control, adds listeners on relevant map events, and returns the element containing the control. Called on <code>map.addControl(control)</code> or <code>control.addTo(map)</code>.</td>
	</tr>
	<tr>
		<td><code><b>onRemove</b>(
			<nobr>&lt;<a href="#map-class">Map</a>&gt; <i>map</i> )</nobr>
		</code></td>

		<td>-</td>
		<td>Optional, should contain all clean up code (e.g. removes control's event listeners). Called on <code>map.removeControl(control)</code> or <code>control.removeFrom(map)</code>. The control's DOM container is removed automatically.</td>
	</tr>
</table>

<h3>Custom Control Example</h3>

<pre><code>var MyControl = L.Control.extend({
	options: {
		position: 'topright'
	},

	onAdd: function (map) {
		// create the control container with a particular class name
		var container = L.DomUtil.create('div', 'my-custom-control');

		// ... initialize other DOM elements, add listeners, etc.

		return container;
	}
});

map.addControl(new MyControl());
</code></pre>

<p>If specify your own constructor for the control, you'll also probably want to process options properly:</p>

<pre><code>var MyControl = L.Control.extend({
	initialize: function (foo, options) {
		// ...
		L.Util.setOptions(this, options);
	},
	// ...
});</code></pre>

<p>This will allow you to pass options like <code>position</code> when creating the control instances:</p>

<pre><code>map.addControl(new MyControl('bar', {position: 'bottomleft'}));</code></pre>




<h2 id="iprojection">IProjection</h2>

<p>An object with methods for projecting geographical coordinates of the world onto a flat surface (and back). See <a href="http://en.wikipedia.org/wiki/Map_projection">Map projection</a>.</p>

<h3>Methods</h3>

<table data-id='iprojection'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>project</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Projects geographical coordinates into a 2D point.</td>
	</tr>
	<tr>
		<td><code><b>unproject</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>The inverse of <code>project</code>. Projects a 2D point into geographical location.</td>
	</tr>
</table>

<h3>Defined Projections</h3>

<p>Leaflet comes with a set of already defined projections out of the box:</p>

<table data-id='projections'>
	<tr>
		<th>Projection</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.Projection.SphericalMercator</b></code></td>

		<td>Spherical Mercator projection &mdash; the most common projection for online maps, used by almost all free and commercial tile providers. Assumes that Earth is a sphere. Used by the <code>EPSG:3857</code> CRS.</td>
	</tr>
	<tr>
		<td><code><b>L.Projection.Mercator</b></code></td>

		<td>Elliptical Mercator projection &mdash; more complex than Spherical Mercator. Takes into account that Earth is a geoid, not a perfect sphere. Used by the <code>EPSG:3395</code> CRS.</td>
	</tr>
	<tr>
		<td><code><b>L.Projection.LonLat</b></code></td>

		<td>Equirectangular, or Plate Carree projection &mdash; the most simple projection, mostly used by GIS enthusiasts. Directly maps <code>x</code> as longitude, and <code>y</code> as latitude. Also suitable for flat worlds, e.g. game maps. Used by the <code>EPSG:3395</code> and <code>Simple</code> CRS.</td>
	</tr>
</table>




<h2 id="icrs">ICRS</h2>

<p>Defines coordinate reference systems for projecting geographical points into pixel (screen) coordinates and back (and to coordinates in other units for WMS services). See <a href="http://en.wikipedia.org/wiki/Coordinate_reference_system">Spatial reference system</a>.</p>

<h3>Methods</h3>

<table data-id='icrs'>
	<tr>
		<th>Method</th>
		<th>Returns</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>latLngToPoint</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i></nobr>,
			<nobr>&lt;Number&gt; <i>zoom</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Projects geographical coordinates on a given zoom into pixel coordinates.</td>
	</tr>
	<tr>
		<td><code><b>pointToLatLng</b>(
			<nobr>&lt;<a href="#point">Point</a>&gt; <i>point</i></nobr>,
			<nobr>&lt;Number&gt; <i>zoom</i> )</nobr>
		</code></td>

		<td><code><a href="#latlng">LatLng</a></code></td>
		<td>The inverse of <code>latLngToPoint</code>. Projects pixel coordinates on a given zoom into geographical coordinates.</td>
	</tr>
	<tr>
		<td><code><b>project</b>(
			<nobr>&lt;<a href="#latlng">LatLng</a>&gt; <i>latlng</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Projects geographical coordinates into coordinates in units accepted for this CRS (e.g. meters for <code>EPSG:3857</code>, for passing it to WMS services).</td>
	</tr>
	<tr>
		<td><code><b>scale</b>(
			<nobr>&lt;Number&gt; <i>zoom</i> )</nobr>
		</code></td>

		<td><code>Number</code></td>
		<td>Returns the scale used when transforming projected coordinates into pixel coordinates for a particular zoom. For example, it returns <code>256 * 2^zoom</code> for Mercator-based CRS.</td>
	</tr>
	<tr>
		<td><code><b>getSize</b>(
			<nobr>&lt;Number&gt; <i>zoom</i> )</nobr>
		</code></td>

		<td><code><a href="#point">Point</a></code></td>
		<td>Returns the size of the world in pixels for a particular zoom.</td>
	</tr>
</table>

<h3>Properties</h3>

<table data-id='icrs'>
	<tr>
		<th>Property</th>
		<th>Type</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>projection</b></code></td>

		<td><code><a href="#iprojection">IProjection</a></code></td>
		<td>Projection that this CRS uses.</td>
	</tr>
	<tr>
		<td><code><b>transformation</b></code></td>

		<td><code><a href="#transformation">Transformation</a></code></td>
		<td>Transformation that this CRS uses to turn projected coordinates into screen coordinates for a particular tile service.</td>
	</tr>

	<tr>
		<td><code><b>code</b></code></td>

		<td><code>String</code></td>
		<td>Standard code name of the CRS passed into WMS services (e.g. <code><span class="string">'EPSG:3857'</span></code>).</td>
	</tr>
</table>

<h3>Defined CRS</h3>

<p>Leaflet comes with a set of already defined CRS to use out of the box:</p>

<table data-id='defined-crs'>
	<tr>
		<th>Projection</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L.CRS.EPSG3857</b></code></td>

		<td>The most common CRS for online maps, used by almost all free and commercial tile providers. Uses Spherical Mercator projection. Set in by default in Map's <code>crs</code> option.</td>
	</tr>
	<tr>
		<td><code><b>L.CRS.EPSG4326</b></code></td>

		<td>A common CRS among GIS enthusiasts. Uses simple Equirectangular projection.</td>
	</tr>
	<tr>
		<td><code><b>L.CRS.EPSG3395</b></code></td>

		<td>Rarely used by some commercial tile providers. Uses Elliptical Mercator projection.</td>
	</tr>
	<tr>
		<td><code><b>L.CRS.Simple</b></code></td>

		<td>A simple CRS that maps longitude and latitude into <code>x</code> and <code>y</code> directly. May be used for maps of flat surfaces (e.g. game maps). Note that the <code>y</code> axis should still be inverted (going from bottom to top).</td>
	</tr>
</table>

<p>If you want to use some obscure CRS not listed here, take a look at the <a href="https://github.com/kartena/Proj4Leaflet">Proj4Leaflet</a> plugin.</p>


<h2 id="global">Global Switches</h2>

<p>Global switches are created for rare cases and generally make Leaflet to not detect a particular browser feature even if it's there. You need to set the switch as a global variable to <code><span class="literal">true</span></code> <em>before</em> including Leaflet on the page, like this:</p>

<pre><code>&lt;script&gt;L_PREFER_CANVAS = true;&lt;/script&gt;
&lt;script src="leaflet.js"&gt;&lt;/script&gt;</code></pre>

<table data-id='global'>
	<tr>
		<th>Switch</th>
		<th>Description</th>
	</tr>
	<tr>
		<td><code><b>L_PREFER_CANVAS</b></code></td>
		<td>Forces Leaflet to use the Canvas back-end (if available) for vector layers instead of SVG. This can increase performance considerably in some cases (e.g. many thousands of circle markers on the map).</td>
	</tr>
	<tr>
		<td><code><b>L_NO_TOUCH</b></code></td>
		<td>Forces Leaflet to not use touch events even if it detects them.</td>
	</tr>
	<tr>
		<td><code><b>L_DISABLE_3D</b></code></td>
		<td>Forces Leaflet to not use hardware-accelerated CSS 3D transforms for positioning (which may cause glitches in some rare environments) even if they're supported.</td>
	</tr>
</table>

<h2 id="noconflict">noConflict</h2>

<p>This method restores the L global variable to the original value it had before Leaflet inclusion, and returns the real Leaflet namespace so you can put it elsewhere, like this:<p>

<pre><code>// L points to some other library
...
// you include Leaflet, it replaces the L variable to Leaflet namespace

var Leaflet = L.noConflict();
// now L points to that other library again, and you can use Leaflet.Map etc.</code></pre>


<h2 id="version">version</h2>

<p>A constant that represents the Leaflet version in use.<p>

<pre><code>L.version // returns "0.5" (or whatever version is currently in use)</code></pre>

<script>
var tables = document.getElementsByTagName('table');
for (var i = 0, len = tables.length; i < len; i++) {
    var id = tables[i].getAttribute('data-id'),
        tds = tables[i].getElementsByTagName('td');
    for (var j = 0, tdLen = tds.length; j < tdLen; j++) {
        if (tds[j].cellIndex === 0) {
            tds[j].parentNode.id = id + '-' + (tds[j].textContent || tds[j].innerText).split('(')[0].toLowerCase();
            tds[j].parentNode.onclick = function(e) {
                if ((window.innerWidth / 2) - e.clientX > 394) window.location.hash = '#' + this.id;
            };
        }
    }
}
</script>


		<div class="footer">
			<hr />
			<p class="quiet">&copy; 2010&ndash;2014 <a href="http://agafonkin.com/en">Vladimir Agafonkin</a>, 2010&ndash;2011 <a href="http://cloudmade.com">CloudMade</a>. Maps &copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors.</p>
		</div>
	</div>

	<script>
		hljs.tabReplace = '    ';

		(function () {
			var codes = document.getElementsByTagName('code'),
				parentClass;

			for (var i = 0, len = codes.length; i < len; i++) {
				if (!codes[i].className) {
					parentClass = codes[i].parentNode.className;
					if (parentClass) {
						codes[i].className = parentClass;
					} else if (codes[i].innerHTML.match(/^\s*&lt;/)) {
						codes[i].className = 'xml';
					} else {
						codes[i].className = 'javascript';
					}
				}
			}
		})();

		(function () {
			var headers = document.getElementsByTagName('h2');

			for (var i = 0, len = headers.length; i < len; i++) {
				if (headers[i].id) {
					headers[i].onclick = function() {
						window.location.hash = '#' + this.id;
					};
				}
			}
		})();

		hljs.initHighlighting();
	</script>

	<script>
		var _gaq = _gaq || [];
		_gaq.push([ '_setAccount', 'UA-4147697-4' ]);
		_gaq.push([ '_trackPageview' ]);

		(function() {
			var ga = document.createElement('script');
			ga.type = 'text/javascript';
			ga.async = true;
			ga.src = ('https:' == document.location.protocol ? 'https://ssl'
					: 'http://www')
					+ '.google-analytics.com/ga.js';
			var s = document.getElementsByTagName('script')[0];
			s.parentNode.insertBefore(ga, s);
		})();
	</script>

	<!--<script>
		var uvOptions = {};
		(function() {
			var uv = document.createElement('script'); uv.type = 'text/javascript'; uv.async = true;
			uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/ygv5CFpu3yBQFTFPOAdFg.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(uv, s);
		})();
	</script>-->
</body>
</html>

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=favicon.png
Content-Type: image/png; name=favicon.png
Content-Location: http://leafletjs.com/docs/images/favicon.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAAa5JREFUeNqEk82KE0EUhb9b+ZmmJww9CC5mo25c9xuI
oCsXZuFCBDEIbgTBeQN9gnEjLqNrQUVEBEGdJzAPoBgUdQgDGqdNJp3uHBf9kxjS
pGpRcKvuOfece8skAWBmVK13B3cCM7ubpumNCzsPzxQ5AHXWrLc/brcl7U2T+LSZ
Y3+wGwK9tQBvvt0KzFwXqS3EaDImaG0Daq8FeP31Zij03lAgRDydUK/VQULYucW3
bjn5Vb/TkfQRKZAEEsNRhNfwEAIUVgK8/HI9lGZdgMKmcRwDVposCCoBJHXzMytX
4jA6Ysv3AZXxlQDPP1/rSArFfE/ThCSd0azVi/LzkxVtlC5jGbvlDwd/IgLfRwhT
Jmt5Wtw8f9aes0CcpgxHx7S8Zq59TQWCBRZx8Dui5W1gZv9VhelDhYkqWSZJwmE0
5uSWX8aLO6T9CgnqF85///WXzWaDRs1lpufm5yIeV7VxV8AkSRkcHbO96eVq5+yS
HlzcedRfCXDl7NMXwPmfw3HPmXGitVHOQjbC6oHuL0+uLX/nZ5+uBmZuz5l1zBzO
XN/MPbl0qntvQW4J8G8A/soCdijYucEAAAAASUVORK5CYII=

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=screen.css
Content-Type: text/css; name=screen.css
Content-Location: http://leafletjs.com/docs/css/blueprint/screen.css
Content-Transfer-Encoding: 8bit

/* -----------------------------------------------------------------------


 Blueprint CSS Framework 1.0
 http://blueprintcss.org

   * Copyright (c) 2007-Present. See LICENSE for more info.
   * See README for instructions on how to use Blueprint.
   * For credits and origins, see AUTHORS.
   * This is a compressed file. See the sources in the 'src' directory.

----------------------------------------------------------------------- */

/* reset.css */
html {margin:0;padding:0;border:0;}
body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {margin:0;padding:0;border:0;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;}
article, aside, dialog, figure, footer, header, hgroup, nav, section {display:block;}
body {line-height:1.5;background:white;}
table {border-collapse:separate;border-spacing:0;}
caption, th, td {text-align:left;font-weight:normal;float:none !important;}
table, th, td {vertical-align:middle;}
blockquote:before, blockquote:after, q:before, q:after {content:'';}
blockquote, q {quotes:"" "";}
a img {border:none;}
/*:focus {outline:0;}*/

/* typography.css */
html {font-size:100.01%;}
body {font-size:75%;color:#222;background:#fff;font-family:"Helvetica Neue", Arial, Helvetica, sans-serif;}
h1, h2, h3, h4, h5, h6 {font-weight:normal;color:#111;}
h1 {font-size:3em;line-height:1;margin-bottom:0.5em;}
h2 {font-size:2em;margin-bottom:0.75em;}
h3 {font-size:1.5em;line-height:1;margin-bottom:1em;}
h4 {font-size:1.2em;line-height:1.25;margin-bottom:1.25em;}
h5 {font-size:1em;font-weight:bold;margin-bottom:1.5em;}
h6 {font-size:1em;font-weight:bold;}
h1 img, h2 img, h3 img, h4 img, h5 img, h6 img {margin:0;}
p {margin:0 0 1.5em;}
.left {float:left !important;}
p .left {margin:1.5em 1.5em 1.5em 0;padding:0;}
.right {float:right !important;}
p .right {margin:1.5em 0 1.5em 1.5em;padding:0;}
a:focus, a:hover {color:#09f;}
a {color:#06c;text-decoration:underline;}
blockquote {margin:1.5em;color:#666;font-style:italic;}
strong, dfn {font-weight:bold;}
em, dfn {font-style:italic;}
sup, sub {line-height:0;}
abbr, acronym {border-bottom:1px dotted #666;}
address {margin:0 0 1.5em;font-style:italic;}
del {color:#666;}
pre {margin:1.5em 0;white-space:pre;}
pre, code, tt {font:1em 'andale mono', 'lucida console', monospace;line-height:1.5;}
li ul, li ol {margin:0;}
ul, ol {margin:0 1.5em 1.5em 0;padding-left:1.5em;}
ul {list-style-type:disc;}
ol {list-style-type:decimal;}
dl {margin:0 0 1.5em 0;}
dl dt {font-weight:bold;}
dd {margin-left:1.5em;}
table {margin-bottom:1.4em;width:100%;}
th {font-weight:bold;}
thead th {background:#c3d9ff;}
th, td, caption {padding:4px 10px 4px 5px; border: 1px solid #ccc;}
/*tbody tr:nth-child(even) td, tbody tr.even td {background:#e5ecf9;}*/
tfoot {font-style:italic;}
caption {background:#eee;}
.small {font-size:.8em;margin-bottom:1.875em;line-height:1.875em;}
.large {font-size:1.2em;line-height:2.5em;margin-bottom:1.25em;}
.hide {display:none;}
.quiet {color:#666;}
.loud {color:#000;}
.highlight {background:#ff0;}
.added {background:#060;color:#fff;}
.removed {background:#900;color:#fff;}
.first {margin-left:0;padding-left:0;}
.last {margin-right:0;padding-right:0;}
.top {margin-top:0;padding-top:0;}
.bottom {margin-bottom:0;padding-bottom:0;}

/* forms.css */
label {font-weight:bold;}
fieldset {padding:0 1.4em 1.4em 1.4em;margin:0 0 1.5em 0;border:1px solid #ccc;}
legend {font-weight:bold;font-size:1.2em;margin-top:-0.2em;margin-bottom:1em;}
fieldset, #IE8#HACK {padding-top:1.4em;}
legend, #IE8#HACK {margin-top:0;margin-bottom:0;}
input[type=text], input[type=password], input.text, input.title, textarea {background-color:#fff;border:1px solid #bbb;}
input[type=text]:focus, input[type=password]:focus, input.text:focus, input.title:focus, textarea:focus {border-color:#666;}
select {background-color:#fff;border-width:1px;border-style:solid;}
input[type=text], input[type=password], input.text, input.title, textarea, select {margin:0.5em 0;}
input.text, input.title {width:300px;padding:5px;}
input.title {font-size:1.5em;}
textarea {width:390px;height:250px;padding:5px;}
form.inline {line-height:3;}
form.inline p {margin-bottom:0;}
.error, .alert, .notice, .success/*, .info*/ {padding:0.8em;margin-bottom:1em;border:2px solid #ddd;}
.error, .alert {background:#fbe3e4;color:#8a1f11;border-color:#fbc2c4;}
.notice {background:#fff6bf;color:#514721;border-color:#ffd324;}
.success {background:#e6efc2;color:#264409;border-color:#c6d880;}
/*.info {background:#d5edf8;color:#205791;border-color:#92cae4;}*/
.error a, .alert a {color:#8a1f11;}
.notice a {color:#514721;}
.success a {color:#264409;}
/*.info a {color:#205791;}*/

/* grid.css */
.container {width:950px;margin:0 auto;}
.showgrid {background:url(src/grid.png);}
.column, .span-1, .span-2, .span-3, .span-4, .span-5, .span-6, .span-7, .span-8, .span-9, .span-10, .span-11, .span-12, .span-13, .span-14, .span-15, .span-16, .span-17, .span-18, .span-19, .span-20, .span-21, .span-22, .span-23, .span-24 {float:left;margin-right:10px;}
.last {margin-right:0;}
.span-1 {width:30px;}
.span-2 {width:70px;}
.span-3 {width:110px;}
.span-4 {width:150px;}
.span-5 {width:190px;}
.span-6 {width:230px;}
.span-7 {width:270px;}
.span-8 {width:310px;}
.span-9 {width:350px;}
.span-10 {width:390px;}
.span-11 {width:430px;}
.span-12 {width:470px;}
.span-13 {width:510px;}
.span-14 {width:550px;}
.span-15 {width:590px;}
.span-16 {width:630px;}
.span-17 {width:670px;}
.span-18 {width:710px;}
.span-19 {width:750px;}
.span-20 {width:790px;}
.span-21 {width:830px;}
.span-22 {width:870px;}
.span-23 {width:910px;}
.span-24 {width:950px;margin-right:0;}
input.span-1, textarea.span-1, input.span-2, textarea.span-2, input.span-3, textarea.span-3, input.span-4, textarea.span-4, input.span-5, textarea.span-5, input.span-6, textarea.span-6, input.span-7, textarea.span-7, input.span-8, textarea.span-8, input.span-9, textarea.span-9, input.span-10, textarea.span-10, input.span-11, textarea.span-11, input.span-12, textarea.span-12, input.span-13, textarea.span-13, input.span-14, textarea.span-14, input.span-15, textarea.span-15, input.span-16, textarea.span-16, input.span-17, textarea.span-17, input.span-18, textarea.span-18, input.span-19, textarea.span-19, input.span-20, textarea.span-20, input.span-21, textarea.span-21, input.span-22, textarea.span-22, input.span-23, textarea.span-23, input.span-24, textarea.span-24 {border-left-width:1px;border-right-width:1px;padding-left:5px;padding-right:5px;}
input.span-1, textarea.span-1 {width:18px;}
input.span-2, textarea.span-2 {width:58px;}
input.span-3, textarea.span-3 {width:98px;}
input.span-4, textarea.span-4 {width:138px;}
input.span-5, textarea.span-5 {width:178px;}
input.span-6, textarea.span-6 {width:218px;}
input.span-7, textarea.span-7 {width:258px;}
input.span-8, textarea.span-8 {width:298px;}
input.span-9, textarea.span-9 {width:338px;}
input.span-10, textarea.span-10 {width:378px;}
input.span-11, textarea.span-11 {width:418px;}
input.span-12, textarea.span-12 {width:458px;}
input.span-13, textarea.span-13 {width:498px;}
input.span-14, textarea.span-14 {width:538px;}
input.span-15, textarea.span-15 {width:578px;}
input.span-16, textarea.span-16 {width:618px;}
input.span-17, textarea.span-17 {width:658px;}
input.span-18, textarea.span-18 {width:698px;}
input.span-19, textarea.span-19 {width:738px;}
input.span-20, textarea.span-20 {width:778px;}
input.span-21, textarea.span-21 {width:818px;}
input.span-22, textarea.span-22 {width:858px;}
input.span-23, textarea.span-23 {width:898px;}
input.span-24, textarea.span-24 {width:938px;}
.append-1 {padding-right:40px;}
.append-2 {padding-right:80px;}
.append-3 {padding-right:120px;}
.append-4 {padding-right:160px;}
.append-5 {padding-right:200px;}
.append-6 {padding-right:240px;}
.append-7 {padding-right:280px;}
.append-8 {padding-right:320px;}
.append-9 {padding-right:360px;}
.append-10 {padding-right:400px;}
.append-11 {padding-right:440px;}
.append-12 {padding-right:480px;}
.append-13 {padding-right:520px;}
.append-14 {padding-right:560px;}
.append-15 {padding-right:600px;}
.append-16 {padding-right:640px;}
.append-17 {padding-right:680px;}
.append-18 {padding-right:720px;}
.append-19 {padding-right:760px;}
.append-20 {padding-right:800px;}
.append-21 {padding-right:840px;}
.append-22 {padding-right:880px;}
.append-23 {padding-right:920px;}
.prepend-1 {padding-left:40px;}
.prepend-2 {padding-left:80px;}
.prepend-3 {padding-left:120px;}
.prepend-4 {padding-left:160px;}
.prepend-5 {padding-left:200px;}
.prepend-6 {padding-left:240px;}
.prepend-7 {padding-left:280px;}
.prepend-8 {padding-left:320px;}
.prepend-9 {padding-left:360px;}
.prepend-10 {padding-left:400px;}
.prepend-11 {padding-left:440px;}
.prepend-12 {padding-left:480px;}
.prepend-13 {padding-left:520px;}
.prepend-14 {padding-left:560px;}
.prepend-15 {padding-left:600px;}
.prepend-16 {padding-left:640px;}
.prepend-17 {padding-left:680px;}
.prepend-18 {padding-left:720px;}
.prepend-19 {padding-left:760px;}
.prepend-20 {padding-left:800px;}
.prepend-21 {padding-left:840px;}
.prepend-22 {padding-left:880px;}
.prepend-23 {padding-left:920px;}
.border {padding-right:4px;margin-right:5px;border-right:1px solid #ddd;}
.colborder {padding-right:24px;margin-right:25px;border-right:1px solid #ddd;}
.pull-1 {margin-left:-40px;}
.pull-2 {margin-left:-80px;}
.pull-3 {margin-left:-120px;}
.pull-4 {margin-left:-160px;}
.pull-5 {margin-left:-200px;}
.pull-6 {margin-left:-240px;}
.pull-7 {margin-left:-280px;}
.pull-8 {margin-left:-320px;}
.pull-9 {margin-left:-360px;}
.pull-10 {margin-left:-400px;}
.pull-11 {margin-left:-440px;}
.pull-12 {margin-left:-480px;}
.pull-13 {margin-left:-520px;}
.pull-14 {margin-left:-560px;}
.pull-15 {margin-left:-600px;}
.pull-16 {margin-left:-640px;}
.pull-17 {margin-left:-680px;}
.pull-18 {margin-left:-720px;}
.pull-19 {margin-left:-760px;}
.pull-20 {margin-left:-800px;}
.pull-21 {margin-left:-840px;}
.pull-22 {margin-left:-880px;}
.pull-23 {margin-left:-920px;}
.pull-24 {margin-left:-960px;}
.pull-1, .pull-2, .pull-3, .pull-4, .pull-5, .pull-6, .pull-7, .pull-8, .pull-9, .pull-10, .pull-11, .pull-12, .pull-13, .pull-14, .pull-15, .pull-16, .pull-17, .pull-18, .pull-19, .pull-20, .pull-21, .pull-22, .pull-23, .pull-24 {float:left;position:relative;}
.push-1 {margin:0 -40px 1.5em 40px;}
.push-2 {margin:0 -80px 1.5em 80px;}
.push-3 {margin:0 -120px 1.5em 120px;}
.push-4 {margin:0 -160px 1.5em 160px;}
.push-5 {margin:0 -200px 1.5em 200px;}
.push-6 {margin:0 -240px 1.5em 240px;}
.push-7 {margin:0 -280px 1.5em 280px;}
.push-8 {margin:0 -320px 1.5em 320px;}
.push-9 {margin:0 -360px 1.5em 360px;}
.push-10 {margin:0 -400px 1.5em 400px;}
.push-11 {margin:0 -440px 1.5em 440px;}
.push-12 {margin:0 -480px 1.5em 480px;}
.push-13 {margin:0 -520px 1.5em 520px;}
.push-14 {margin:0 -560px 1.5em 560px;}
.push-15 {margin:0 -600px 1.5em 600px;}
.push-16 {margin:0 -640px 1.5em 640px;}
.push-17 {margin:0 -680px 1.5em 680px;}
.push-18 {margin:0 -720px 1.5em 720px;}
.push-19 {margin:0 -760px 1.5em 760px;}
.push-20 {margin:0 -800px 1.5em 800px;}
.push-21 {margin:0 -840px 1.5em 840px;}
.push-22 {margin:0 -880px 1.5em 880px;}
.push-23 {margin:0 -920px 1.5em 920px;}
.push-24 {margin:0 -960px 1.5em 960px;}
.push-1, .push-2, .push-3, .push-4, .push-5, .push-6, .push-7, .push-8, .push-9, .push-10, .push-11, .push-12, .push-13, .push-14, .push-15, .push-16, .push-17, .push-18, .push-19, .push-20, .push-21, .push-22, .push-23, .push-24 {float:left;position:relative;}
div.prepend-top, .prepend-top {margin-top:1.5em;}
div.append-bottom, .append-bottom {margin-bottom:1.5em;}
.box {padding:1.5em;margin-bottom:1.5em;background:#e5eCf9;}
hr {background:#ddd;color:#ddd;clear:both;float:none;width:100%;height:1px;margin:0 0 1.45em;border:none;}
hr.space {background:#fff;color:#fff;visibility:hidden;}
.clearfix:after, .container:after {content:"\0020";display:block;height:0;clear:both;visibility:hidden;overflow:hidden;}
.clearfix, .container {display:block;}
.clear {clear:both;}

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=print.css
Content-Type: text/css; name=print.css
Content-Location: http://leafletjs.com/docs/css/blueprint/print.css
Content-Transfer-Encoding: 8bit

/* -----------------------------------------------------------------------


 Blueprint CSS Framework 1.0
 http://blueprintcss.org

   * Copyright (c) 2007-Present. See LICENSE for more info.
   * See README for instructions on how to use Blueprint.
   * For credits and origins, see AUTHORS.
   * This is a compressed file. See the sources in the 'src' directory.

----------------------------------------------------------------------- */

/* print.css */
body {line-height:1.5;font-family:"Helvetica Neue", Arial, Helvetica, sans-serif;color:#000;background:none;font-size:10pt;}
.container {background:none;}
hr {background:#ccc;color:#ccc;width:100%;height:2px;margin:2em 0;padding:0;border:none;}
hr.space {background:#fff;color:#fff;visibility:hidden;}
h1, h2, h3, h4, h5, h6 {font-family:"Helvetica Neue", Arial, "Lucida Grande", sans-serif;}
code {font:.9em "Courier New", Monaco, Courier, monospace;}
a img {border:none;}
p img.top {margin-top:0;}
blockquote {margin:1.5em;padding:1em;font-style:italic;font-size:.9em;}
.small {font-size:.9em;}
.large {font-size:1.1em;}
.quiet {color:#999;}
.hide {display:none;}
a:link, a:visited {background:transparent;font-weight:700;text-decoration:underline;}
a:link:after, a:visited:after {content:" (" attr(href) ")";font-size:90%;}
------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/paper.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAfQAAAJRCAMAAACEMbV4AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAAwBQTFRF5OTk6enp7Ozs8fHx9fX1////BgYGBwcHCAgI
CQkJCgoKCwsLDAwMDQ0NDg4ODw8PEBAQEREREhISExMTFBQUFRUVFhYWFxcXGBgY
GRkZGhoaGxsbHBwcHR0dHh4eHx8fICAgISEhIiIiIyMjJCQkJSUlJiYmJycnKCgo
KSkpKioqKysrLCwsLS0tLi4uLy8vMDAwMTExMjIyMzMzNDQ0NTU1NjY2Nzc3ODg4
OTk5Ojo6Ozs7PDw8PT09Pj4+Pz8/QEBAQUFBQkJCQ0NDRERERUVFRkZGR0dHSEhI
SUlJSkpKS0tLTExMTU1NTk5OT09PUFBQUVFRUlJSU1NTVFRUVVVVVlZWV1dXWFhY
WVlZWlpaW1tbXFxcXV1dXl5eX19fYGBgYWFhYmJiY2NjZGRkZWVlZmZmZ2dnaGho
aWlpampqa2trbGxsbW1tbm5ub29vcHBwcXFxcnJyc3NzdHR0dXV1dnZ2d3d3eHh4
eXl5enp6e3t7fHx8fX19fn5+f39/gICAgYGBgoKCg4ODhISEhYWFhoaGh4eHiIiI
iYmJioqKi4uLjIyMjY2Njo6Oj4+PkJCQkZGRkpKSk5OTlJSUlZWVlpaWl5eXmJiY
mZmZmpqam5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSkpaWlpqamp6enqKio
qampqqqqq6urrKysra2trq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4
ubm5urq6u7u7vLy8vb29vr6+v7+/wMDAwcHBwsLCw8PDxMTExcXFxsbGx8fHyMjI
ycnJysrKy8vLzMzMzc3Nzs7Oz8/P0NDQ0dHR0tLS09PT1NTU1dXV1tbW19fX2NjY
2dnZ2tra29vb3Nzc3d3d3t7e39/f4ODg4eHh4uLi4+Pj5OTk5eXl5ubm5+fn6Ojo
6enp6urq6+vr7Ozs7e3t7u7u7+/v8PDw8fHx8vLy8/Pz9PT09fX19vb29/f3+Pj4
+fn5+vr6+/v7/Pz8/f39/v7+////elsHPQABPl5JREFUeNp0nVmCJDmOZLHp/a+c
H5AFNI/smempyoxwN9OFBAGRJ1Fd1dVVVdM11TMz09ndPd3V3dW9f6Snq3v2/6/s
msrM/Y893TXdM11ZmdXZVT1VUzXdVZlZVdmNX9EzPVVVub+hG58jM6szszKrqmL/
Q1dWZFZNRWZl7R+u6syMyP0z1dU5PTNdjc+wv7Snez9GdU9Pdtb+4N6P0tVdVZPT
3T011Vk9XbW/vLpnqjKjqqcGv726qqIqO7v3U3TuF8OF694f1dmz37SqsiqqqrsL
f6Kncb2rM/dH+qfM9H6J/dqRVbk/qHUh9o7h4nR1ZmVEdsV+78r99dGDmzBTMz3p
/z7T0zPzde+37Plmvv0XfDw+/9m9lT3d+C/T01/vP67yT93b29n6j9P726un9qno
/VmFu1d5fuhUJ34qHqH+uqf28/rj75faq9zFr6MfzE+7V2u+7q4c/sH9HsVrjee0
ZqZrpvgU6Yd17Z/AB9pf3pVV+qfdPd+3F/Ebf5799tW+6lXhS7gv0955fkX84v29
3c/F3Z/0+dLqlnZXz0z4N+1r3FX4Ge/FO7d1umsSP2pvTk9XT+9bPd98336yzv1D
+FDfvty9j3nua99TnbnvxNR+6v0XVfus9PA+zHlAZxLvWvX7MXE/uu8/767ha42f
0Xy7qqJiv0Fn75KxPyWyfMU699HFqrc/gjehSmvYTCe+/0w3ltEZvju8YN1dqb/U
eOZrqvo8Afvd+Rt/b8d8u2Y2blv5Wazp7m/vGJ7Nrvqmo7sjsPR2TU9lZtbexP0u
VXruM2v/3d6mzOzOrNwlvLEK5ewqVZ1Yr3YVx0axS19mdXVWVVZXZWVG5l6E6srI
wn3aP1xRVYElvzoiqrKqeneSrtZe092dGZ25i3/uv63cv9K9l5W72mANx3q6/2a6
aopvGW5P1+wnzsYvqqyems7Oyqis7P0imXiIsMZM7ycMfOcorMLdVVlT6YuElz8b
W+4+Jl3T2sP2GcYln5701duFiC/U/ozuro7ElQ5+26zIzMzsjN0GKzMjIjOyMrN2
f8zdchJ3D89TV3dHVtUUvnVhn9+HiDtvVezjgCu9O03uXarMzt6nILtyCpv7/pO9
rLGXHEvXfp59EyoTT09Fxt5mffj9bvv1s7KzcnA5K3Nv6D5EvKbcLoPXIbMTz03i
su3TG/ufIysyIjKyp3NXtNxNGfVDRsaupVsn5G69gVcIxUNVz+x/yf0hndzgWUlU
4uqxptgnvTq6qiP26eLf2Ucfz3sF3k4sAvse7LLcua+zVtTK7KneAoQrStUM7/zg
U0xPZ2UW7izXuWKRgcVp709VRYWW0MqMysJO3N01WSittsiprC2VtkzE89NZ+5F2
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
CTWCjlJLfhEB4vcu55F4lZ96XThaGZ8YaSl1NRAGirZnwyWFzcClIiFSA161YZ/k
XB0S6Gsrj7fx0/1JEHvEkGJi5JSZJFkP32L877bvcPvIaR52afEeTejK50/n3G5/
A7crbTN9+OKgn0iLWqP+1Mm9QFe9qeZnGIqSuwWjN+OrfRLarwjWDsZ+k/YS0tKV
Y1f+1lAYIEy2YsGQksxVFRyYECtAuhBXhEmseEZkQkkQAt2ojiRrWSFryDUoOugj
1saVlK7TkFei5Lo8HSEi0D3bWoFsaYVP4Fp0tDJiGczF5hF6lg5Oje2n30ZL1zaZ
tufn2DcCINEWiI3BeSaC7OEg2TOQC6cpJWuiEsJNSlpSKLdeiSPdR/cJobiFgA3W
QnxCuamFlD68KwKCF1mFSdOnjG5ttAVtmUGrTcHHvyPXrUEidWJb1pMp7GJYpCM5
OGTRqA1IcLrwRdJWhiuSMEqSBLOn7WItwSjyMLRQNwIRFeVoOABY087Ahtm26XsQ
iWSDACRcozr91iGbkGvlJlvdiVRxtjAwtk03bHaBjuJLAVuE6mEabSc8+Jiqm1HB
Wp6Vg8z32Dlz1DamVF54u9jzrQ3nNBjXxZk5t3Ts5IVMbYSSQtREDh0qDxL3Jokd
OJbA2Xcyp7S1ocau2RQ5pJ7v+og+9jqmi57xuTIUrae5tCjuLKfF06djVEzG7aTo
ddk5WH2/sdTDl+fSHYwCEJUdtxxNUpQRilRjkj3RUdMdlpHg0Mra/ulEiBvGElE8
LulsCy5R0QyQ7VJ9pmUHfvD97ZrpzYt8hnRGK33mdqNTlq1kC8cO37bZlQprUpP2
QF3Q1BW9u833q5kXDZwoie16HI7YIcDo71X/lnt99fBo8syN/H26fj2de+DZgkAf
qU7ObR+qWOepndsDrO4oBT4Hgyka4vOVfDMDOyUdXWtT4+i/ZN7kxk/ltQS+WRPZ
GLbVI/VUIiqbKTQ+TR+yyypk2Oj94K13ojU9R3T1iEc3GlPiU8O4D1fKxnFDZ49Y
tGmAwdFbgU6JaOd1e3N+CI3CSkbrSBapbyniK3Vwo9CLDrvixt7dNhsj3z3bX2Yo
poZrpruepMiTir7tkkktaClDO7hIgCvbRKTCL7dFI49RZFc0iIXa6CDuKCmu0c/x
DavT++h11QAGoCGWWinoQ20jbDIRUrd72gkMqy0TO5UhZIh1qN7KZnVEA2SCaM15
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
JMhZW8iOpw9ozshpoRbUVf9sUgPUOd8zbjg8wWzZNOaMgiARuXG1R/rrVkif2dBD
I3qmIpTgVPW1xXcyH9Zhbd3H1KQZykXGoNAnYxRcH2ppCcwCEz2lnegHp6MgKlVi
9cKM6gay9plafY9O6BuzohXNqkaIGzjn6J8evEmoBrMktBJq60CXIi1w3ByMOb+L
zKVRq2Uc1VFNq1i79chRBwrgOd2HrM4M8EbmMA5ROjCQQIZOkrQJluWvmH4HkZyu
7mVKd6m6T3+pfPXuQeKMr3reWRfV2H97dlkvBamZDPSdya1yHq62vN68VEFuzUCs
GVflEkeruBEDUWDWOqDTknYH9TPa5DU9H6GG+wbGNeUcBHsSv1NOUdl/CGpb9KGV
atPkuad7Qp4uCvYYPSn4E0YVQkIpWmNFO5DZSOmY6XudOytylmlW6pxX9AOPVegZ
5g8vIVD7BVEKaF42ASPfT7KMukfgCqbB5bkhmlSZNcAje+XYy2BvnR6UwTiwu6/7
flBIhg4FBGN50oQF7RuCmiA/L/YZt50Ttms5cGzzzCnRzAB8JzJXU7sKiUGMauSh
aT+pqCsaSV5sisuFtKFxmnNH6bJcx42yZBjgWh64NdSeHeqjcBbIKJhtgp2cNVwc
oSh3Vks/VRbrXFWm5DLVrHqLwEdF1KWgPYSIMod0sjp24hcMZVEpsNtlnFiNUugI
1T25+bdpPfRDvhIPKGPxUoF3IxnGgRQ/BNlhMkejWMfBpCMs58RzVdl9bzjfnB79
8cM6N+g46U6dSYUWusHYHVdeh4xhOQA5JEfAXKs3isKaRWTVCcIj/X4vyZ6+Uv16
quP6Hue5ORrfqvHNFm46JzMiutYPmcMp3M5+Dpg6qvvrb3heH61f1LKYxIg1D3ua
EqlHLk0maVDflZqboOE+XB8ZobXkMIYeuArcbvmvbLtTe7oDwsR+rkdLef+njpzz
ZW/LYOUKR5FwpzdzsjEvm5kVWj9yEfe+svOnAGIbo6Vcv/BIJ9nPiZD53alv+Uib
+VNHsp3SV3fa30Oo9q39TieFwzBbkf6Fdezr75PzyzExtmWOuRBVP5Dok2RCkRiJ
h/Sd8R9VUMlXFknxYWynRLWry+njH8eb+gK1ZRzXfOVA1wXHcr1z8sWy+/iaVH65
1rRH7V8UplZqatrJx6jiVKjblJPM/ETciSwiRGo0FCyqamZnumWB46g/a87tlTtp
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

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/logo.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAANwAAABJCAYAAABW8UhxAAAAGXRFWHRTb2Z0d2Fy
ZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAA
AAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5U
Y3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6
eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYxIDY0LjE0MDk0OSwgMjAxMC8x
Mi8wNy0xMDo1NzowMSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRw
Oi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpE
ZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRv
YmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
eGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRv
YmUgUGhvdG9zaG9wIENTNS4xIFdpbmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9Inht
cC5paWQ6MzBCMzYyMENDRjkwMTFFMUIyMjNEMzcwNDVCMTNGMUQiIHhtcE1NOkRv
Y3VtZW50SUQ9InhtcC5kaWQ6MzBCMzYyMERDRjkwMTFFMUIyMjNEMzcwNDVCMTNG
MUQiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDozMEIzNjIwQUNGOTAxMUUxQjIyM0QzNzA0NUIxM0YxRCIgc3RSZWY6ZG9jdW1l
bnRJRD0ieG1wLmRpZDozMEIzNjIwQkNGOTAxMUUxQjIyM0QzNzA0NUIxM0YxRCIv
PiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94
cGFja2V0IGVuZD0iciI/PjSXtCgAAC3wSURBVHja7H0JfBXVvf+Zu+RmIyEhC4SE
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

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/sprite.png
Content-Transfer-Encoding: Base64

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
YII=

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/github.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABSElEQVR42o3SPyhG
URjH8VNMEgayvZPNn9fEhEQSs8jwKgb/ynJXkUGKRUazLK9FCm/qpfyZDAZ/Ukxv
jNgQxfep363T5d7urU899znPOfc+5xzn/j7dyKOEdykp1+MSnioV/eAUAfolUM7G
dlAdnWyJWzyjNeEjLXjCHWr8gX0NZLCJCTSgQywe11hGLR2Gk/v0a80oU2w+Y+Jy
NCq29lxB/Tl9zS+OsrFO1Z7gyIIXzCm5lTA5tK3aWbxa8IVBJXdTLLCn2gF8O53z
sJLzKRZYUO0QPix4wIaSlbhImHyJWtWu49GCZe1DBaZ0TNbSsTfxDDnVOJ2E9b9i
L3XahyVkdb62QdfeAsXIhVpT//VhYkSFk+jFKt68Be69yYFyo9FrOq2BvC7KlbfA
DbpwoPeZuLvepn7jNvEc7S7FY38whkWxuOm/wl+03YRsSldOnQAAAABJRU5ErkJg
gg==

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/twitter.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABg0lEQVR42mNgGBTg
3f///Pjk8rdf6nNYcHR/wobz8++9+y4PkwOzzz95b6A369AFbIaAxEByDDOv/GdY
eP8/w5wb//l79n4AGWgw/cD5DddfhTDsf/TWg2HJ4//yE/c9ABmGbEDfybuFIDmG
Ne8QeOWr/yAD+VY+/pyw49ZyoDN+6oEllj//z9C59z+yM+uOP+1D0YyEC859WvH/
/38Nhr333roVnP+yGi4JdCZD267/ChN235NffO0xLgOAQAXszAuvPtmA/YiuCOQi
EMai2WD3x9twfwJN4kFxARE4//T75Sihfe/Tb7v6K18X8m9495kYA0DqUQz4/Pm/
qMHK61fBIUxAc/zpz9uArmZHMQAowAzExvPuf+8EKcClGeT3D79+GWNNcaA0UHf8
ca/88jtPcWl+//u/PcgyFI11B643CnRsewdKAwzTLmCEPChcQOGDVTPU+fJvf/z2
WP/kZw1IYcDRz4dA3gCxQWIgOZAarJrRwkAEqlAblMKgbBG8GoEAABywypxcxzWH
AAAAAElFTkSuQmCC

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://leafletjs.com/docs/images/forum.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAB/UlEQVR42n2S6U5T
URSF77v4U0QKilZtHeFBfAMi4IBMasUGDX8gSALNbXkCAv+MiQomRitztEBpSyc7
T1Auk13ufW5vzwUbdrKSm5y7vrXPPltRqEqFGIr5KAq5CPLZMHKZELLpALKpbWSS
fqQSm0jGN5CI+/An9gvx6DrikTUoRrG5feQEbe+OcW/4CHech7C/PoDtlYYbL/Zx
fbCMa/17uNq7i5aeEizPioiFVyWAk9n84C0BnAR4owNumQF9e7jyXAKiOysSwG3f
H9bT73L60CFsDh1gZUB/Ga3nAfjObOTWb5PZXjVrmi5uv7VvlwAlNPcUYXlSQCS0
LAE8MPvQgWh7+iuEuPUagNLdCxBqpvQmAoSDSyYATdvm0ESqh37yLFRgHaTWB8q1
dHW+AvVLRbTPgJ2ACcBPdfPlvkh1zv3FxMfjWrqh8Q9HcMycCDMrtL0oAWl6ZytN
Wk/Hf2ZD6jyELj/OI+j/KQG8JNyqIZ44v7kxdb635ame3ERmBgS2vBKQiPnEPfVJ
m4xnzSQ2N3bn4N/8IQG8ni30REJmY3VgZ82NXVls+b5LAO82D8Xtfg9VHRdyucbg
mhrDFGlycvSU+VJnBhu/v0mAUUG/F9OeCXhISp0yzA2P0nXPFV7Pz59m6x9Wq6Ej
pV3sSNb/59R6nlMXHnp7je9/m+5JbYP0Ac4AAAAASUVORK5CYII=

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=screen.css
Content-Type: text/css; name=screen.css
Content-Location: http://leafletjs.com/docs/css/screen.css
Content-Transfer-Encoding: 8bit

body {
	background: #f0f0f0 url(../images/paper.png);
	}

.container {
	background: white;
	position: relative;
	z-index: 1;

	padding: 15px 40px 20px;
	width: 790px;

	/*border: 1px solid #dfdfdf;*/
	border-top: 0;

	box-shadow: 0 0 60px rgba(0,0,0,0.15);
	}
h1 {
	margin-bottom: 0;
	}
h1 a {
	display: block;
	height: 0;
	padding-top: 73px;
	width: 220px;
	overflow: hidden;
	background: url(../images/logo.png) 0 0 no-repeat;
	margin-left: -10px;
	margin-bottom: 8px;
	text-decoration: none;

	-webkit-transition: 0.8s all;

	/*-webkit-animation-duration: 2s;
	-webkit-animation-delay: 15s;
	-webkit-animation-name: autumn;
	-webkit-animation-iteration-count: 2;
	-webkit-animation-direction: alternate;*/
	}

@-webkit-keyframes autumn {
	from { -webkit-filter: none; }
	to { -webkit-filter: hue-rotate(-70deg) saturate(1.5); }
}

h1 a:hover, h1 a:focus {
	-webkit-filter: hue-rotate(-70deg) saturate(1.5);
}



h2 {
	font-size: 1.8em;
	margin-top: 20px;
	margin-bottom: 16px;
	font-weight: bold;
	padding: 4px 12px 3px;
	margin-left: 0;
	margin-right: 0;
	background: #edeeef;
	border-right: 1px solid #ccc;
	border-bottom: 1px solid #ccc;

	color: white;

	background-color: #b0de5c;
	background-image: -moz-linear-gradient(top, #b0de5c, #82cb00); /* FF3.6 */
	background-image: -o-linear-gradient(top, #b0de5c, #82cb00); /* Opera 11.10+ */
	background-image: -webkit-gradient(linear, left top, left bottom, from(#b0de5c), to(#82cb00)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, #b0de5c, #82cb00); /* Chrome 10+, Saf5.1+ */
	background-image: linear-gradient(top, #b0de5c, #82cb00);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#b0de5c', EndColorStr='#82cb00'); /* IE6�IE9 */

	border-radius: 5px;

	text-shadow: 0 -1px 1px rgba(0,0,0,0.35);
	}

.api-page h2 {
	cursor: pointer;
	}

.api-page h2[id]:before,
.api-page tr[id] td:first-child:before {
	content: 'Permalink';
	display: inline-block;
	margin: 0px 5px 0px -35px;
	width: 30px;
	height: 20px;
	line-height: 20px;
	vertical-align: baseline;
	background: url(../images/sprite.png) -0px -0px no-repeat;
	opacity: 0.2;
	border-radius: 50%;
	text-indent: -9999px;
	overflow: hidden;
	cursor: pointer;
	position: absolute;
	}

.api-page tr[id] td:first-child:before {
    opacity:0;
    }

.api-page tr[id]:hover td:first-child:before {
    opacity:1;
    }

.api-page h2[id]:hover:before { opacity:1; }

.api-page h2 {
	margin-top: 2.5em;
	}
h3 {
	margin-top: 1.5em;
	}
h3.alt {
	margin-top: 0;
	}
h4 {
	margin-bottom: 0.5em;
	line-height: inherit;
	font-size: 1.1em;
	font-weight: bold;
	color: #777;
	}

h3.alt {
	color: #999;
	font-family: Georgia, serif;
	font-style: italic;
	font-weight: normal;
	font-size: 1.7em;
	}

.container code, .container pre code {
	font-family: "Consolas", "Menlo", "Lucida Console", "Courier New", monospace;
	}
.container pre code {
	padding: 10px 15px;
	border: 1px solid #ccc;
	background: white;
	color: #444;

	box-shadow: 0 0 15px #ddd;

	border-radius: 5px;
	}
pre code a {
	text-decoration: none;
	}
pre code a:hover {
	text-decoration: underline;
	}

p code, td:last-child code {
	color: #666;
}

p, ul, ol, table {
	font-size: 13px;
}
code {
	font-size: 12px;
}

/*.api-page td:last-child pre {
	margin-top: 0.5em;
}*/

table {
	border-collapse: collapse;
	box-shadow: 0 3px 15px #f0f0f0;
	}
th {
	background-color: #eeeeee;
	background-image: -webkit-gradient(linear, left top, left bottom, from(#eeeeee), to(#d7d7d7)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, #eeeeee, #d7d7d7); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:    -moz-linear-gradient(top, #eeeeee, #d7d7d7); /* FF3.6+ */
	background-image:      -o-linear-gradient(top, #eeeeee, #d7d7d7); /* Opera 11.10+ */
	background-image:         linear-gradient(to bottom, #eeeeee, #d7d7d7);

	text-shadow: 1px 1px 0 white;

	padding: 5px 10px;
	}
th, td {
	vertical-align: top;
	/*line-height: 1.4;*/
	}
td {
	padding: 8px 10px;
	/*border-right: 1px solid #eee;*/
}


.nav {
	padding: 0;
	margin: 28px 0 28px;

	list-style: none;
	font-size: 1.2em;
	border: 1px solid #dcddde;
	overflow: hidden;

	background-color: #ffffff;
	background-image: -webkit-gradient(linear, left top, left bottom, from(#ffffff), to(#eaebec)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, #ffffff, #eaebec); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:    -moz-linear-gradient(top, #ffffff, #eaebec); /* FF3.6+ */
	background-image:      -o-linear-gradient(top, #ffffff, #eaebec); /* Opera 11.10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#ffffff', EndColorStr='#eff0f1'); /* IE6-IE9 */

	border-radius: 10px;
	box-shadow: 0 0 8px #eee;
	}

	.nav li a, .nav li span {
		float: left;
		padding: 0 13px;
		border-right: 1px solid #ddd;
		text-shadow: 1px 1px 0 white;
		line-height: 40px;
		}
	.nav a {
		text-decoration: none;
		color: #000;
		background-color: rgba(0,0,0,0);
		background-repeat: no-repeat;
		-webkit-transition: 0.08s all;
	}
	.nav li span {
		color: #000;

		background-color: #e8e9ea;
		background-color: #f3f4f5;
		background-image: -webkit-gradient(linear, left top, left bottom, from(#f3f4f5), to(#cacbcc)); /* Saf4+, Chrome */
		background-image: -webkit-linear-gradient(top, #f3f4f5, #cacbcc); /* Chrome 10+, Saf5.1+, iOS 5+ */
		background-image:    -moz-linear-gradient(top, #f3f4f5, #cacbcc); /* FF3.6+ */
		background-image:      -o-linear-gradient(top, #f3f4f5, #cacbcc); /* Opera 11.10+ */
		filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#f8f9fa', EndColorStr='#d4d5d6');
	}
	.nav li a:hover, .nav li a:focus {
		color: black;

		background-color: rgba(0,0,0,0.03);

		filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#eff0f1', EndColorStr='#f6f7f8');
	}
	.nav li a.active {
		color: black;

		background-color: rgba(0,0,0,0.06);

		filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#eff0f1', EndColorStr='#f6f7f8');
	}
	.nav li a.github-link,
	.nav li a.twitter-link,
	.nav li a.forum-link {
		font-size: 12px;
		color: #555;
		float: right;
		border-right: none;
		border-left: 1px solid #ddd;
		padding-left: 30px;
		padding-right: 10px;
		filter: none;
		background-position: 9px 12px;
		}
	.nav li a.github-link {
		background-image: url(../images/github.png);
		background-position: 10px 12px;
		padding-left: 32px;
		}
	.nav li a.twitter-link {
		background-image: url(../images/twitter.png);
		}
	.nav li a.forum-link {
		padding-right: 12px;
		background-image: url(../images/forum.png);
	}
	.nav li a.github-link:hover,
	.nav li a.twitter-link:hover,
	.nav li a.forum-link:hover {
		color: black;
	}


#toc {
	padding-left: 20px;
	}
	#toc ul {
		list-style-type: none;
		padding-left: 0;
		}
	#toc .colborder {
		padding-right: 14px;
		}

#map-class {
	margin-top: 1em;
	}
a.nodocs {
	color: #bbb;
	}

#features {
	margin-top: -1.5em;
	}
	#features .quiet {
		color: #777;
		}
	.noimpl {
		color: #bbb;
		}

.container .map {
	border: 1px solid #ccc;
	margin: 1.5em 0;
}
.container .map:focus {
	border-color: #999;
}

h3 span {
	color: #888;
	}
h3.alt a {
	color: #56b1ee;
	text-decoration: none;
}
h3.alt a:hover {
	text-decoration: underline;
}

.example-img {
	float: left;
	margin: 0 18px 18px 0;
	padding: 1px;
	}
.bordered-img {
	padding: 0;
	border: 1px solid #ddd;
	}

.text-cut[class] {
	font-size: 0;
	color: white;
}

.text-cut:after {
	content: attr(data-cut);
	font-size: 12px;
	color: #777;
}

.last ul {
	margin-right: 0;
}

table td {
	color: #666;
}
table td:first-child {
	color: #777;
}
table td:last-child {
	color: black;
}

table td code i {
	color: #00A707;
}

table td code b {
	color: black;
	font-weight: normal;
}

.width250 {
	width: 250px;
}
.width200 {
	width: 200px;
}
.width300 {
	width: 300px;
}
.width100 {
	width: 100px;
}
.width140 {
	width: 140px;
}
.minwidth {
	width: 1px;
}

table.factory-table {
	width: 1px;
}

table.factory-table td, table.factory-table th {
	white-space: nowrap;
	color: black;
}

.factory-usage {
	white-space: nowrap;
}

.factory-usage code {
	color: black;
}

.social-buttons {
	margin: 18px 0 0;
	padding: 6px 0 2px 8px;
	background: #f3f3f3;
	position: absolute;
	top: 10px;
	right: 40px;
	border-radius: 5px;
}

.twitter-follow-button {
	margin-left: 10px;
}

.footer {
	margin-top: 2.5em;
}

dl {
	overflow: hidden;
}

dl dt {
	font-size: 14px;
	font-weight: normal;
	float: left;
	clear: left;
	width: 160px;
}

dl dd {
	margin-bottom: 2em;
	float: left;
	width: 500px;
}

.plugins td:first-child, .plugins td:last-child {
	white-space: nowrap;
}

.plugins td {
	color: black;
}


#back-to-top {
	text-decoration: none;
	padding: 0px 10px 2px;
	background: white;
	color: black;
	font-weight: bold;
	font-size: 16px;
	position: fixed;
	top: -1px;
	left: 0;
	box-shadow: 0 3px 20px rgba(0, 0, 0, 0.1);
}

.api-page td pre {
	margin: 1em 0 0;

}

.api-page td pre code {
	padding: 0 10px;
	border: 0;
	box-shadow: none;
}


p.notice {
	border: none;
	border-radius: 10px;
	color: #444;
	background: #DBF8A7;
	padding: 5px 10px;
	margin-bottom: 1.5em;
}

.usedby a {
	text-decoration: none;
	margin: 0 2px;
	color: #777;
	font-size: 13px;
}

.usedby a:hover {
	text-decoration: underline;
	color: black;
}

.usedby {
	background: #f3f3f3;
	border-radius: 5px;
	padding: 5px 7px;
	margin: 1.5em -7px;
	white-space: nowrap;
	overflow: hidden;
}

.post-title {
	margin-top: 0;
}

.post-date {
	color: #777;
	font-size: 18px;
	line-height: 1;
}

.post-meta {
	color: #888;
	margin-top: -1em;
}

#disqus_thread {
	margin-top: 3em;
}

tr:target {
	background: yellow;
	-webkit-animation: highlight 2s ease 0.5s 1 normal forwards;
	   -moz-animation: highlight 2s ease 0.5s 1 normal forwards;
	     -o-animation: highlight 2s ease 0.5s 1 normal forwards;
	        animation: highlight 2s ease 0.5s 1 normal forwards;
}

@-webkit-keyframes highlight {
	0%   { background: yellow; }
	100% { background: white; }
}
@-moz-keyframes highlight {
	0%   { background: yellow; }
	100% { background: white; }
}
@keyframes highlight {
	0%   { background: yellow; }
	100% { background: white; }
}

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=highlight.pack.js
Content-Type: application/javascript; charset=utf-8; name=highlight.pack.js
Content-Location: http://leafletjs.com/docs/highlight/highlight.pack.js
Content-Transfer-Encoding: Base64

dmFyIGhsanM9bmV3IGZ1bmN0aW9uKCl7ZnVuY3Rpb24gbShwKXtyZXR1cm4gcC5y
ZXBsYWNlKC8mL2dtLCImYW1wOyIpLnJlcGxhY2UoLzwvZ20sIiZsdDsiKX1mdW5j
dGlvbiBmKHIscSxwKXtyZXR1cm4gUmVnRXhwKHEsIm0iKyhyLmNJPyJpIjoiIikr
KHA/ImciOiIiKSl9ZnVuY3Rpb24gYihyKXtmb3IodmFyIHA9MDtwPHIuY2hpbGRO
b2Rlcy5sZW5ndGg7cCsrKXt2YXIgcT1yLmNoaWxkTm9kZXNbcF07aWYocS5ub2Rl
TmFtZT09IkNPREUiKXtyZXR1cm4gcX1pZighKHEubm9kZVR5cGU9PTMmJnEubm9k
ZVZhbHVlLm1hdGNoKC9ccysvKSkpe2JyZWFrfX19ZnVuY3Rpb24gaCh0LHMpe3Zh
ciBwPSIiO2Zvcih2YXIgcj0wO3I8dC5jaGlsZE5vZGVzLmxlbmd0aDtyKyspe2lm
KHQuY2hpbGROb2Rlc1tyXS5ub2RlVHlwZT09Myl7dmFyIHE9dC5jaGlsZE5vZGVz
W3JdLm5vZGVWYWx1ZTtpZihzKXtxPXEucmVwbGFjZSgvXG4vZywiIil9cCs9cX1l
bHNle2lmKHQuY2hpbGROb2Rlc1tyXS5ub2RlTmFtZT09IkJSIil7cCs9IlxuIn1l
bHNle3ArPWgodC5jaGlsZE5vZGVzW3JdKX19fWlmKC9NU0lFIFs2NzhdLy50ZXN0
KG5hdmlnYXRvci51c2VyQWdlbnQpKXtwPXAucmVwbGFjZSgvXHIvZywiXG4iKX1y
ZXR1cm4gcH1mdW5jdGlvbiBhKHMpe3ZhciByPXMuY2xhc3NOYW1lLnNwbGl0KC9c
cysvKTtyPXIuY29uY2F0KHMucGFyZW50Tm9kZS5jbGFzc05hbWUuc3BsaXQoL1xz
Ky8pKTtmb3IodmFyIHE9MDtxPHIubGVuZ3RoO3ErKyl7dmFyIHA9cltxXS5yZXBs
YWNlKC9ebGFuZ3VhZ2UtLywiIik7aWYoZVtwXXx8cD09Im5vLWhpZ2hsaWdodCIp
e3JldHVybiBwfX19ZnVuY3Rpb24gYyhyKXt2YXIgcD1bXTsoZnVuY3Rpb24gcSh0
LHUpe2Zvcih2YXIgcz0wO3M8dC5jaGlsZE5vZGVzLmxlbmd0aDtzKyspe2lmKHQu
Y2hpbGROb2Rlc1tzXS5ub2RlVHlwZT09Myl7dSs9dC5jaGlsZE5vZGVzW3NdLm5v
ZGVWYWx1ZS5sZW5ndGh9ZWxzZXtpZih0LmNoaWxkTm9kZXNbc10ubm9kZU5hbWU9
PSJCUiIpe3UrPTF9ZWxzZXtpZih0LmNoaWxkTm9kZXNbc10ubm9kZVR5cGU9PTEp
e3AucHVzaCh7ZXZlbnQ6InN0YXJ0IixvZmZzZXQ6dSxub2RlOnQuY2hpbGROb2Rl
c1tzXX0pO3U9cSh0LmNoaWxkTm9kZXNbc10sdSk7cC5wdXNoKHtldmVudDoic3Rv
cCIsb2Zmc2V0OnUsbm9kZTp0LmNoaWxkTm9kZXNbc119KX19fX1yZXR1cm4gdX0p
KHIsMCk7cmV0dXJuIHB9ZnVuY3Rpb24gayh5LHcseCl7dmFyIHE9MDt2YXIgej0i
Ijt2YXIgcz1bXTtmdW5jdGlvbiB1KCl7aWYoeS5sZW5ndGgmJncubGVuZ3RoKXtp
Zih5WzBdLm9mZnNldCE9d1swXS5vZmZzZXQpe3JldHVybih5WzBdLm9mZnNldDx3
WzBdLm9mZnNldCk/eTp3fWVsc2V7cmV0dXJuIHdbMF0uZXZlbnQ9PSJzdGFydCI/
eTp3fX1lbHNle3JldHVybiB5Lmxlbmd0aD95Ond9fWZ1bmN0aW9uIHQoRCl7dmFy
IEE9IjwiK0Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtmb3IodmFyIEI9MDtCPEQu
YXR0cmlidXRlcy5sZW5ndGg7QisrKXt2YXIgQz1ELmF0dHJpYnV0ZXNbQl07QSs9
IiAiK0Mubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihDLnZhbHVlIT09dW5kZWZp
bmVkJiZDLnZhbHVlIT09ZmFsc2UmJkMudmFsdWUhPT1udWxsKXtBKz0nPSInK20o
Qy52YWx1ZSkrJyInfX1yZXR1cm4gQSsiPiJ9d2hpbGUoeS5sZW5ndGh8fHcubGVu
Z3RoKXt2YXIgdj11KCkuc3BsaWNlKDAsMSlbMF07eis9bSh4LnN1YnN0cihxLHYu
b2Zmc2V0LXEpKTtxPXYub2Zmc2V0O2lmKHYuZXZlbnQ9PSJzdGFydCIpe3orPXQo
di5ub2RlKTtzLnB1c2godi5ub2RlKX1lbHNle2lmKHYuZXZlbnQ9PSJzdG9wIil7
dmFyIHAscj1zLmxlbmd0aDtkb3tyLS07cD1zW3JdO3orPSgiPC8iK3Aubm9kZU5h
bWUudG9Mb3dlckNhc2UoKSsiPiIpfXdoaWxlKHAhPXYubm9kZSk7cy5zcGxpY2Uo
ciwxKTt3aGlsZShyPHMubGVuZ3RoKXt6Kz10KHNbcl0pO3IrK319fX1yZXR1cm4g
eittKHguc3Vic3RyKHEpKX1mdW5jdGlvbiBqKCl7ZnVuY3Rpb24gcSh3LHksdSl7
aWYody5jb21waWxlZCl7cmV0dXJufXZhciBzPVtdO2lmKHcuayl7dmFyIHI9e307
ZnVuY3Rpb24geChELEMpe3ZhciBBPUMuc3BsaXQoIiAiKTtmb3IodmFyIHo9MDt6
PEEubGVuZ3RoO3orKyl7dmFyIEI9QVt6XS5zcGxpdCgifCIpO3JbQlswXV09W0Qs
QlsxXT9OdW1iZXIoQlsxXSk6MV07cy5wdXNoKEJbMF0pfX13LmxSPWYoeSx3Lmx8
fGhsanMuSVIsdHJ1ZSk7aWYodHlwZW9mIHcuaz09InN0cmluZyIpe3goImtleXdv
cmQiLHcuayl9ZWxzZXtmb3IodmFyIHYgaW4gdy5rKXtpZighdy5rLmhhc093blBy
b3BlcnR5KHYpKXtjb250aW51ZX14KHYsdy5rW3ZdKX19dy5rPXJ9aWYoIXUpe2lm
KHcuYldLKXt3LmI9IlxcYigiK3Muam9pbigifCIpKyIpXFxzIn13LmJSPWYoeSx3
LmI/dy5iOiJcXEJ8XFxiIik7aWYoIXcuZSYmIXcuZVcpe3cuZT0iXFxCfFxcYiJ9
aWYody5lKXt3LmVSPWYoeSx3LmUpfX1pZih3Lmkpe3cuaVI9Zih5LHcuaSl9aWYo
dy5yPT09dW5kZWZpbmVkKXt3LnI9MX1pZighdy5jKXt3LmM9W119dy5jb21waWxl
ZD10cnVlO2Zvcih2YXIgdD0wO3Q8dy5jLmxlbmd0aDt0Kyspe2lmKHcuY1t0XT09
InNlbGYiKXt3LmNbdF09d31xKHcuY1t0XSx5LGZhbHNlKX1pZih3LnN0YXJ0cyl7
cSh3LnN0YXJ0cyx5LGZhbHNlKX19Zm9yKHZhciBwIGluIGUpe2lmKCFlLmhhc093
blByb3BlcnR5KHApKXtjb250aW51ZX1xKGVbcF0uZE0sZVtwXSx0cnVlKX19ZnVu
Y3Rpb24gZChELEUpe2lmKCFqLmNhbGxlZCl7aigpO2ouY2FsbGVkPXRydWV9ZnVu
Y3Rpb24gcyhyLE8pe2Zvcih2YXIgTj0wO048Ty5jLmxlbmd0aDtOKyspe3ZhciBN
PU8uY1tOXS5iUi5leGVjKHIpO2lmKE0mJk0uaW5kZXg9PTApe3JldHVybiBPLmNb
Tl19fX1mdW5jdGlvbiB3KE0scil7aWYocFtNXS5lJiZwW01dLmVSLnRlc3Qocikp
e3JldHVybiAxfWlmKHBbTV0uZVcpe3ZhciBOPXcoTS0xLHIpO3JldHVybiBOP04r
MTowfXJldHVybiAwfWZ1bmN0aW9uIHgocixNKXtyZXR1cm4gTS5pJiZNLmlSLnRl
c3Qocil9ZnVuY3Rpb24gTChPLFApe3ZhciBOPVtdO2Zvcih2YXIgTT0wO008Ty5j
Lmxlbmd0aDtNKyspe04ucHVzaChPLmNbTV0uYil9dmFyIHI9cC5sZW5ndGgtMTtk
b3tpZihwW3JdLmUpe04ucHVzaChwW3JdLmUpfXItLX13aGlsZShwW3IrMV0uZVcp
O2lmKE8uaSl7Ti5wdXNoKE8uaSl9cmV0dXJuIE4ubGVuZ3RoP2YoUCxOLmpvaW4o
InwiKSx0cnVlKTpudWxsfWZ1bmN0aW9uIHEoTixNKXt2YXIgTz1wW3AubGVuZ3Ro
LTFdO2lmKE8udD09PXVuZGVmaW5lZCl7Ty50PUwoTyxGKX12YXIgcjtpZihPLnQp
e08udC5sYXN0SW5kZXg9TTtyPU8udC5leGVjKE4pfXJldHVybiByP1tOLnN1YnN0
cihNLHIuaW5kZXgtTSksclswXSxmYWxzZV06W04uc3Vic3RyKE0pLCIiLHRydWVd
fWZ1bmN0aW9uIEEoTyxyKXt2YXIgTT1GLmNJP3JbMF0udG9Mb3dlckNhc2UoKTpy
WzBdO3ZhciBOPU8ua1tNXTtpZihOJiZOIGluc3RhbmNlb2YgQXJyYXkpe3JldHVy
biBOfXJldHVybiBmYWxzZX1mdW5jdGlvbiBHKE0sUSl7TT1tKE0pO2lmKCFRLmsp
e3JldHVybiBNfXZhciByPSIiO3ZhciBQPTA7US5sUi5sYXN0SW5kZXg9MDt2YXIg
Tj1RLmxSLmV4ZWMoTSk7d2hpbGUoTil7cis9TS5zdWJzdHIoUCxOLmluZGV4LVAp
O3ZhciBPPUEoUSxOKTtpZihPKXt5Kz1PWzFdO3IrPSc8c3BhbiBjbGFzcz0iJytP
WzBdKyciPicrTlswXSsiPC9zcGFuPiJ9ZWxzZXtyKz1OWzBdfVA9US5sUi5sYXN0
SW5kZXg7Tj1RLmxSLmV4ZWMoTSl9cmV0dXJuIHIrTS5zdWJzdHIoUCl9ZnVuY3Rp
b24gQihNLE4pe3ZhciByO2lmKE4uc0w9PSIiKXtyPWcoTSl9ZWxzZXtyPWQoTi5z
TCxNKX1pZihOLnI+MCl7eSs9ci5rZXl3b3JkX2NvdW50O0MrPXIucn1yZXR1cm4n
PHNwYW4gY2xhc3M9Iicrci5sYW5ndWFnZSsnIj4nK3IudmFsdWUrIjwvc3Bhbj4i
fWZ1bmN0aW9uIEsocixNKXtpZihNLnNMJiZlW00uc0xdfHxNLnNMPT0iIil7cmV0
dXJuIEIocixNKX1lbHNle3JldHVybiBHKHIsTSl9fWZ1bmN0aW9uIEooTixyKXt2
YXIgTT1OLmNOPyc8c3BhbiBjbGFzcz0iJytOLmNOKyciPic6IiI7aWYoTi5yQil7
eis9TTtOLmJ1ZmZlcj0iIn1lbHNle2lmKE4uZUIpe3orPW0ocikrTTtOLmJ1ZmZl
cj0iIn1lbHNle3orPU07Ti5idWZmZXI9cn19cC5wdXNoKE4pO0MrPU4ucn1mdW5j
dGlvbiBIKE8sTixSKXt2YXIgUz1wW3AubGVuZ3RoLTFdO2lmKFIpe3orPUsoUy5i
dWZmZXIrTyxTKTtyZXR1cm4gZmFsc2V9dmFyIFE9cyhOLFMpO2lmKFEpe3orPUso
Uy5idWZmZXIrTyxTKTtKKFEsTik7cmV0dXJuIFEuckJ9dmFyIE09dyhwLmxlbmd0
aC0xLE4pO2lmKE0pe3ZhciBQPVMuY04/Ijwvc3Bhbj4iOiIiO2lmKFMuckUpe3or
PUsoUy5idWZmZXIrTyxTKStQfWVsc2V7aWYoUy5lRSl7eis9SyhTLmJ1ZmZlcitP
LFMpK1ArbShOKX1lbHNle3orPUsoUy5idWZmZXIrTytOLFMpK1B9fXdoaWxlKE0+
MSl7UD1wW3AubGVuZ3RoLTJdLmNOPyI8L3NwYW4+IjoiIjt6Kz1QO00tLTtwLmxl
bmd0aC0tfXZhciByPXBbcC5sZW5ndGgtMV07cC5sZW5ndGgtLTtwW3AubGVuZ3Ro
LTFdLmJ1ZmZlcj0iIjtpZihyLnN0YXJ0cyl7SihyLnN0YXJ0cywiIil9cmV0dXJu
IFMuckV9aWYoeChOLFMpKXt0aHJvdyJJbGxlZ2FsIn19dmFyIEY9ZVtEXTt2YXIg
cD1bRi5kTV07dmFyIEM9MDt2YXIgeT0wO3ZhciB6PSIiO3RyeXt2YXIgdCx2PTA7
Ri5kTS5idWZmZXI9IiI7ZG97dD1xKEUsdik7dmFyIHU9SCh0WzBdLHRbMV0sdFsy
XSk7dis9dFswXS5sZW5ndGg7aWYoIXUpe3YrPXRbMV0ubGVuZ3RofX13aGlsZSgh
dFsyXSk7cmV0dXJue3I6QyxrZXl3b3JkX2NvdW50OnksdmFsdWU6eixsYW5ndWFn
ZTpEfX1jYXRjaChJKXtpZihJPT0iSWxsZWdhbCIpe3JldHVybntyOjAsa2V5d29y
ZF9jb3VudDowLHZhbHVlOm0oRSl9fWVsc2V7dGhyb3cgSX19fWZ1bmN0aW9uIGco
dCl7dmFyIHA9e2tleXdvcmRfY291bnQ6MCxyOjAsdmFsdWU6bSh0KX07dmFyIHI9
cDtmb3IodmFyIHEgaW4gZSl7aWYoIWUuaGFzT3duUHJvcGVydHkocSkpe2NvbnRp
bnVlfXZhciBzPWQocSx0KTtzLmxhbmd1YWdlPXE7aWYocy5rZXl3b3JkX2NvdW50
K3Mucj5yLmtleXdvcmRfY291bnQrci5yKXtyPXN9aWYocy5rZXl3b3JkX2NvdW50
K3Mucj5wLmtleXdvcmRfY291bnQrcC5yKXtyPXA7cD1zfX1pZihyLmxhbmd1YWdl
KXtwLnNlY29uZF9iZXN0PXJ9cmV0dXJuIHB9ZnVuY3Rpb24gaShyLHEscCl7aWYo
cSl7cj1yLnJlcGxhY2UoL14oKDxbXj5dKz58XHQpKykvZ20sZnVuY3Rpb24odCx3
LHYsdSl7cmV0dXJuIHcucmVwbGFjZSgvXHQvZyxxKX0pfWlmKHApe3I9ci5yZXBs
YWNlKC9cbi9nLCI8YnI+Iil9cmV0dXJuIHJ9ZnVuY3Rpb24gbih0LHcscil7dmFy
IHg9aCh0LHIpO3ZhciB2PWEodCk7dmFyIHkscztpZih2PT0ibm8taGlnaGxpZ2h0
Iil7cmV0dXJufWlmKHYpe3k9ZCh2LHgpfWVsc2V7eT1nKHgpO3Y9eS5sYW5ndWFn
ZX12YXIgcT1jKHQpO2lmKHEubGVuZ3RoKXtzPWRvY3VtZW50LmNyZWF0ZUVsZW1l
bnQoInByZSIpO3MuaW5uZXJIVE1MPXkudmFsdWU7eS52YWx1ZT1rKHEsYyhzKSx4
KX15LnZhbHVlPWkoeS52YWx1ZSx3LHIpO3ZhciB1PXQuY2xhc3NOYW1lO2lmKCF1
Lm1hdGNoKCIoXFxzfF4pKGxhbmd1YWdlLSk/Iit2KyIoXFxzfCQpIikpe3U9dT8o
dSsiICIrdik6dn1pZigvTVNJRSBbNjc4XS8udGVzdChuYXZpZ2F0b3IudXNlckFn
ZW50KSYmdC50YWdOYW1lPT0iQ09ERSImJnQucGFyZW50Tm9kZS50YWdOYW1lPT0i
UFJFIil7cz10LnBhcmVudE5vZGU7dmFyIHA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVu
dCgiZGl2Iik7cC5pbm5lckhUTUw9IjxwcmU+PGNvZGU+Iit5LnZhbHVlKyI8L2Nv
ZGU+PC9wcmU+Ijt0PXAuZmlyc3RDaGlsZC5maXJzdENoaWxkO3AuZmlyc3RDaGls
ZC5jTj1zLmNOO3MucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQocC5maXJzdENoaWxk
LHMpfWVsc2V7dC5pbm5lckhUTUw9eS52YWx1ZX10LmNsYXNzTmFtZT11O3QucmVz
dWx0PXtsYW5ndWFnZTp2LGt3Onkua2V5d29yZF9jb3VudCxyZTp5LnJ9O2lmKHku
c2Vjb25kX2Jlc3Qpe3Quc2Vjb25kX2Jlc3Q9e2xhbmd1YWdlOnkuc2Vjb25kX2Jl
c3QubGFuZ3VhZ2Usa3c6eS5zZWNvbmRfYmVzdC5rZXl3b3JkX2NvdW50LHJlOnku
c2Vjb25kX2Jlc3Qucn19fWZ1bmN0aW9uIG8oKXtpZihvLmNhbGxlZCl7cmV0dXJu
fW8uY2FsbGVkPXRydWU7dmFyIHI9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05h
bWUoInByZSIpO2Zvcih2YXIgcD0wO3A8ci5sZW5ndGg7cCsrKXt2YXIgcT1iKHJb
cF0pO2lmKHEpe24ocSxobGpzLnRhYlJlcGxhY2UpfX19ZnVuY3Rpb24gbCgpe2lm
KHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKXt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5l
cigiRE9NQ29udGVudExvYWRlZCIsbyxmYWxzZSk7d2luZG93LmFkZEV2ZW50TGlz
dGVuZXIoImxvYWQiLG8sZmFsc2UpfWVsc2V7aWYod2luZG93LmF0dGFjaEV2ZW50
KXt3aW5kb3cuYXR0YWNoRXZlbnQoIm9ubG9hZCIsbyl9ZWxzZXt3aW5kb3cub25s
b2FkPW99fX12YXIgZT17fTt0aGlzLkxBTkdVQUdFUz1lO3RoaXMuaGlnaGxpZ2h0
PWQ7dGhpcy5oaWdobGlnaHRBdXRvPWc7dGhpcy5maXhNYXJrdXA9aTt0aGlzLmhp
Z2hsaWdodEJsb2NrPW47dGhpcy5pbml0SGlnaGxpZ2h0aW5nPW87dGhpcy5pbml0
SGlnaGxpZ2h0aW5nT25Mb2FkPWw7dGhpcy5JUj0iW2EtekEtWl1bYS16QS1aMC05
X10qIjt0aGlzLlVJUj0iW2EtekEtWl9dW2EtekEtWjAtOV9dKiI7dGhpcy5OUj0i
XFxiXFxkKyhcXC5cXGQrKT8iO3RoaXMuQ05SPSJcXGIoMFt4WF1bYS1mQS1GMC05
XSt8KFxcZCsoXFwuXFxkKik/fFxcLlxcZCspKFtlRV1bLStdP1xcZCspPykiO3Ro
aXMuQk5SPSJcXGIoMGJbMDFdKykiO3RoaXMuUlNSPSIhfCE9fCE9PXwlfCU9fCZ8
JiZ8Jj18XFwqfFxcKj18XFwrfFxcKz18LHxcXC58LXwtPXwvfC89fDp8O3w8fDw8
fDw8PXw8PXw9fD09fD09PXw+fD49fD4+fD4+PXw+Pj58Pj4+PXxcXD98XFxbfFxc
e3xcXCh8XFxefFxcXj18XFx8fFxcfD18XFx8XFx8fH4iO3RoaXMuQkU9e2I6Ilxc
XFwuIixyOjB9O3RoaXMuQVNNPXtjTjoic3RyaW5nIixiOiInIixlOiInIixpOiJc
XG4iLGM6W3RoaXMuQkVdLHI6MH07dGhpcy5RU009e2NOOiJzdHJpbmciLGI6JyIn
LGU6JyInLGk6IlxcbiIsYzpbdGhpcy5CRV0scjowfTt0aGlzLkNMQ009e2NOOiJj
b21tZW50IixiOiIvLyIsZToiJCJ9O3RoaXMuQ0JMQ0xNPXtjTjoiY29tbWVudCIs
YjoiL1xcKiIsZToiXFwqLyJ9O3RoaXMuSENNPXtjTjoiY29tbWVudCIsYjoiIyIs
ZToiJCJ9O3RoaXMuTk09e2NOOiJudW1iZXIiLGI6dGhpcy5OUixyOjB9O3RoaXMu
Q05NPXtjTjoibnVtYmVyIixiOnRoaXMuQ05SLHI6MH07dGhpcy5CTk09e2NOOiJu
dW1iZXIiLGI6dGhpcy5CTlIscjowfTt0aGlzLmluaGVyaXQ9ZnVuY3Rpb24ocixz
KXt2YXIgcD17fTtmb3IodmFyIHEgaW4gcil7cFtxXT1yW3FdfWlmKHMpe2Zvcih2
YXIgcSBpbiBzKXtwW3FdPXNbcV19fXJldHVybiBwfX0oKTtobGpzLkxBTkdVQUdF
Uy5qYXZhc2NyaXB0PWZ1bmN0aW9uKGEpe3JldHVybntkTTp7azp7a2V5d29yZDoi
aW4gaWYgZm9yIHdoaWxlIGZpbmFsbHkgdmFyIG5ldyBmdW5jdGlvbiBkbyByZXR1
cm4gdm9pZCBlbHNlIGJyZWFrIGNhdGNoIGluc3RhbmNlb2Ygd2l0aCB0aHJvdyBj
YXNlIGRlZmF1bHQgdHJ5IHRoaXMgc3dpdGNoIGNvbnRpbnVlIHR5cGVvZiBkZWxl
dGUiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCB1bmRlZmluZWQgTmFOIEluZmlu
aXR5In0sYzpbYS5BU00sYS5RU00sYS5DTENNLGEuQ0JMQ0xNLGEuQ05NLHtiOiIo
IithLlJTUisifFxcYihjYXNlfHJldHVybnx0aHJvdylcXGIpXFxzKiIsazoicmV0
dXJuIHRocm93IGNhc2UiLGM6W2EuQ0xDTSxhLkNCTENMTSx7Y046InJlZ2V4cCIs
YjoiLyIsZToiL1tnaW1dKiIsYzpbe2I6IlxcXFwvIn1dfV0scjowfSx7Y046ImZ1
bmN0aW9uIixiV0s6dHJ1ZSxlOiJ7IixrOiJmdW5jdGlvbiIsYzpbe2NOOiJ0aXRs
ZSIsYjoiW0EtWmEteiRfXVswLTlBLVphLXokX10qIn0se2NOOiJwYXJhbXMiLGI6
IlxcKCIsZToiXFwpIixjOlthLkNMQ00sYS5DQkxDTE1dLGk6IltcIidcXChdIn1d
LGk6IlxcW3wlIn1dfX19KGhsanMpO2hsanMuTEFOR1VBR0VTLmNzcz1mdW5jdGlv
bihhKXt2YXIgYj17Y046ImZ1bmN0aW9uIixiOmEuSVIrIlxcKCIsZToiXFwpIixj
Olt7ZVc6dHJ1ZSxlRTp0cnVlLGM6W2EuTk0sYS5BU00sYS5RU01dfV19O3JldHVy
bntjSTp0cnVlLGRNOntpOiJbPS98J10iLGM6W2EuQ0JMQ0xNLHtjTjoiaWQiLGI6
IlxcI1tBLVphLXowLTlfLV0rIn0se2NOOiJjbGFzcyIsYjoiXFwuW0EtWmEtejAt
OV8tXSsiLHI6MH0se2NOOiJhdHRyX3NlbGVjdG9yIixiOiJcXFsiLGU6IlxcXSIs
aToiJCJ9LHtjTjoicHNldWRvIixiOiI6KDopP1thLXpBLVowLTlcXF9cXC1cXCtc
XChcXClcXFwiXFwnXSsifSx7Y046ImF0X3J1bGUiLGI6IkAoZm9udC1mYWNlfHBh
Z2UpIixsOiJbYS16LV0rIixrOiJmb250LWZhY2UgcGFnZSJ9LHtjTjoiYXRfcnVs
ZSIsYjoiQCIsZToiW3s7XSIsZUU6dHJ1ZSxrOiJpbXBvcnQgcGFnZSBtZWRpYSBj
aGFyc2V0IixjOltiLGEuQVNNLGEuUVNNLGEuTk1dfSx7Y046InRhZyIsYjphLklS
LHI6MH0se2NOOiJydWxlcyIsYjoieyIsZToifSIsaToiW15cXHNdIixyOjAsYzpb
YS5DQkxDTE0se2NOOiJydWxlIixiOiJbXlxcc10iLHJCOnRydWUsZToiOyIsZVc6
dHJ1ZSxjOlt7Y046ImF0dHJpYnV0ZSIsYjoiW0EtWlxcX1xcLlxcLV0rIixlOiI6
IixlRTp0cnVlLGk6IlteXFxzXSIsc3RhcnRzOntjTjoidmFsdWUiLGVXOnRydWUs
ZUU6dHJ1ZSxjOltiLGEuTk0sYS5RU00sYS5BU00sYS5DQkxDTE0se2NOOiJoZXhj
b2xvciIsYjoiXFwjWzAtOUEtRl0rIn0se2NOOiJpbXBvcnRhbnQiLGI6IiFpbXBv
cnRhbnQifV19fV19XX1dfX19KGhsanMpO2hsanMuTEFOR1VBR0VTLnhtbD1mdW5j
dGlvbihhKXt2YXIgYz0iW0EtWmEtejAtOVxcLl86LV0rIjt2YXIgYj17ZVc6dHJ1
ZSxjOlt7Y046ImF0dHJpYnV0ZSIsYjpjLHI6MH0se2I6Jz0iJyxyQjp0cnVlLGU6
JyInLGM6W3tjTjoidmFsdWUiLGI6JyInLGVXOnRydWV9XX0se2I6Ij0nIixyQjp0
cnVlLGU6IiciLGM6W3tjTjoidmFsdWUiLGI6IiciLGVXOnRydWV9XX0se2I6Ij0i
LGM6W3tjTjoidmFsdWUiLGI6IlteXFxzLz5dKyJ9XX1dfTtyZXR1cm57Y0k6dHJ1
ZSxkTTp7Yzpbe2NOOiJwaSIsYjoiPFxcPyIsZToiXFw/PiIscjoxMH0se2NOOiJk
b2N0eXBlIixiOiI8IURPQ1RZUEUiLGU6Ij4iLHI6MTAsYzpbe2I6IlxcWyIsZToi
XFxdIn1dfSx7Y046ImNvbW1lbnQiLGI6IjwhLS0iLGU6Ii0tPiIscjoxMH0se2NO
OiJjZGF0YSIsYjoiPFxcIVxcW0NEQVRBXFxbIixlOiJcXF1cXF0+IixyOjEwfSx7
Y046InRhZyIsYjoiPHN0eWxlKD89XFxzfD58JCkiLGU6Ij4iLGs6e3RpdGxlOiJz
dHlsZSJ9LGM6W2JdLHN0YXJ0czp7ZToiPC9zdHlsZT4iLHJFOnRydWUsc0w6ImNz
cyJ9fSx7Y046InRhZyIsYjoiPHNjcmlwdCg/PVxcc3w+fCQpIixlOiI+IixrOnt0
aXRsZToic2NyaXB0In0sYzpbYl0sc3RhcnRzOntlOiI8XC9zY3JpcHQ+IixyRTp0
cnVlLHNMOiJqYXZhc2NyaXB0In19LHtiOiI8JSIsZToiJT4iLHNMOiJ2YnNjcmlw
dCJ9LHtjTjoidGFnIixiOiI8Lz8iLGU6Ii8/PiIsYzpbe2NOOiJ0aXRsZSIsYjoi
W14gLz5dKyJ9LGJdfV19fX0oaGxqcyk7aGxqcy5MQU5HVUFHRVMuanNvbj1mdW5j
dGlvbihhKXt2YXIgZT17bGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIn07dmFyIGQ9
W2EuUVNNLGEuQ05NXTt2YXIgYz17Y046InZhbHVlIixlOiIsIixlVzp0cnVlLGVF
OnRydWUsYzpkLGs6ZX07dmFyIGI9e2I6InsiLGU6In0iLGM6W3tjTjoiYXR0cmli
dXRlIixiOidcXHMqIicsZTonIlxccyo6XFxzKicsZUI6dHJ1ZSxlRTp0cnVlLGM6
W2EuQkVdLGk6IlxcbiIsc3RhcnRzOmN9XSxpOiJcXFMifTt2YXIgZj17YjoiXFxb
IixlOiJcXF0iLGM6W2EuaW5oZXJpdChjLHtjTjpudWxsfSldLGk6IlxcUyJ9O2Qu
c3BsaWNlKGQubGVuZ3RoLDAsYixmKTtyZXR1cm57ZE06e2M6ZCxrOmUsaToiXFxT
In19fShobGpzKTs=

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=github.css
Content-Type: text/css; name=github.css
Content-Location: http://leafletjs.com/docs/highlight/styles/github.css
Content-Transfer-Encoding: 8bit

/*

github.com style (c) Vasily Polovnyov <vast@whiteants.net>

*/

pre code {
  display: block; padding: 0.5em;
  color: #000;
  background: #f8f8ff
}

code .comment,
pre .template_comment,
pre .diff .header,
pre .javadoc {
  color: #998;
}

code .keyword,
pre .css .rule .keyword,
pre .winutils,
/*pre .javascript .title,*/
pre .lisp .title,
pre .nginx .title,
pre .subst,
pre .request,
pre .status {
  color: #026D97;
  font-weight: normal;
}

pre .javascript .title {
  color: black;
  font-weight: bold;
}

code .number,
pre .hexcolor,
code .literal {
  color: #00A707
}

code .string,
pre .tag .value,
pre .phpdoc,
pre .tex .formula {
  color: #E43E59;
}

pre .title,
pre .id {
  color: #900;
  font-weight: bold
}

pre .javascript .title,
pre .lisp .title,
pre .subst {
  font-weight: normal
}

pre .class .title,
pre .haskell .type,
pre .vhdl .literal,
pre .tex .command {
  color: #458;
  font-weight: bold
}

pre .tag,
pre .tag .title,
pre .rules .property,
pre .django .tag .keyword {
  color: #000080;
  font-weight: normal
}

pre .attribute,
pre .variable,
pre .instancevar,
pre .lisp .body {
  color: #008080
}

pre .regexp {
  color: #009926
}

pre .class {
  color: #458;
  font-weight: bold
}

pre .symbol,
pre .ruby .symbol .string,
pre .ruby .symbol .keyword,
pre .ruby .symbol .keymethods,
pre .lisp .keyword,
pre .tex .special,
pre .input_number {
  color: #990073
}

pre .builtin,
pre .built_in,
pre .lisp .title {
  color: #0086b3
}

pre .preprocessor,
pre .pi,
pre .doctype,
pre .shebang,
pre .cdata {
  color: #999;
  font-weight: bold
}

pre .deletion {
  background: #fdd
}

pre .addition {
  background: #dfd
}

pre .diff .change {
  background: #0086b3
}

pre .chunk {
  color: #aaa
}

pre .tex .formula {
  opacity: 0.5;
}

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline
Content-Type: text/css
Content-Location: http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css
Content-Transfer-Encoding: 8bit

/* required styles */

.leaflet-map-pane,
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-tile-pane,
.leaflet-tile-container,
.leaflet-overlay-pane,
.leaflet-shadow-pane,
.leaflet-marker-pane,
.leaflet-popup-pane,
.leaflet-overlay-pane svg,
.leaflet-zoom-box,
.leaflet-image-layer,
.leaflet-layer {
	position: absolute;
	left: 0;
	top: 0;
	}
.leaflet-container {
	overflow: hidden;
	-ms-touch-action: none;
	}
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow {
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
	-webkit-user-drag: none;
	}
.leaflet-marker-icon,
.leaflet-marker-shadow {
	display: block;
	}
/* map is broken in FF if you have max-width: 100% on tiles */
.leaflet-container img {
	max-width: none !important;
	}
/* stupid Android 2 doesn't understand "max-width: none" properly */
.leaflet-container img.leaflet-image-layer {
	max-width: 15000px !important;
	}
.leaflet-tile {
	filter: inherit;
	visibility: hidden;
	}
.leaflet-tile-loaded {
	visibility: inherit;
	}
.leaflet-zoom-box {
	width: 0;
	height: 0;
	}
/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */
.leaflet-overlay-pane svg {
	-moz-user-select: none;
	}

.leaflet-tile-pane    { z-index: 2; }
.leaflet-objects-pane { z-index: 3; }
.leaflet-overlay-pane { z-index: 4; }
.leaflet-shadow-pane  { z-index: 5; }
.leaflet-marker-pane  { z-index: 6; }
.leaflet-popup-pane   { z-index: 7; }

.leaflet-vml-shape {
	width: 1px;
	height: 1px;
	}
.lvml {
	behavior: url(#default#VML);
	display: inline-block;
	position: absolute;
	}


/* control positioning */

.leaflet-control {
	position: relative;
	z-index: 7;
	pointer-events: auto;
	}
.leaflet-top,
.leaflet-bottom {
	position: absolute;
	z-index: 1000;
	pointer-events: none;
	}
.leaflet-top {
	top: 0;
	}
.leaflet-right {
	right: 0;
	}
.leaflet-bottom {
	bottom: 0;
	}
.leaflet-left {
	left: 0;
	}
.leaflet-control {
	float: left;
	clear: both;
	}
.leaflet-right .leaflet-control {
	float: right;
	}
.leaflet-top .leaflet-control {
	margin-top: 10px;
	}
.leaflet-bottom .leaflet-control {
	margin-bottom: 10px;
	}
.leaflet-left .leaflet-control {
	margin-left: 10px;
	}
.leaflet-right .leaflet-control {
	margin-right: 10px;
	}


/* zoom and fade animations */

.leaflet-fade-anim .leaflet-tile,
.leaflet-fade-anim .leaflet-popup {
	opacity: 0;
	-webkit-transition: opacity 0.2s linear;
	   -moz-transition: opacity 0.2s linear;
	     -o-transition: opacity 0.2s linear;
	        transition: opacity 0.2s linear;
	}
.leaflet-fade-anim .leaflet-tile-loaded,
.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {
	opacity: 1;
	}

.leaflet-zoom-anim .leaflet-zoom-animated {
	-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);
	   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);
	     -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);
	        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);
	}
.leaflet-zoom-anim .leaflet-tile,
.leaflet-pan-anim .leaflet-tile,
.leaflet-touching .leaflet-zoom-animated {
	-webkit-transition: none;
	   -moz-transition: none;
	     -o-transition: none;
	        transition: none;
	}

.leaflet-zoom-anim .leaflet-zoom-hide {
	visibility: hidden;
	}


/* cursors */

.leaflet-clickable {
	cursor: pointer;
	}
.leaflet-container {
	cursor: -webkit-grab;
	cursor:    -moz-grab;
	}
.leaflet-popup-pane,
.leaflet-control {
	cursor: auto;
	}
.leaflet-dragging .leaflet-container,
.leaflet-dragging .leaflet-clickable {
	cursor: move;
	cursor: -webkit-grabbing;
	cursor:    -moz-grabbing;
	}


/* visual tweaks */

.leaflet-container {
	background: #ddd;
	outline: 0;
	}
.leaflet-container a {
	color: #0078A8;
	}
.leaflet-container a.leaflet-active {
	outline: 2px solid orange;
	}
.leaflet-zoom-box {
	border: 2px dotted #38f;
	background: rgba(255,255,255,0.5);
	}


/* general typography */
.leaflet-container {
	font: 12px/1.5 "Helvetica Neue", Arial, Helvetica, sans-serif;
	}


/* general toolbar styles */

.leaflet-bar {
	box-shadow: 0 1px 5px rgba(0,0,0,0.65);
	border-radius: 4px;
	}
.leaflet-bar a,
.leaflet-bar a:hover {
	background-color: #fff;
	border-bottom: 1px solid #ccc;
	width: 26px;
	height: 26px;
	line-height: 26px;
	display: block;
	text-align: center;
	text-decoration: none;
	color: black;
	}
.leaflet-bar a,
.leaflet-control-layers-toggle {
	background-position: 50% 50%;
	background-repeat: no-repeat;
	display: block;
	}
.leaflet-bar a:hover {
	background-color: #f4f4f4;
	}
.leaflet-bar a:first-child {
	border-top-left-radius: 4px;
	border-top-right-radius: 4px;
	}
.leaflet-bar a:last-child {
	border-bottom-left-radius: 4px;
	border-bottom-right-radius: 4px;
	border-bottom: none;
	}
.leaflet-bar a.leaflet-disabled {
	cursor: default;
	background-color: #f4f4f4;
	color: #bbb;
	}

.leaflet-touch .leaflet-bar a {
	width: 30px;
	height: 30px;
	line-height: 30px;
	}


/* zoom control */

.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
	font: bold 18px 'Lucida Console', Monaco, monospace;
	text-indent: 1px;
	}
.leaflet-control-zoom-out {
	font-size: 20px;
	}

.leaflet-touch .leaflet-control-zoom-in {
	font-size: 22px;
	}
.leaflet-touch .leaflet-control-zoom-out {
	font-size: 24px;
	}


/* layers control */

.leaflet-control-layers {
	box-shadow: 0 1px 5px rgba(0,0,0,0.4);
	background: #fff;
	border-radius: 5px;
	}
.leaflet-control-layers-toggle {
	background-image: url(images/layers.png);
	width: 36px;
	height: 36px;
	}
.leaflet-retina .leaflet-control-layers-toggle {
	background-image: url(images/layers-2x.png);
	background-size: 26px 26px;
	}
.leaflet-touch .leaflet-control-layers-toggle {
	width: 44px;
	height: 44px;
	}
.leaflet-control-layers .leaflet-control-layers-list,
.leaflet-control-layers-expanded .leaflet-control-layers-toggle {
	display: none;
	}
.leaflet-control-layers-expanded .leaflet-control-layers-list {
	display: block;
	position: relative;
	}
.leaflet-control-layers-expanded {
	padding: 6px 10px 6px 6px;
	color: #333;
	background: #fff;
	}
.leaflet-control-layers-selector {
	margin-top: 2px;
	position: relative;
	top: 1px;
	}
.leaflet-control-layers label {
	display: block;
	}
.leaflet-control-layers-separator {
	height: 0;
	border-top: 1px solid #ddd;
	margin: 5px -10px 5px -6px;
	}


/* attribution and scale controls */

.leaflet-container .leaflet-control-attribution {
	background: #fff;
	background: rgba(255, 255, 255, 0.7);
	margin: 0;
	}
.leaflet-control-attribution,
.leaflet-control-scale-line {
	padding: 0 5px;
	color: #333;
	}
.leaflet-control-attribution a {
	text-decoration: none;
	}
.leaflet-control-attribution a:hover {
	text-decoration: underline;
	}
.leaflet-container .leaflet-control-attribution,
.leaflet-container .leaflet-control-scale {
	font-size: 11px;
	}
.leaflet-left .leaflet-control-scale {
	margin-left: 5px;
	}
.leaflet-bottom .leaflet-control-scale {
	margin-bottom: 5px;
	}
.leaflet-control-scale-line {
	border: 2px solid #777;
	border-top: none;
	line-height: 1.1;
	padding: 2px 5px 1px;
	font-size: 11px;
	white-space: nowrap;
	overflow: hidden;
	-moz-box-sizing: content-box;
	     box-sizing: content-box;

	background: #fff;
	background: rgba(255, 255, 255, 0.5);
	}
.leaflet-control-scale-line:not(:first-child) {
	border-top: 2px solid #777;
	border-bottom: none;
	margin-top: -2px;
	}
.leaflet-control-scale-line:not(:first-child):not(:last-child) {
	border-bottom: 2px solid #777;
	}

.leaflet-touch .leaflet-control-attribution,
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	box-shadow: none;
	}
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	border: 2px solid rgba(0,0,0,0.2);
	background-clip: padding-box;
	}


/* popup */

.leaflet-popup {
	position: absolute;
	text-align: center;
	}
.leaflet-popup-content-wrapper {
	padding: 1px;
	text-align: left;
	border-radius: 12px;
	}
.leaflet-popup-content {
	margin: 13px 19px;
	line-height: 1.4;
	}
.leaflet-popup-content p {
	margin: 18px 0;
	}
.leaflet-popup-tip-container {
	margin: 0 auto;
	width: 40px;
	height: 20px;
	position: relative;
	overflow: hidden;
	}
.leaflet-popup-tip {
	width: 17px;
	height: 17px;
	padding: 1px;

	margin: -10px auto 0;

	-webkit-transform: rotate(45deg);
	   -moz-transform: rotate(45deg);
	    -ms-transform: rotate(45deg);
	     -o-transform: rotate(45deg);
	        transform: rotate(45deg);
	}
.leaflet-popup-content-wrapper,
.leaflet-popup-tip {
	background: white;

	box-shadow: 0 3px 14px rgba(0,0,0,0.4);
	}
.leaflet-container a.leaflet-popup-close-button {
	position: absolute;
	top: 0;
	right: 0;
	padding: 4px 4px 0 0;
	text-align: center;
	width: 18px;
	height: 14px;
	font: 16px/14px Tahoma, Verdana, sans-serif;
	color: #c3c3c3;
	text-decoration: none;
	font-weight: bold;
	background: transparent;
	}
.leaflet-container a.leaflet-popup-close-button:hover {
	color: #999;
	}
.leaflet-popup-scrolled {
	overflow: auto;
	border-bottom: 1px solid #ddd;
	border-top: 1px solid #ddd;
	}

.leaflet-oldie .leaflet-popup-content-wrapper {
	zoom: 1;
	}
.leaflet-oldie .leaflet-popup-tip {
	width: 24px;
	margin: 0 auto;

	-ms-filter: "progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)";
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);
	}
.leaflet-oldie .leaflet-popup-tip-container {
	margin-top: -1px;
	}

.leaflet-oldie .leaflet-control-zoom,
.leaflet-oldie .leaflet-control-layers,
.leaflet-oldie .leaflet-popup-content-wrapper,
.leaflet-oldie .leaflet-popup-tip {
	border: 1px solid #999;
	}


/* div icon */

.leaflet-div-icon {
	background: #fff;
	border: 1px solid #666;
	}

------------mQ8e0uCHgjsNvBy4xNu11F
Content-Disposition: inline; filename=leaflet.css
Content-Type: text/css; name=leaflet.css
Content-Location: http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css
Content-Transfer-Encoding: 8bit

/* required styles */

.leaflet-map-pane,
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow,
.leaflet-tile-pane,
.leaflet-tile-container,
.leaflet-overlay-pane,
.leaflet-shadow-pane,
.leaflet-marker-pane,
.leaflet-popup-pane,
.leaflet-overlay-pane svg,
.leaflet-zoom-box,
.leaflet-image-layer,
.leaflet-layer {
	position: absolute;
	left: 0;
	top: 0;
	}
.leaflet-container {
	overflow: hidden;
	-ms-touch-action: none;
	}
.leaflet-tile,
.leaflet-marker-icon,
.leaflet-marker-shadow {
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
	-webkit-user-drag: none;
	}
.leaflet-marker-icon,
.leaflet-marker-shadow {
	display: block;
	}
/* map is broken in FF if you have max-width: 100% on tiles */
.leaflet-container img {
	max-width: none !important;
	}
/* stupid Android 2 doesn't understand "max-width: none" properly */
.leaflet-container img.leaflet-image-layer {
	max-width: 15000px !important;
	}
.leaflet-tile {
	filter: inherit;
	visibility: hidden;
	}
.leaflet-tile-loaded {
	visibility: inherit;
	}
.leaflet-zoom-box {
	width: 0;
	height: 0;
	}
/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */
.leaflet-overlay-pane svg {
	-moz-user-select: none;
	}

.leaflet-tile-pane    { z-index: 2; }
.leaflet-objects-pane { z-index: 3; }
.leaflet-overlay-pane { z-index: 4; }
.leaflet-shadow-pane  { z-index: 5; }
.leaflet-marker-pane  { z-index: 6; }
.leaflet-popup-pane   { z-index: 7; }

.leaflet-vml-shape {
	width: 1px;
	height: 1px;
	}
.lvml {
	behavior: url(#default#VML);
	display: inline-block;
	position: absolute;
	}


/* control positioning */

.leaflet-control {
	position: relative;
	z-index: 7;
	pointer-events: auto;
	}
.leaflet-top,
.leaflet-bottom {
	position: absolute;
	z-index: 1000;
	pointer-events: none;
	}
.leaflet-top {
	top: 0;
	}
.leaflet-right {
	right: 0;
	}
.leaflet-bottom {
	bottom: 0;
	}
.leaflet-left {
	left: 0;
	}
.leaflet-control {
	float: left;
	clear: both;
	}
.leaflet-right .leaflet-control {
	float: right;
	}
.leaflet-top .leaflet-control {
	margin-top: 10px;
	}
.leaflet-bottom .leaflet-control {
	margin-bottom: 10px;
	}
.leaflet-left .leaflet-control {
	margin-left: 10px;
	}
.leaflet-right .leaflet-control {
	margin-right: 10px;
	}


/* zoom and fade animations */

.leaflet-fade-anim .leaflet-tile,
.leaflet-fade-anim .leaflet-popup {
	opacity: 0;
	-webkit-transition: opacity 0.2s linear;
	   -moz-transition: opacity 0.2s linear;
	     -o-transition: opacity 0.2s linear;
	        transition: opacity 0.2s linear;
	}
.leaflet-fade-anim .leaflet-tile-loaded,
.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {
	opacity: 1;
	}

.leaflet-zoom-anim .leaflet-zoom-animated {
	-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);
	   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);
	     -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);
	        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);
	}
.leaflet-zoom-anim .leaflet-tile,
.leaflet-pan-anim .leaflet-tile,
.leaflet-touching .leaflet-zoom-animated {
	-webkit-transition: none;
	   -moz-transition: none;
	     -o-transition: none;
	        transition: none;
	}

.leaflet-zoom-anim .leaflet-zoom-hide {
	visibility: hidden;
	}


/* cursors */

.leaflet-clickable {
	cursor: pointer;
	}
.leaflet-container {
	cursor: -webkit-grab;
	cursor:    -moz-grab;
	}
.leaflet-popup-pane,
.leaflet-control {
	cursor: auto;
	}
.leaflet-dragging .leaflet-container,
.leaflet-dragging .leaflet-clickable {
	cursor: move;
	cursor: -webkit-grabbing;
	cursor:    -moz-grabbing;
	}


/* visual tweaks */

.leaflet-container {
	background: #ddd;
	outline: 0;
	}
.leaflet-container a {
	color: #0078A8;
	}
.leaflet-container a.leaflet-active {
	outline: 2px solid orange;
	}
.leaflet-zoom-box {
	border: 2px dotted #38f;
	background: rgba(255,255,255,0.5);
	}


/* general typography */
.leaflet-container {
	font: 12px/1.5 "Helvetica Neue", Arial, Helvetica, sans-serif;
	}


/* general toolbar styles */

.leaflet-bar {
	box-shadow: 0 1px 5px rgba(0,0,0,0.65);
	border-radius: 4px;
	}
.leaflet-bar a,
.leaflet-bar a:hover {
	background-color: #fff;
	border-bottom: 1px solid #ccc;
	width: 26px;
	height: 26px;
	line-height: 26px;
	display: block;
	text-align: center;
	text-decoration: none;
	color: black;
	}
.leaflet-bar a,
.leaflet-control-layers-toggle {
	background-position: 50% 50%;
	background-repeat: no-repeat;
	display: block;
	}
.leaflet-bar a:hover {
	background-color: #f4f4f4;
	}
.leaflet-bar a:first-child {
	border-top-left-radius: 4px;
	border-top-right-radius: 4px;
	}
.leaflet-bar a:last-child {
	border-bottom-left-radius: 4px;
	border-bottom-right-radius: 4px;
	border-bottom: none;
	}
.leaflet-bar a.leaflet-disabled {
	cursor: default;
	background-color: #f4f4f4;
	color: #bbb;
	}

.leaflet-touch .leaflet-bar a {
	width: 30px;
	height: 30px;
	line-height: 30px;
	}


/* zoom control */

.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
	font: bold 18px 'Lucida Console', Monaco, monospace;
	text-indent: 1px;
	}
.leaflet-control-zoom-out {
	font-size: 20px;
	}

.leaflet-touch .leaflet-control-zoom-in {
	font-size: 22px;
	}
.leaflet-touch .leaflet-control-zoom-out {
	font-size: 24px;
	}


/* layers control */

.leaflet-control-layers {
	box-shadow: 0 1px 5px rgba(0,0,0,0.4);
	background: #fff;
	border-radius: 5px;
	}
.leaflet-control-layers-toggle {
	background-image: url(images/layers.png);
	width: 36px;
	height: 36px;
	}
.leaflet-retina .leaflet-control-layers-toggle {
	background-image: url(images/layers-2x.png);
	background-size: 26px 26px;
	}
.leaflet-touch .leaflet-control-layers-toggle {
	width: 44px;
	height: 44px;
	}
.leaflet-control-layers .leaflet-control-layers-list,
.leaflet-control-layers-expanded .leaflet-control-layers-toggle {
	display: none;
	}
.leaflet-control-layers-expanded .leaflet-control-layers-list {
	display: block;
	position: relative;
	}
.leaflet-control-layers-expanded {
	padding: 6px 10px 6px 6px;
	color: #333;
	background: #fff;
	}
.leaflet-control-layers-selector {
	margin-top: 2px;
	position: relative;
	top: 1px;
	}
.leaflet-control-layers label {
	display: block;
	}
.leaflet-control-layers-separator {
	height: 0;
	border-top: 1px solid #ddd;
	margin: 5px -10px 5px -6px;
	}


/* attribution and scale controls */

.leaflet-container .leaflet-control-attribution {
	background: #fff;
	background: rgba(255, 255, 255, 0.7);
	margin: 0;
	}
.leaflet-control-attribution,
.leaflet-control-scale-line {
	padding: 0 5px;
	color: #333;
	}
.leaflet-control-attribution a {
	text-decoration: none;
	}
.leaflet-control-attribution a:hover {
	text-decoration: underline;
	}
.leaflet-container .leaflet-control-attribution,
.leaflet-container .leaflet-control-scale {
	font-size: 11px;
	}
.leaflet-left .leaflet-control-scale {
	margin-left: 5px;
	}
.leaflet-bottom .leaflet-control-scale {
	margin-bottom: 5px;
	}
.leaflet-control-scale-line {
	border: 2px solid #777;
	border-top: none;
	line-height: 1.1;
	padding: 2px 5px 1px;
	font-size: 11px;
	white-space: nowrap;
	overflow: hidden;
	-moz-box-sizing: content-box;
	     box-sizing: content-box;

	background: #fff;
	background: rgba(255, 255, 255, 0.5);
	}
.leaflet-control-scale-line:not(:first-child) {
	border-top: 2px solid #777;
	border-bottom: none;
	margin-top: -2px;
	}
.leaflet-control-scale-line:not(:first-child):not(:last-child) {
	border-bottom: 2px solid #777;
	}

.leaflet-touch .leaflet-control-attribution,
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	box-shadow: none;
	}
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
	border: 2px solid rgba(0,0,0,0.2);
	background-clip: padding-box;
	}


/* popup */

.leaflet-popup {
	position: absolute;
	text-align: center;
	}
.leaflet-popup-content-wrapper {
	padding: 1px;
	text-align: left;
	border-radius: 12px;
	}
.leaflet-popup-content {
	margin: 13px 19px;
	line-height: 1.4;
	}
.leaflet-popup-content p {
	margin: 18px 0;
	}
.leaflet-popup-tip-container {
	margin: 0 auto;
	width: 40px;
	height: 20px;
	position: relative;
	overflow: hidden;
	}
.leaflet-popup-tip {
	width: 17px;
	height: 17px;
	padding: 1px;

	margin: -10px auto 0;

	-webkit-transform: rotate(45deg);
	   -moz-transform: rotate(45deg);
	    -ms-transform: rotate(45deg);
	     -o-transform: rotate(45deg);
	        transform: rotate(45deg);
	}
.leaflet-popup-content-wrapper,
.leaflet-popup-tip {
	background: white;

	box-shadow: 0 3px 14px rgba(0,0,0,0.4);
	}
.leaflet-container a.leaflet-popup-close-button {
	position: absolute;
	top: 0;
	right: 0;
	padding: 4px 4px 0 0;
	text-align: center;
	width: 18px;
	height: 14px;
	font: 16px/14px Tahoma, Verdana, sans-serif;
	color: #c3c3c3;
	text-decoration: none;
	font-weight: bold;
	background: transparent;
	}
.leaflet-container a.leaflet-popup-close-button:hover {
	color: #999;
	}
.leaflet-popup-scrolled {
	overflow: auto;
	border-bottom: 1px solid #ddd;
	border-top: 1px solid #ddd;
	}

.leaflet-oldie .leaflet-popup-content-wrapper {
	zoom: 1;
	}
.leaflet-oldie .leaflet-popup-tip {
	width: 24px;
	margin: 0 auto;

	-ms-filter: "progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)";
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);
	}
.leaflet-oldie .leaflet-popup-tip-container {
	margin-top: -1px;
	}

.leaflet-oldie .leaflet-control-zoom,
.leaflet-oldie .leaflet-control-layers,
.leaflet-oldie .leaflet-popup-content-wrapper,
.leaflet-oldie .leaflet-popup-tip {
	border: 1px solid #999;
	}


/* div icon */

.leaflet-div-icon {
	background: #fff;
	border: 1px solid #666;
	}

------------mQ8e0uCHgjsNvBy4xNu11F--
